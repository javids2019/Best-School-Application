{"version":3,"sources":["../node_modules/react-nvd3/dist/react-nvd3.min.js","../node_modules/d3/d3.js","../node_modules/nvd3/build/nv.d3.js","../node_modules/react-bootstrap/es/CardContext.js","../node_modules/react-bootstrap/es/Col.js","../node_modules/react-bootstrap/es/utils/divWithClassName.js","../node_modules/react-bootstrap/es/CardImg.js","../node_modules/react-bootstrap/es/Card.js","../node_modules/react-bootstrap/es/Row.js"],"names":["t","e","n","module","exports","__webpack_require__","r","o","id","loaded","call","m","c","p","__esModule","default","Object","defineProperty","value","i","u","s","a","f","l","d","h","y","v","b","g","_","x","O","j","w","S","P","F","this","apply","arguments","key","addGraph","renderChart","bind","isCallable","props","ready","resizeHandler","clear","chart","rendering","models","type","renderStart","parsedProps","bindFunctions","context","getValueFunction","margin","options","pick","propsByPrefix","configureComponents","concat","without","configure","selection","select","refs","svg","datum","utils","windowResize","update","pie","dispatch","lines","renderEnd","on","isPlainObject","chartOptions","containerStyle","createElement","ref","className","style","Component","length","prototype","hasOwnProperty","assign","G","B","W","_e","Function","window","Math","self","__g","version","__e","TypeError","Symbol","split","forEach","keys","join","getKeys","getSymbols","isEnum","create","getProto","getPrototypeOf","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","defineProperties","getNames","getOwnPropertyNames","getOwnPropertySymbols","each","toString","slice","enumerable","configurable","writable","ReferenceError","constructor","get","JSON","E","stringify","M","k","C","D","N","T","q","z","_k","set","A","V","H","I","push","J","R","U","for","keyFor","useSetter","useSimple","_e2","random","Array","isArray","__proto__","setPrototypeOf","check","indexOf","includes","negate","filterObject","name","console","warn","reduce","substr","replace","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","d3_arraySlice","d3_array","list","d3_document","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","array","Date","now","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","ascending","descending","min","max","extent","sum","mean","quantile","values","floor","median","numbers","sort","variance","deviation","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","range","start","stop","step","Infinity","Error","d3_range_integerScale","object","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","listeners","listenerByName","event","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","_d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","enter","exit","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","position","top","padding","border","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","parseRows","eol","EOL","EOF","rows","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","_x","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","L","Z","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","_d","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","_clean","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","ρ0","forward","ρ0_y","clipExtent","_stream","output","valid","conicEqualArea","raw","albers","albersUsa","_point","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","_pointRadius","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","_clean2","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","transform","methods","_stream2","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","d3_geo_mercator","d3_geo_conicEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","nv","dev","tooltip","charts","logs","dom","oThis","aArgs","fToBind","fNOP","fBound","startTime","endTime","totalTime","deprecated","info","render","render_start","renderLoop","graph","generate","render_end","obj","write","fastdom","mutate","read","measure","interactiveGuideline","height","xScale","showGuideLine","svgContainer","isMSIE","ActiveXObject","layer","availableWidth","availableHeight","mouseHandler","mouseX","mouseY","subtractMargin","mouseOutAnyReason","offsetX","offsetY","tagName","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","pointXValue","elementIndex","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","guideLine","NaNtoZero","hideDelay","interactiveBisect","searchVal","xAccessor","_xAccessor","currentValue","nextIndex","nextValue","nearestValueIndex","yDistMax","indexToHighlight","delta","snapDistance","classes","lastPosition","enabled","headerEnabled","valueFormatter","headerFormatter","keyFormatter","contentGenerator","elem","table","trowEnter","highlight","total","percent","opacityScale","outerHTML","footer","pos","client","dataSeriesExists","isObject","positionTooltip","gravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","clientHeight","calcGravityOffset","old_translate","new_translate","translateInterpolator","is_hidden","nvtooltip","newContent","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","isFunction","isDate","isNumber","handler","getColor","defaultColor","color_scale","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","content","href","fragment","replaceChild","history","pushState","state","calcApproxTextWidth","svgTextElem","fontSize","textLength","watchTransition","renderWatch","_duration","renderStack","model","__rendered","arg","every","deepExtend","dst","srcObj","_setState","_getState","init","getter","fn","settings","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","calls","inheritOptionsD3","oplist","_d3options","item","arrayUnique","symbolMap","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","noData","opt","noDataText","wrapTicks","word","words","lineNumber","tspan","getComputedTextLength","arrayEquals","array1","array2","pointIsInArc","pt","ptData","d3Arc","r2","theta1","dist","tickFormatMaxMin","axisLabelText","showMaxMin","rotateLabels","rotateYLabel","staggerLabels","isOrdinal","axisLabelDistance","fmt","xLabelMargin","axisMaxMin","axisLabel","maxTextWidth","textHeight","xTicks","rotateLabelsRule","box","maxMinRange","boxPlot","xDomain","xRange","yDomain","yRange","xScale0","yScale0","yScale","getX","label","getQ1","Q1","getQ2","Q2","getQ3","Q3","getWl","whisker_low","getWh","whisker_high","getOlItems","outliers","getOlValue","getOlLabel","getOlColor","maxBoxWidth","yData","q3","wl","wh","olItems","boxplots","boxEnter","hover","box_width","box_left","box_right","endpoint","elementMouseover","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","xAxis","yAxis","showXAxis","showYAxis","rightAlignYAxis","beforeUpdate","gEnter","defsEnter","disabled","evt","tooltipContent","bullet","markers","markerLines","measures","rangeLabels","markerLabels","markerLineLabels","measureLabels","forceX","defaultRangeLabels","legacyRangeClassNames","sortLabels","labels","lz","iA","iB","rangez","markerz","markerLinez","measurez","rangeLabelz","markerLabelz","markerLineLabelz","measureLabelz","il","rangeClassNames","xp1","h3","markerData","marker","markerLinesData","bulletChart","title","subtitle","bulletWrap","candlestickBar","getY","getOpen","getClose","close","getHigh","high","getLow","low","forceY","padData","clipEdge","interactive","barWidth","wrapEnter","chartClick","tickGroups","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","legend","controls","interactiveLayer","marginTop","showLegend","showControls","useInteractiveGuideline","rescaleY","defaultState","average","noErrorCheck","updateState","currentYDomain","stateGetter","stateSetter","indexDrag","updateZero","stateChange","idx","indexifyYGetter","indexValue","tempDisabled","display","indexify","getCurrentYDomain","interactivePointerEvents","controlsData","rightAlign","linesWrap","seriesIndex","avgLineData","avgLines","getAvgLineY","yVal","indexLine","oldDuration","_ticks","newState","singlePoint","pointXLocation","allData","yValue","xValue","seriesDomains","useVoronoi","discreteBar","showValues","valueFormat","rectClass","seriesData","bars","barsEnter","element","stopPropagation","elementDblClick","discreteBarChart","discretebar","wrapLabels","distribution","getData","naxis","distWrap","focus","brushExtent","syncBrushing","pointActive","contentWrap","onBrush","brushBG","brushBGenter","gBrush","shouldDispatch","leftWidth","rightWidth","xTickFormat","yTickFormat","forceDirectedGraph","linkDist","nodeExtras","linkExtras","nodeFieldSet","Set","nodeColor","furiousLegend","maxKeyLength","radioButtonMode","expanded","vers","setTextColor","disengaged","setBGColor","seriesShape","seriesEnter","versPadding","seriesText","legendMouseover","legendMouseout","legendClick","userDisabled","legendDblclick","seriesWidths","legendText","nodeTextLength","trimmedKey","seriesPerRow","legendWidth","columnWidths","prev","cur","xPositions","curX","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","enableDoubleClick","setBGOpacity","scatter","strokeWidth","isArea","pointSize","pointDomain","scatterWrap","fillOpacity","areaPaths","linePaths","lineChart","legendPosition","focusEnable","focusEnter","updateXAxis","updateYAxis","disableTooltip","currentValues","pointYValue","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","y4","lines2","bars2","y1Axis","y3Axis","y4Axis","margin2","legendLeftAxisHint","legendRightAxisHint","switchYAxisOrder","allDisabled","availableHeight1","availableHeight2","dataBars","bar","dataLines","series1","series2","contextEnter","legendXPosition","originalKey","bars2Wrap","lines2Wrap","dataLine","focusBarsWrap","focusLinesWrap","barsOpacity","linesOpacity","y1Opacity","y2Opacity","main","getLinesAxis","getBarsAxis","multiBar","stacked","stackOffset","hideable","barColor","groupSpacing","last_datalength","nonStackableCount","parsed","nonStackable","nonStackableSeries","posBase","negBase","exitTransition","barSelection","multiBarChart","multibar","controlLabels","reduceXTicks","controlWidth","grouped","getTranslate","totalInBetweenTicks","multiBarHorizontal","getYerr","yErr","showBarLabels","valuePadding","xerr","yerr","multiBarHorizontalChart","controlsPosition","multiChart","yDomain1","yDomain2","yScale1","yScale2","lines1","scatters1","scatters2","bars1","stack1","stackedArea","stack2","yAxis1","yAxis2","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1BarStacked","aVal","extraValue2BarStacked","mouseover_line","yaxis","mouseover_scatter","mouseover_stack","mouseover_bar","serieIndex","parallelCoordinates","foreground","dimensions","undefinedValuesLabel","dimensionData","enabledDimensions","dimensionNames","displayBrush","filters","axisWithUndefinedValues","lineTension","newData","val","dataValues","currentPosition","oldDomainMaxValue","displayMissingValuesline","currentTicks","onlyUndefinedValues","hasOnlyNaN","hasNaN","missingValuesline","missingValueslineText","axisDrag","__origin__","dimensionPosition","dimensionsOrder","lineData","dimensionsEnter","restoreBrush","actives","extents","formerActive","newscale","brushDomain","updateTicks","isActive","hasActiveBrush","brushEnd","activeChanged","dimensionFormats","parallelCoordinatesChart","nanValue","originalPosition","isSorted","str","tp","dim","dd","showLabels","labelsOutside","labelType","labelThreshold","hideOverlapLabels","donut","growOnHover","titleOffset","labelSunbeamLayout","donutRatio","arcsRadius","arcsOver","arcsRadiusOuter","arcsRadiusInner","outer","inner","g_pie","arcOver","slices","pieLabels","ae","_current","labelsArc","rotateAngle","labelLocationHash","createHashKey","getSlicePercentage","hashKey","getBBox","topLeft","topRight","bottomLeft","bottomRight","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","showTooltipPercent","pieWrap","sankey","nodeWidth","nodePadding","sinksRight","iterations","sourceLinks","targetLinks","nextNodes","remainingNodes","moveSinksRight","computeNodeBreadths","nodesByBreadth","initializeNodeDepth","resolveCollisions","computeLinkDepths","relaxRightToLeft","relaxLeftToRight","weightedSource","breadth","weightedTarget","ty","ascendingDepth","computeNodeDepths","curvature","ascendingSourceDepth","ascendingTargetDepth","sankeyChart","units","formatNumber","linkTitle","nodeFillColor","nodeStrokeColor","nodeTitle","showError","message","testData","isDataValid","dataAvailable","nodeStyle","fillColor","strokeColor","xDom","yDom","width0","height0","timeoutID","pointBorderColor","getSize","getShape","shape","forceSize","notActive","padDataOuter","clipVoronoi","showVoronoi","clipRadius","sizeDomain","sizeRange","interactiveUpdateDelay","needsUpdate","_sizeRange_def","_cache","delCache","getDiffs","cache","getCache","diffs","logScale","scaleDiff","sizeDiff","domainDiff","updateInteractiveLayer","pX","pY","pointArray","pointPaths","vPointPaths","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","titles","pointScale","pointRange","forcePoint","pointShape","scatterChart","distX","distY","showDistX","showDistY","regWrap","regLine","intercept","slope","sparkline","animate","showMinMaxPoints","showCurrentPoint","yValues","maxPoint","minPoint","currentPoint","sparklinePlus","paused","showLastValue","alignValue","rightAlignValue","sparklineWrap","updateValueLine","hoverValue","hoverEnter","closestIndex","getClosestIndex","dataRaw","aseries","dataFiltered","zeroArea","areaMouseover","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","stackedAreaChart","showTotalInTooltip","totalLabel","controlOptions","oldYTickFormat","oldValueFormatter","percentFormatter","xAxisHeight","legendTop","metaKey","stack_percent","requiredTop","stackedWrap","currentFormat","valueSum","allNullValues","atleastOnePoint","tooltipValue","stackedY0","stackedY","stackedAreaWithFocusChart","sunburst","modes","groupColorByParent","prevPositions","rotationToAvoidUpsideDown","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","storeRetrievePrevPositions","pP","updatePrevPosition","zoomClick","centerAngle","cG","sunburstChart","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","__webpack_exports__","createContext","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","DEVICE_SIZES","Col","_React$Component","_this$props","bsPrefix","spans","brkPoint","propValue","_propValue$span","infix","defaultProps","divWithClassName","react_default","forwardRef","esm_extends","classnames_default","CardImg_CardImg","CardImg","inheritsLoose","variant","objectWithoutPropertiesLoose","baseClass","es_CardImg","ThemeProvider","CardBody","createWithBsPrefix","Card_Card","Card","_this","_len","_key","getDerivedStateFromProps","_ref","cardContext","cardHeaderBsPrefix","CardContext","Provider","DivStyledAsH5","DivStyledAsH6","DecoratedCard","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Row","noGutters"],"mappings":"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","file":"static/js/2.9ac8d7dc.chunk.js","sourcesContent":["!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"d3\", \"nvd3\"], e) : \"object\" == typeof exports ? exports.NVD3Chart = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : t.NVD3Chart = e(t.React, t.d3, t.nv);\n}(this, function (t, e, n) {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;\n      var o = n[r] = {\n        exports: {},\n        id: r,\n        loaded: !1\n      };\n      return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var o = n(1),\n        i = r(o),\n        u = n(2),\n        c = r(u),\n        s = n(17),\n        a = r(s),\n        f = n(21),\n        p = r(f),\n        l = n(22),\n        d = r(l),\n        h = n(25),\n        y = r(h),\n        v = n(48),\n        b = r(v),\n        g = n(55),\n        m = r(g),\n        _ = n(56),\n        x = r(_),\n        O = n(57),\n        j = r(O),\n        w = n(58),\n        S = [\"x\", \"y\", \"type\", \"datum\", \"configure\"],\n        P = [\"width\", \"height\"],\n        E = \"margin\",\n        M = \"containerStyle\",\n        k = \"renderStart\",\n        C = \"renderEnd\",\n        D = \"ready\",\n        F = function (t) {\n      function e() {\n        return (0, p[\"default\"])(this, e), (0, y[\"default\"])(this, (0, a[\"default\"])(e).apply(this, arguments));\n      }\n\n      return (0, b[\"default\"])(e, t), (0, d[\"default\"])(e, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var t = this;\n          j[\"default\"].addGraph(this.renderChart.bind(this), function (e) {\n            (0, w.isCallable)(t.props.ready) && t.props.ready(e, D);\n          });\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value() {\n          this.renderChart();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          this.resizeHandler && this.resizeHandler.clear();\n        }\n      }, {\n        key: \"renderChart\",\n        value: function value() {\n          var t = void 0;\n\n          switch (this.chart = this.chart && !this.rendering ? this.chart : j[\"default\"].models[this.props.type](), (0, w.isCallable)(this.props.renderStart) && this.props.renderStart(this.chart, k), this.parsedProps = (0, w.bindFunctions)(this.props, this.props.context), this.chart.x && this.chart.x((0, w.getValueFunction)(this.parsedProps.x, \"x\")), this.chart.y && this.chart.y((0, w.getValueFunction)(this.parsedProps.y, \"y\")), this.props.margin && this.chart.margin(this.options(E, w.pick).margin || (0, w.propsByPrefix)(\"margin\", this.props) || {}), this.configureComponents(this.chart, this.options(S.concat(M), w.without)), !this.props.configure || this.props.configure(this.chart), this.selection = x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart), this.resizeHandler || (this.resizeHandler = j[\"default\"].utils.windowResize(this.chart.update)), this.props.type) {\n            case \"pieChart\":\n              t = this.chart.pie.dispatch;\n              break;\n\n            case \"lineChart\":\n              t = this.chart.lines.dispatch;\n              break;\n\n            default:\n              t = this.chart.dispatch;\n          }\n\n          return t.renderEnd && t.on(\"renderEnd\", this.renderEnd.bind(this)), this.rendering = !0, this.chart;\n        }\n      }, {\n        key: \"renderEnd\",\n        value: function value(t) {\n          (0, w.isCallable)(this.props.renderEnd) && this.props.renderEnd(this.chart, C), this.rendering = !1;\n        }\n      }, {\n        key: \"configureComponents\",\n        value: function value(t, e) {\n          for (var n in e) {\n            var r = e[n];\n            t && ((0, w.isPlainObject)(r) ? this.configureComponents(t[n], r) : \"function\" == typeof t[n] && t[n](r));\n          }\n        }\n      }, {\n        key: \"options\",\n        value: function value(t, e) {\n          var n = this.parsedProps.options || this.parsedProps || this.props.chartOptions;\n          return (e = e || w.pick)(n, t);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = (0, w.pick)(this.props, P),\n              e = (0, c[\"default\"])({}, t, this.props.containerStyle);\n          return m[\"default\"].createElement(\"div\", {\n            ref: \"root\",\n            className: \"nv-chart\",\n            style: e\n          }, m[\"default\"].createElement(\"svg\", (0, i[\"default\"])({\n            ref: \"svg\"\n          }, t)));\n        }\n      }]), e;\n    }(m[\"default\"].Component);\n\n    e[\"default\"] = F, t.exports = F;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(2)[\"default\"];\n    e[\"default\"] = r || function (t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = arguments[e];\n\n        for (var r in n) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(3),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(4), t.exports = n(7).Object.assign;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S + r.F, \"Object\", {\n      assign: n(10)\n    });\n  }, function (t, e, n) {\n    var r = n(6),\n        o = n(7),\n        i = n(8),\n        u = \"prototype\",\n        c = function c(t, e, n) {\n      var s,\n          a,\n          f,\n          p = t & c.F,\n          l = t & c.G,\n          d = t & c.S,\n          h = t & c.P,\n          y = t & c.B,\n          v = t & c.W,\n          b = l ? o : o[e] || (o[e] = {}),\n          g = l ? r : d ? r[e] : (r[e] || {})[u];\n      l && (n = e);\n\n      for (s in n) {\n        a = !p && g && s in g, a && s in b || (f = a ? g[s] : n[s], b[s] = l && \"function\" != typeof g[s] ? n[s] : y && a ? i(f, r) : v && g[s] == f ? function (t) {\n          var e = function e(_e) {\n            return this instanceof t ? new t(_e) : t(_e);\n          };\n\n          return e[u] = t[u], e;\n        }(f) : h && \"function\" == typeof f ? i(Function.call, f) : f, h && ((b[u] || (b[u] = {}))[s] = f));\n      }\n    };\n\n    c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, t.exports = c;\n  }, function (t, e) {\n    var n = t.exports = \"undefined\" != typeof window && window.Math == Math ? window : \"undefined\" != typeof self && self.Math == Math ? self : Function(\"return this\")();\n    \"number\" == typeof __g && (__g = n);\n  }, function (t, e) {\n    var n = t.exports = {\n      version: \"1.2.6\"\n    };\n    \"number\" == typeof __e && (__e = n);\n  }, function (t, e, n) {\n    var r = n(9);\n\n    t.exports = function (t, e, n) {\n      if (r(t), void 0 === e) return t;\n\n      switch (n) {\n        case 1:\n          return function (n) {\n            return t.call(e, n);\n          };\n\n        case 2:\n          return function (n, r) {\n            return t.call(e, n, r);\n          };\n\n        case 3:\n          return function (n, r, o) {\n            return t.call(e, n, r, o);\n          };\n      }\n\n      return function () {\n        return t.apply(e, arguments);\n      };\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (\"function\" != typeof t) throw TypeError(t + \" is not a function!\");\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(12),\n        i = n(14);\n    t.exports = n(16)(function () {\n      var t = Object.assign,\n          e = {},\n          n = {},\n          r = Symbol(),\n          o = \"abcdefghijklmnopqrst\";\n      return e[r] = 7, o.split(\"\").forEach(function (t) {\n        n[t] = t;\n      }), 7 != t({}, e)[r] || Object.keys(t({}, n)).join(\"\") != o;\n    }) ? function (t, e) {\n      for (var n = o(t), u = arguments, c = u.length, s = 1, a = r.getKeys, f = r.getSymbols, p = r.isEnum; c > s;) {\n        for (var l, d = i(u[s++]), h = f ? a(d).concat(f(d)) : a(d), y = h.length, v = 0; y > v;) {\n          p.call(d, l = h[v++]) && (n[l] = d[l]);\n        }\n      }\n\n      return n;\n    } : Object.assign;\n  }, function (t, e) {\n    var n = Object;\n    t.exports = {\n      create: n.create,\n      getProto: n.getPrototypeOf,\n      isEnum: {}.propertyIsEnumerable,\n      getDesc: n.getOwnPropertyDescriptor,\n      setDesc: n.defineProperty,\n      setDescs: n.defineProperties,\n      getKeys: n.keys,\n      getNames: n.getOwnPropertyNames,\n      getSymbols: n.getOwnPropertySymbols,\n      each: [].forEach\n    };\n  }, function (t, e, n) {\n    var r = n(13);\n\n    t.exports = function (t) {\n      return Object(r(t));\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (void 0 == t) throw TypeError(\"Can't call method on  \" + t);\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n    t.exports = Object(\"z\").propertyIsEnumerable(0) ? Object : function (t) {\n      return \"String\" == r(t) ? t.split(\"\") : Object(t);\n    };\n  }, function (t, e) {\n    var n = {}.toString;\n\n    t.exports = function (t) {\n      return n.call(t).slice(8, -1);\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      try {\n        return !!t();\n      } catch (e) {\n        return !0;\n      }\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(18),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(19), t.exports = n(7).Object.getPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"getPrototypeOf\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }, function (t, e, n) {\n    var r = n(5),\n        o = n(7),\n        i = n(16);\n\n    t.exports = function (t, e) {\n      var n = (o.Object || {})[t] || Object[t],\n          u = {};\n      u[t] = e(n), r(r.S + r.F * i(function () {\n        n(1);\n      }), \"Object\", u);\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    e[\"default\"] = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(23),\n        i = r(o);\n    e[\"default\"] = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var r = e[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), (0, i[\"default\"])(t, r.key, r);\n        }\n      }\n\n      return function (e, n, r) {\n        return n && t(e.prototype, n), r && t(e, r), e;\n      };\n    }(), e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(24),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e, n) {\n      return r.setDesc(t, e, n);\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(26),\n        i = r(o);\n    e[\"default\"] = function (t, e) {\n      if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" !== (\"undefined\" == typeof e ? \"undefined\" : (0, i[\"default\"])(e)) && \"function\" != typeof e ? t : e;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(27)[\"default\"];\n    e[\"default\"] = function (t) {\n      return t && t.constructor === r ? \"symbol\" : typeof t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(28),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(29), n(47), t.exports = n(7).Symbol;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(11),\n        o = n(6),\n        i = n(30),\n        u = n(31),\n        c = n(5),\n        s = n(32),\n        a = n(16),\n        f = n(35),\n        p = n(36),\n        l = n(38),\n        d = n(37),\n        h = n(39),\n        y = n(41),\n        v = n(42),\n        b = n(43),\n        g = n(44),\n        m = n(40),\n        _ = n(34),\n        x = r.getDesc,\n        O = r.setDesc,\n        j = r.create,\n        w = y.get,\n        S = o.Symbol,\n        P = o.JSON,\n        E = P && P.stringify,\n        M = !1,\n        k = d(\"_hidden\"),\n        C = r.isEnum,\n        D = f(\"symbol-registry\"),\n        F = f(\"symbols\"),\n        N = \"function\" == typeof S,\n        T = Object.prototype,\n        q = u && a(function () {\n      return 7 != j(O({}, \"a\", {\n        get: function get() {\n          return O(this, \"a\", {\n            value: 7\n          }).a;\n        }\n      })).a;\n    }) ? function (t, e, n) {\n      var r = x(T, e);\n      r && delete T[e], O(t, e, n), r && t !== T && O(T, e, r);\n    } : O,\n        z = function z(t) {\n      var e = F[t] = j(S.prototype);\n      return e._k = t, u && M && q(T, t, {\n        configurable: !0,\n        set: function set(e) {\n          i(this, k) && i(this[k], t) && (this[k][t] = !1), q(this, t, _(1, e));\n        }\n      }), e;\n    },\n        A = function A(t) {\n      return \"symbol\" == typeof t;\n    },\n        V = function V(t, e, n) {\n      return n && i(F, e) ? (n.enumerable ? (i(t, k) && t[k][e] && (t[k][e] = !1), n = j(n, {\n        enumerable: _(0, !1)\n      })) : (i(t, k) || O(t, k, _(1, {})), t[k][e] = !0), q(t, e, n)) : O(t, e, n);\n    },\n        W = function W(t, e) {\n      g(t);\n\n      for (var n, r = v(e = m(e)), o = 0, i = r.length; i > o;) {\n        V(t, n = r[o++], e[n]);\n      }\n\n      return t;\n    },\n        B = function B(t, e) {\n      return void 0 === e ? j(t) : W(j(t), e);\n    },\n        G = function G(t) {\n      var e = C.call(this, t);\n      return e || !i(this, t) || !i(F, t) || i(this, k) && this[k][t] ? e : !0;\n    },\n        H = function H(t, e) {\n      var n = x(t = m(t), e);\n      return !n || !i(F, e) || i(t, k) && t[k][e] || (n.enumerable = !0), n;\n    },\n        I = function I(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) || e == k || r.push(e);\n      }\n\n      return r;\n    },\n        J = function J(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) && r.push(F[e]);\n      }\n\n      return r;\n    },\n        K = function K(t) {\n      if (void 0 !== t && !A(t)) {\n        for (var e, n, r = [t], o = 1, i = arguments; i.length > o;) {\n          r.push(i[o++]);\n        }\n\n        return e = r[1], \"function\" == typeof e && (n = e), (n || !b(e)) && (e = function e(t, _e2) {\n          return n && (_e2 = n.call(this, t, _e2)), A(_e2) ? void 0 : _e2;\n        }), r[1] = e, E.apply(P, r);\n      }\n    },\n        R = a(function () {\n      var t = S();\n      return \"[null]\" != E([t]) || \"{}\" != E({\n        a: t\n      }) || \"{}\" != E(Object(t));\n    });\n\n    N || (S = function S() {\n      if (A(this)) throw TypeError(\"Symbol is not a constructor\");\n      return z(l(arguments.length > 0 ? arguments[0] : void 0));\n    }, s(S.prototype, \"toString\", function () {\n      return this._k;\n    }), A = function A(t) {\n      return t instanceof S;\n    }, r.create = B, r.isEnum = G, r.getDesc = H, r.setDesc = V, r.setDescs = W, r.getNames = y.get = I, r.getSymbols = J, u && !n(46) && s(T, \"propertyIsEnumerable\", G, !0));\n    var U = {\n      \"for\": function _for(t) {\n        return i(D, t += \"\") ? D[t] : D[t] = S(t);\n      },\n      keyFor: function keyFor(t) {\n        return h(D, t);\n      },\n      useSetter: function useSetter() {\n        M = !0;\n      },\n      useSimple: function useSimple() {\n        M = !1;\n      }\n    };\n    r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"), function (t) {\n      var e = d(t);\n      U[t] = N ? e : z(e);\n    }), M = !0, c(c.G + c.W, {\n      Symbol: S\n    }), c(c.S, \"Symbol\", U), c(c.S + c.F * !N, \"Object\", {\n      create: B,\n      defineProperty: V,\n      defineProperties: W,\n      getOwnPropertyDescriptor: H,\n      getOwnPropertyNames: I,\n      getOwnPropertySymbols: J\n    }), P && c(c.S + c.F * (!N || R), \"JSON\", {\n      stringify: K\n    }), p(S, \"Symbol\"), p(Math, \"Math\", !0), p(o.JSON, \"JSON\", !0);\n  }, function (t, e) {\n    var n = {}.hasOwnProperty;\n\n    t.exports = function (t, e) {\n      return n.call(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = !n(16)(function () {\n      return 7 != Object.defineProperty({}, \"a\", {\n        get: function get() {\n          return 7;\n        }\n      }).a;\n    });\n  }, function (t, e, n) {\n    t.exports = n(33);\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(34);\n    t.exports = n(31) ? function (t, e, n) {\n      return r.setDesc(t, e, o(1, n));\n    } : function (t, e, n) {\n      return t[e] = n, t;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      return {\n        enumerable: !(1 & t),\n        configurable: !(2 & t),\n        writable: !(4 & t),\n        value: e\n      };\n    };\n  }, function (t, e, n) {\n    var r = n(6),\n        o = \"__core-js_shared__\",\n        i = r[o] || (r[o] = {});\n\n    t.exports = function (t) {\n      return i[t] || (i[t] = {});\n    };\n  }, function (t, e, n) {\n    var r = n(11).setDesc,\n        o = n(30),\n        i = n(37)(\"toStringTag\");\n\n    t.exports = function (t, e, n) {\n      t && !o(t = n ? t : t.prototype, i) && r(t, i, {\n        configurable: !0,\n        value: e\n      });\n    };\n  }, function (t, e, n) {\n    var r = n(35)(\"wks\"),\n        o = n(38),\n        i = n(6).Symbol;\n\n    t.exports = function (t) {\n      return r[t] || (r[t] = i && i[t] || (i || o)(\"Symbol.\" + t));\n    };\n  }, function (t, e) {\n    var n = 0,\n        r = Math.random();\n\n    t.exports = function (t) {\n      return \"Symbol(\".concat(void 0 === t ? \"\" : t, \")_\", (++n + r).toString(36));\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(40);\n\n    t.exports = function (t, e) {\n      for (var n, i = o(t), u = r.getKeys(i), c = u.length, s = 0; c > s;) {\n        if (i[n = u[s++]] === e) return n;\n      }\n    };\n  }, function (t, e, n) {\n    var r = n(14),\n        o = n(13);\n\n    t.exports = function (t) {\n      return r(o(t));\n    };\n  }, function (t, e, n) {\n    var r = n(40),\n        o = n(11).getNames,\n        i = {}.toString,\n        u = \"object\" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],\n        c = function c(t) {\n      try {\n        return o(t);\n      } catch (e) {\n        return u.slice();\n      }\n    };\n\n    t.exports.get = function (t) {\n      return u && \"[object Window]\" == i.call(t) ? c(t) : o(r(t));\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t) {\n      var e = r.getKeys(t),\n          n = r.getSymbols;\n      if (n) for (var o, i = n(t), u = r.isEnum, c = 0; i.length > c;) {\n        u.call(t, o = i[c++]) && e.push(o);\n      }\n      return e;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n\n    t.exports = Array.isArray || function (t) {\n      return \"Array\" == r(t);\n    };\n  }, function (t, e, n) {\n    var r = n(45);\n\n    t.exports = function (t) {\n      if (!r(t)) throw TypeError(t + \" is not an object!\");\n      return t;\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      return \"object\" == typeof t ? null !== t : \"function\" == typeof t;\n    };\n  }, function (t, e) {\n    t.exports = !0;\n  }, function (t, e) {}, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(49)[\"default\"],\n        o = n(51)[\"default\"];\n    e[\"default\"] = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      t.prototype = r(e && e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (o ? o(t, e) : t.__proto__ = e);\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(50),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e) {\n      return r.create(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(52),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(53), t.exports = n(7).Object.setPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S, \"Object\", {\n      setPrototypeOf: n(54).set\n    });\n  }, function (t, e, n) {\n    var r = n(11).getDesc,\n        o = n(45),\n        i = n(44),\n        u = function u(t, e) {\n      if (i(t), !o(e) && null !== e) throw TypeError(e + \": can't set as prototype!\");\n    };\n\n    t.exports = {\n      set: Object.setPrototypeOf || (\"__proto__\" in {} ? function (t, e, o) {\n        try {\n          o = n(8)(Function.call, r(Object.prototype, \"__proto__\").set, 2), o(t, []), e = !(t instanceof Array);\n        } catch (i) {\n          e = !0;\n        }\n\n        return function (t, n) {\n          return u(t, n), e ? t.__proto__ = n : o(t, n), t;\n        };\n      }({}, !1) : void 0),\n      check: u\n    };\n  }, function (e, n) {\n    e.exports = t;\n  }, function (t, n) {\n    t.exports = e;\n  }, function (t, e) {\n    t.exports = n;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    function o(t, e) {\n      return t.indexOf(e) >= 0;\n    }\n\n    function i(t) {\n      return function () {\n        return !t.apply(this, arguments);\n      };\n    }\n\n    function u(t, e, n) {\n      for (var r = {}, o = (0, m[\"default\"])(t), i = 0, u = o.length; u > i; i++) {\n        var c = o[i],\n            s = t[c];\n        n(e, c) && (r[c] = s);\n      }\n\n      return r;\n    }\n\n    function c(t, e) {\n      return u(t, e, o);\n    }\n\n    function s(t, e) {\n      return u(t, e, i(o));\n    }\n\n    function a(t) {\n      if (\"object\" == (\"undefined\" == typeof t ? \"undefined\" : (0, b[\"default\"])(t)) && null !== t) {\n        if (\"function\" == typeof y[\"default\"]) {\n          var e = (0, y[\"default\"])(t);\n          return e === Object.prototype || null === e;\n        }\n\n        return \"[object Object]\" == Object.prototype.toString.call(t);\n      }\n\n      return !1;\n    }\n\n    function f(t, e) {\n      var n, r, o;\n      n = Array.isArray(t) ? [] : {};\n\n      for (o in t) {\n        r = t[o], null != r && (\"object\" === (\"undefined\" == typeof r ? \"undefined\" : (0, b[\"default\"])(r)) && null !== r && \"function\" !== r.type ? n[o] = f(r, e) : \"function\" === r.type ? n[o] = e[r.name] : n[o] = r);\n      }\n\n      return n;\n    }\n\n    function p(t, e) {\n      return \"function\" == typeof t ? t : function (n) {\n        return \"undefined\" != typeof n[t] ? n[t] : n[e];\n      };\n    }\n\n    function l(t, e) {\n      return console.warn(\"Set margin with prefixes is deprecated use an object instead\"), t += \"-\", (0, m[\"default\"])(e).reduce(function (n, r) {\n        return r.substr(0, t.length) === t && (n[r.replace(t, \"\")] = e[r]), n;\n      }, {});\n    }\n\n    function d(t) {\n      return t && \"function\" == typeof t;\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.includes = o, e.negate = i, e.filterObject = u, e.pick = c, e.without = s, e.isPlainObject = a, e.bindFunctions = f, e.getValueFunction = p, e.propsByPrefix = l, e.isCallable = d;\n    var h = n(17),\n        y = r(h),\n        v = n(26),\n        b = r(v),\n        g = n(59),\n        m = r(g);\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(60),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(61), t.exports = n(7).Object.keys;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"keys\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }]);\n});","!function () {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = this.document;\n\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function d3_array(list) {\n        var i = list.length,\n            array = new Array(i);\n\n        while (i--) {\n          array[i] = list[i];\n        }\n\n        return array;\n      };\n    }\n  }\n\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype,\n          d3_element_setAttribute = d3_element_prototype.setAttribute,\n          d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n          d3_style_prototype = this.CSSStyleDeclaration.prototype,\n          d3_style_setProperty = d3_style_prototype.setProperty;\n\n      d3_element_prototype.setAttribute = function (name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n\n      d3_element_prototype.setAttributeNS = function (space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n\n      d3_style_prototype.setProperty = function (name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;\n      }\n    }\n\n    if (j) return s / j;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n      }\n    }\n\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n\n  d3.variance = function (array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  };\n\n  d3.deviation = function () {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n\n    var m = i1 - i0,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.transpose = function (matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  };\n\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n\n  d3.zip = function () {\n    return d3.transpose(arguments);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n\n  d3.map = function (object, f) {\n    var map = new d3_Map();\n\n    if (object instanceof d3_Map) {\n      object.forEach(function (key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (arguments.length === 1) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f.call(object, o = object[i], i), o);\n      }\n    } else {\n      for (var key in object) {\n        map.set(key, object[key]);\n      }\n    }\n\n    return map;\n  };\n\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n\n  var d3_map_proto = \"__proto__\",\n      d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function set(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n\n      for (var key in this._) {\n        values.push(this._[key]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var key in this._) {\n        entries.push({\n          key: d3_map_unescape(key),\n          value: this._[key]\n        });\n      }\n\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key), this._[key]);\n      }\n    }\n  });\n\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n\n    for (var key in this._) {\n      keys.push(d3_map_unescape(key));\n    }\n\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this._) {\n      ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this._) {\n      return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      _d3_selectMatches = function d3_selectMatches(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\n    _d3_selectMatches = function d3_selectMatches(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n\n    return _d3_selectMatches(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    _d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3.select(d3_document.documentElement);\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument,\n          namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(d3_selectionRemove);\n  };\n\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            keyValues = new Array(n),\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n\n            keyValues[i] = keyValue;\n          }\n        }\n\n        for (i = -1; ++i < m;) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n\n          nodeByKeyValue.set(keyValue, true);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return _d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    d3_selection_each(this, function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3.select = function (node) {\n    var group;\n\n    if (typeof node === \"string\") {\n      group = [d3_select(node, d3_document)];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [node];\n      group.parentNode = d3_documentElement(node);\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group;\n\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function (k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect,\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target.correspondingElement || d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(target),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      τ = 2 * π,\n      τε = τ - ε,\n      halfπ = π / 2,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n\n      i = function i(t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];\n      };\n    } else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      };\n    }\n\n    i.duration = S * 1e3;\n    return i;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        duration = 250,\n        zooming = 0,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = center0 ? center0[0] : dx / 2,\n                cy = center0 ? center0[1] : dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function () {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      if (! --zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n\n    function mousedowned() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that),\n          dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n        d3_selection_interrupt.call(that);\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n\n    function dblclicked() {\n      var p = d3.mouse(this),\n          k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity],\n      d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel;\n  d3.color = d3_color;\n\n  function d3_color() {}\n\n  d3_color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = d3_hsl;\n\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = d3_hcl;\n\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = d3_lab;\n\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\n  d3_labPrototype.brighter = function (k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = d3_rgb;\n\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function () {\n    d3_timer.apply(this, arguments);\n  };\n\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n\n    return timer;\n  }\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now(),\n        timer = d3_timer_queueHead;\n\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping && locale_thousands ? function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"-\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false,\n          exponent = true;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n          exponent = false;\n\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before,\n            after;\n\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\";else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = abs(z) / 60 | 0,\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x + _pointRadius, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5,\n            ym = (y1 + y2) * .5,\n            right = x >= xm,\n            below = y >= ym,\n            i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm;else x2 = xm;\n        if (below) y1 = ym;else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      root.find = function (point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity,\n        closestPoint;\n\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n      if (point = node.point) {\n        var point,\n            dx = x - node.x,\n            dy = y - node.y,\n            distance2 = dx * dx + dy * dy;\n\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n\n      var children = node.nodes,\n          xm = (x1 + x2) * .5,\n          ym = (y1 + y2) * .5,\n          right = x >= xm,\n          below = y >= ym;\n\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n          case 0:\n            find(node, x1, y1, xm, ym);\n            break;\n\n          case 1:\n            find(node, xm, y1, x2, ym);\n            break;\n\n          case 2:\n            find(node, x1, ym, xm, y2);\n            break;\n\n          case 3:\n            find(node, xm, ym, x2, y2);\n            break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n\n    return closestPoint;\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.slice(0, i) : name,\n        m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return (x - a) / b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        timer,\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            l = candidates.length,\n            x;\n\n        while (++j < l) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ,\n        padAngle = 0;\n\n    function pie(data) {\n      var n = data.length,\n          values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      }),\n          a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle),\n          da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a,\n          p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)),\n          pa = p * (da < 0 ? -1 : 1),\n          sum = d3.sum(values),\n          k = sum ? (da - n * pa) / sum : 0,\n          index = d3.range(n),\n          arcs = [],\n          v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function (i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n\n    pie.sort = function (_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n\n    pie.startAngle = function (_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n\n    pie.endAngle = function (_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n\n    pie.padAngle = function (_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length,\n          n,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function (d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundPoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  function d3_zero() {\n    return 0;\n  }\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        cornerRadius = d3_zero,\n        padRadius = d3_svg_arcAuto,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle,\n        padAngle = d3_svg_arcPadAngle;\n\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),\n          r1 = Math.max(0, +outerRadius.apply(this, arguments)),\n          a0 = startAngle.apply(this, arguments) - halfπ,\n          a1 = endAngle.apply(this, arguments) - halfπ,\n          da = Math.abs(a1 - a0),\n          cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc,\n          cr,\n          rp,\n          ap,\n          p0 = 0,\n          p1 = 0,\n          x0,\n          y0,\n          x1,\n          y1,\n          x2,\n          y2,\n          x3,\n          y3,\n          path = [];\n\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc,\n            rc0 = rc;\n\n        if (da < π) {\n          var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),\n              ax = x0 - oc[0],\n              ay = y0 - oc[1],\n              bx = x1 - oc[0],\n              by = y1 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),\n              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);\n\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),\n              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);\n\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.cornerRadius = function (v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.padRadius = function (v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.padAngle = function (v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcAuto = \"auto\";\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0],\n        y01 = p0[1] - p1[1],\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x1 = p0[0] + ox,\n        y1 = p0[1] + oy,\n        x2 = p1[0] + ox,\n        y2 = p1[1] + oy,\n        x3 = (x1 + x2) / 2,\n        y3 = (y1 + y2) / 2,\n        dx = x2 - x1,\n        dy = y2 - y1,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x1 * y2 - x2 * y1,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x3,\n        dy0 = cy0 - y3,\n        dx1 = cx1 - x3,\n        dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfπ,\n          a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] - halfπ;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  d3_selectionPrototype.transition = function (name) {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        ns = d3_transitionNamespace(name),\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_selectionPrototype.interrupt = function (name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\n  function d3_selection_interruptNS(ns) {\n    return function () {\n      var lock, activeId, active;\n\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId];else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node[ns][id].tween.remove(name);\n    } : function (node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id,\n        ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node[ns][id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node[ns][id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node[ns][id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id,\n        ns = this.namespace;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function (node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id1);\n  };\n\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id],\n        time,\n        timer,\n        duration,\n        ease,\n        tweens;\n\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n\n    function start(elapsed) {\n      var activeId = lock.active,\n          active = lock[activeId];\n\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n\n      timer.c = tick;\n      d3_timer(function () {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function (key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed / duration,\n          e = ease(t),\n          n = tweens.length;\n\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id];else delete node[ns];\n        return 1;\n      }\n    }\n\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            sign = orient === \"top\" || orient === \"left\" ? -1 : 1,\n            x1,\n            x2,\n            y1,\n            y2;\n\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(target),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3);else if (typeof module === \"object\" && module.exports) module.exports = d3;else this.d3 = d3;\n}();","/* nvd3 version 1.8.6 (https://github.com/novus/nvd3) 2017-08-23 */\n(function () {\n  // set up main nv object\n  var nv = {}; // the major global objects under the nv namespace\n\n  nv.dev = false; //set false when in production\n\n  nv.tooltip = nv.tooltip || {}; // For the tooltip system\n\n  nv.utils = nv.utils || {}; // Utility subsystem\n\n  nv.models = nv.models || {}; //stores all the possible models/components\n\n  nv.charts = {}; //stores all the ready to use charts\n\n  nv.logs = {}; //stores some statistics and potential error messages\n\n  nv.dom = {}; //DOM manipulation functions\n  // Node/CommonJS - require D3\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined' && typeof d3 == 'undefined') {\n    d3 = require('d3');\n  }\n\n  nv.dispatch = d3.dispatch('render_start', 'render_end'); // Function bind polyfill\n  // Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n  // https://github.com/ariya/phantomjs/issues/10522\n  // http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n  // phantomJS is used for running the test suite\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== \"function\") {\n        // closest thing possible to the ECMAScript 5 internal IsCallable function\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } //  Development render timers - disabled if dev = false\n\n\n  if (nv.dev) {\n    nv.dispatch.on('render_start', function (e) {\n      nv.logs.startTime = +new Date();\n    });\n    nv.dispatch.on('render_end', function (e) {\n      nv.logs.endTime = +new Date();\n      nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n      nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n  } // Logs all arguments, and returns the last so you can test things in place\n  // Note: in IE8 console.log is an object not a function, and if modernizr is used\n  // then calling Function.prototype.bind with with anything other than a function\n  // causes a TypeError to be thrown.\n\n\n  nv.log = function () {\n    if (nv.dev && window.console && console.log && console.log.apply) console.log.apply(console, arguments);else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n      var log = Function.prototype.bind.call(console.log, console);\n      log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n  }; // print console warning, should be used by deprecated functions\n\n\n  nv.deprecated = function (name, info) {\n    if (console && console.warn) {\n      console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n  }; // The nv.render function is used to queue up chart rendering\n  // in non-blocking async functions.\n  // When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\n\n  nv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function renderLoop() {\n      var chart, graph;\n\n      for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n        chart = graph.generate();\n        if (typeof graph.callback == typeof Function) graph.callback(chart);\n      }\n\n      nv.render.queue.splice(0, i);\n\n      if (nv.render.queue.length) {\n        setTimeout(renderLoop);\n      } else {\n        nv.dispatch.render_end();\n        nv.render.active = false;\n      }\n    };\n\n    setTimeout(renderLoop);\n  };\n\n  nv.render.active = false;\n  nv.render.queue = [];\n  /*\n  Adds a chart to the async rendering queue. This method can take arguments in two forms:\n  nv.addGraph({\n      generate: <Function>\n      callback: <Function>\n  })\n  \n  or\n  \n  nv.addGraph(<generate Function>, <callback Function>)\n  \n  The generate function should contain code that creates the NVD3 model, sets options\n  on it, adds data to an SVG element, and invokes the chart model. The generate function\n  should return the chart model.  See examples/lineChart.html for a usage example.\n  \n  The callback function is optional, and it is called when the generate function completes.\n  */\n\n  nv.addGraph = function (obj) {\n    if (typeof arguments[0] === typeof Function) {\n      obj = {\n        generate: arguments[0],\n        callback: arguments[1]\n      };\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n      nv.render();\n    }\n  }; // Node/CommonJS exports\n\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = nv;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.nv = nv;\n  }\n  /* Facade for queueing DOM write operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.write = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.mutate(callback);\n    }\n\n    return callback();\n  };\n  /* Facade for queueing DOM read operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.read = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.measure(callback);\n    }\n\n    return callback();\n  };\n  /* Utility class to handle creation of an interactive layer.\n   This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n   containing the X-coordinate. It can also render a vertical line where the mouse is located.\n  \n   dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n   the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n   It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n   */\n\n\n  nv.interactiveGuideline = function () {\n    \"use strict\";\n\n    var margin = {\n      left: 0,\n      top: 0 //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\n    },\n        width = null,\n        height = null,\n        xScale = d3.scale.linear(),\n        dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp'),\n        showGuideLine = true,\n        svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n    ,\n        tooltip = nv.models.tooltip(),\n        isMSIE = window.ActiveXObject // Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n    tooltip.duration(0).hideDelay(0).hidden(false);\n\n    function layer(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this);\n        var availableWidth = width || 960,\n            availableHeight = height || 400;\n        var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\").data([data]);\n        var wrapEnter = wrap.enter().append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n        wrapEnter.append(\"g\").attr(\"class\", \"nv-interactiveGuideLine\");\n\n        if (!svgContainer) {\n          return;\n        }\n\n        function mouseHandler() {\n          var mouseX = d3.event.clientX - this.getBoundingClientRect().left;\n          var mouseY = d3.event.clientY - this.getBoundingClientRect().top;\n          var subtractMargin = true;\n          var mouseOutAnyReason = false;\n\n          if (isMSIE) {\n            /*\n             D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n             d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n             over a rect in IE 10.\n             However, d3.event.offsetX/Y also returns the mouse coordinates\n             relative to the triggering <rect>. So we use offsetX/Y on IE.\n             */\n            mouseX = d3.event.offsetX;\n            mouseY = d3.event.offsetY;\n            /*\n             On IE, if you attach a mouse event listener to the <svg> container,\n             it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n             When this happens on IE, the offsetX/Y is set to where ever the child element\n             is located.\n             As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n             position under this scenario. Removing the line below *will* cause\n             the interactive layer to not work right on IE.\n             */\n\n            if (d3.event.target.tagName !== \"svg\") {\n              subtractMargin = false;\n            }\n\n            if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n              mouseOutAnyReason = true;\n            }\n          }\n\n          if (subtractMargin) {\n            mouseX -= margin.left;\n            mouseY -= margin.top;\n          }\n          /* If mouseX/Y is outside of the chart's bounds,\n           trigger a mouseOut event.\n           */\n\n\n          if (d3.event.type === 'mouseout' || mouseX < 0 || mouseY < 0 || mouseX > availableWidth || mouseY > availableHeight || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || mouseOutAnyReason) {\n            if (isMSIE) {\n              if (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && (d3.event.relatedTarget.className === undefined || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n                return;\n              }\n            }\n\n            dispatch.elementMouseout({\n              mouseX: mouseX,\n              mouseY: mouseY\n            });\n            layer.renderGuideLine(null); //hide the guideline\n\n            tooltip.hidden(true);\n            return;\n          } else {\n            tooltip.hidden(false);\n          }\n\n          var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n          var pointXValue = undefined; // Ordinal scale has no invert method\n\n          if (scaleIsOrdinal) {\n            var elementIndex = d3.bisect(xScale.range(), mouseX) - 1; // Check if mouseX is in the range band\n\n            if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n              pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n            } else {\n              dispatch.elementMouseout({\n                mouseX: mouseX,\n                mouseY: mouseY\n              });\n              layer.renderGuideLine(null); //hide the guideline\n\n              tooltip.hidden(true);\n              return;\n            }\n          } else {\n            pointXValue = xScale.invert(mouseX);\n          }\n\n          dispatch.elementMousemove({\n            mouseX: mouseX,\n            mouseY: mouseY,\n            pointXValue: pointXValue\n          }); //If user double clicks the layer, fire a elementDblclick\n\n          if (d3.event.type === \"dblclick\") {\n            dispatch.elementDblclick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user single clicks the layer, fire elementClick\n\n\n          if (d3.event.type === 'click') {\n            dispatch.elementClick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseDown\n\n\n          if (d3.event.type === 'mousedown') {\n            dispatch.elementMouseDown({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseUp\n\n\n          if (d3.event.type === 'mouseup') {\n            dispatch.elementMouseUp({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          }\n        }\n\n        svgContainer.on(\"touchmove\", mouseHandler).on(\"mousemove\", mouseHandler, true).on(\"mouseout\", mouseHandler, true).on(\"mousedown\", mouseHandler, true).on(\"mouseup\", mouseHandler, true).on(\"dblclick\", mouseHandler).on(\"click\", mouseHandler);\n        layer.guideLine = null; //Draws a vertical guideline at the given X postion.\n\n        layer.renderGuideLine = function (x) {\n          if (!showGuideLine) return;\n          if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n          nv.dom.write(function () {\n            var line = wrap.select(\".nv-interactiveGuideLine\").selectAll(\"line\").data(x != null ? [nv.utils.NaNtoZero(x)] : [], String);\n            line.enter().append(\"line\").attr(\"class\", \"nv-guideline\").attr(\"x1\", function (d) {\n              return d;\n            }).attr(\"x2\", function (d) {\n              return d;\n            }).attr(\"y1\", availableHeight).attr(\"y2\", 0);\n            line.exit().remove();\n          });\n        };\n      });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return layer;\n    };\n\n    layer.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return layer;\n    };\n\n    layer.height = function (_) {\n      if (!arguments.length) return height;\n      height = _;\n      return layer;\n    };\n\n    layer.xScale = function (_) {\n      if (!arguments.length) return xScale;\n      xScale = _;\n      return layer;\n    };\n\n    layer.showGuideLine = function (_) {\n      if (!arguments.length) return showGuideLine;\n      showGuideLine = _;\n      return layer;\n    };\n\n    layer.svgContainer = function (_) {\n      if (!arguments.length) return svgContainer;\n      svgContainer = _;\n      return layer;\n    };\n\n    return layer;\n  };\n  /* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n   This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n  \n   For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n   Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n   because 28 is closer to 30 than 10.\n  \n   Unit tests can be found in: interactiveBisectTest.html\n  \n   Has the following known issues:\n   * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n   * Won't work if there are duplicate x coordinate values.\n   */\n\n\n  nv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n\n    if (!(values instanceof Array)) {\n      return null;\n    }\n\n    var _xAccessor;\n\n    if (typeof xAccessor !== 'function') {\n      _xAccessor = function _xAccessor(d) {\n        return d.x;\n      };\n    } else {\n      _xAccessor = xAccessor;\n    }\n\n    var _cmp = function _cmp(d, v) {\n      // Accessors are no longer passed the index of the element along with\n      // the element itself when invoked by d3.bisector.\n      //\n      // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n      // function passed to determine if it should consider it an accessor\n      // or a comparator. This meant that accessors that take two arguments\n      // (expecting an index as the second parameter) are treated as\n      // comparators where the second argument is the search value against\n      // which the first argument is compared.\n      return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values, searchVal) - 1]);\n\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n      currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n      return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index + 1, values.length - 1]);\n\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n      nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n      return index;\n    } else {\n      return nextIndex;\n    }\n  };\n  /*\n   Returns the index in the array \"values\" that is closest to searchVal.\n   Only returns an index if searchVal is within some \"threshold\".\n   Otherwise, returns null.\n   */\n\n\n  nv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n\n    var yDistMax = Infinity,\n        indexToHighlight = null;\n    values.forEach(function (d, i) {\n      var delta = Math.abs(searchVal - d);\n\n      if (d != null && delta <= yDistMax && delta < threshold) {\n        yDistMax = delta;\n        indexToHighlight = i;\n      }\n    });\n    return indexToHighlight;\n  };\n  /* Model which can be instantiated to handle tooltip rendering.\n   Example usage:\n   var tip = nv.models.tooltip().gravity('w').distance(23)\n   .data(myDataObject);\n  \n   tip();    //just invoke the returned function to render tooltip.\n   */\n\n\n  nv.models.tooltip = function () {\n    \"use strict\";\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n    ,\n        data = null,\n        gravity = 'w' // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n    ,\n        distance = 25 // Distance to offset tooltip from the mouse location.\n    ,\n        snapDistance = 0 // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n    ,\n        classes = null // Attaches additional CSS classes to the tooltip DIV that is created.\n    ,\n        hidden = true // Start off hidden, toggle with hide/show functions below.\n    ,\n        hideDelay = 200 // Delay (in ms) before the tooltip hides after calling hide().\n    ,\n        tooltip = null // d3 select of the tooltip div.\n    ,\n        lastPosition = {\n      left: null,\n      top: null // Last position the tooltip was in.\n\n    },\n        enabled = true // True -> tooltips are rendered. False -> don't render tooltips.\n    ,\n        duration = 100 // Tooltip movement duration, in ms.\n    ,\n        headerEnabled = true // If is to show the tooltip header.\n    ,\n        nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ; // Format function for the tooltip values column.\n    // d is value,\n    // i is series index\n    // p is point containing the value\n\n    var valueFormatter = function valueFormatter(d, i, p) {\n      return d;\n    }; // Format function for the tooltip header value.\n\n\n    var headerFormatter = function headerFormatter(d) {\n      return d;\n    };\n\n    var keyFormatter = function keyFormatter(d, i) {\n      return d;\n    }; // By default, the tooltip model renders a beautiful table inside a DIV, returned as HTML\n    // You can override this function if a custom tooltip is desired. For instance, you could directly manipulate\n    // the DOM by accessing elem and returning false.\n\n\n    var contentGenerator = function contentGenerator(d, elem) {\n      if (d === null) {\n        return '';\n      }\n\n      var table = d3.select(document.createElement(\"table\"));\n\n      if (headerEnabled) {\n        var theadEnter = table.selectAll(\"thead\").data([d]).enter().append(\"thead\");\n        theadEnter.append(\"tr\").append(\"td\").attr(\"colspan\", 3).append(\"strong\").classed(\"x-value\", true).html(headerFormatter(d.value));\n      }\n\n      var tbodyEnter = table.selectAll(\"tbody\").data([d]).enter().append(\"tbody\");\n      var trowEnter = tbodyEnter.selectAll(\"tr\").data(function (p) {\n        return p.series;\n      }).enter().append(\"tr\").classed(\"highlight\", function (p) {\n        return p.highlight;\n      });\n      trowEnter.append(\"td\").classed(\"legend-color-guide\", true).append(\"div\").style(\"background-color\", function (p) {\n        return p.color;\n      });\n      trowEnter.append(\"td\").classed(\"key\", true).classed(\"total\", function (p) {\n        return !!p.total;\n      }).html(function (p, i) {\n        return keyFormatter(p.key, i);\n      });\n      trowEnter.append(\"td\").classed(\"value\", true).html(function (p, i) {\n        return valueFormatter(p.value, i, p);\n      });\n      trowEnter.filter(function (p, i) {\n        return p.percent !== undefined;\n      }).append(\"td\").classed(\"percent\", true).html(function (p, i) {\n        return \"(\" + d3.format('%')(p.percent) + \")\";\n      });\n      trowEnter.selectAll(\"td\").each(function (p) {\n        if (p.highlight) {\n          var opacityScale = d3.scale.linear().domain([0, 1]).range([\"#fff\", p.color]);\n          var opacity = 0.6;\n          d3.select(this).style(\"border-bottom-color\", opacityScale(opacity)).style(\"border-top-color\", opacityScale(opacity));\n        }\n      });\n      var html = table.node().outerHTML;\n      if (d.footer !== undefined) html += \"<div class='footer'>\" + d.footer + \"</div>\";\n      return html;\n    };\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n\n\n    var position = function position() {\n      var pos = {\n        left: d3.event !== null ? d3.event.clientX : 0,\n        top: d3.event !== null ? d3.event.clientY : 0\n      };\n\n      if (getComputedStyle(document.body).transform != 'none') {\n        // Take the offset into account, as now the tooltip is relative\n        // to document.body.\n        var client = document.body.getBoundingClientRect();\n        pos.left -= client.left;\n        pos.top -= client.top;\n      }\n\n      return pos;\n    };\n\n    var dataSeriesExists = function dataSeriesExists(d) {\n      if (d && d.series) {\n        if (nv.utils.isArray(d.series)) {\n          return true;\n        } // if object, it's okay just convert to array of the object\n\n\n        if (nv.utils.isObject(d.series)) {\n          d.series = [d.series];\n          return true;\n        }\n      }\n\n      return false;\n    }; // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n\n\n    var calcGravityOffset = function calcGravityOffset(pos) {\n      var height = tooltip.node().offsetHeight,\n          width = tooltip.node().offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          // Don't want scrollbars.\n      clientHeight = document.documentElement.clientHeight,\n          // Don't want scrollbars.\n      left,\n          top,\n          tmp; // calculate position based on gravity\n\n      switch (gravity) {\n        case 'e':\n          left = -width - distance;\n          top = -(height / 2);\n          if (pos.left + left < 0) left = distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'w':\n          left = distance;\n          top = -(height / 2);\n          if (pos.left + left + width > clientWidth) left = -width - distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'n':\n          left = -(width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\n          top = distance;\n          if (pos.top + top + height > clientHeight) top = -height - distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 's':\n          left = -(width / 2);\n          top = -height - distance;\n          if (pos.top + top < 0) top = distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 'center':\n          left = -(width / 2);\n          top = -(height / 2);\n          break;\n\n        default:\n          left = 0;\n          top = 0;\n          break;\n      }\n\n      return {\n        'left': left,\n        'top': top\n      };\n    };\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n\n\n    var positionTooltip = function positionTooltip() {\n      nv.dom.read(function () {\n        var pos = position(),\n            gravityOffset = calcGravityOffset(pos),\n            left = pos.left + gravityOffset.left,\n            top = pos.top + gravityOffset.top; // delay hiding a bit to avoid flickering\n\n        if (hidden) {\n          tooltip.interrupt().transition().delay(hideDelay).duration(0).style('opacity', 0);\n        } else {\n          // using tooltip.style('transform') returns values un-usable for tween\n          var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n          var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n          var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n          var is_hidden = tooltip.style('opacity') < 0.1;\n          tooltip.interrupt() // cancel running transitions\n          .transition().duration(is_hidden ? 0 : duration) // using tween since some versions of d3 can't auto-tween a translate on a div\n          .styleTween('transform', function (d) {\n            return translateInterpolator;\n          }, 'important') // Safari has its own `-webkit-transform` and does not support `transform`\n          .styleTween('-webkit-transform', function (d) {\n            return translateInterpolator;\n          }).style('-ms-transform', new_translate).style('opacity', 1);\n        }\n\n        lastPosition.left = left;\n        lastPosition.top = top;\n      });\n    }; // Creates new tooltip container, or uses existing one on DOM.\n\n\n    function initTooltip() {\n      if (!tooltip || !tooltip.node()) {\n        // Create new tooltip div if it doesn't exist on DOM.\n        var data = [1];\n        tooltip = d3.select(document.body).select('#' + id).data(data);\n        tooltip.enter().append('div').attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\")).attr(\"id\", id).style(\"top\", 0).style(\"left\", 0).style('opacity', 0).style('position', 'fixed').selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true).classed(nvPointerEventsClass, true);\n        tooltip.exit().remove();\n      }\n    } // Draw the tooltip onto the DOM.\n\n\n    function nvtooltip() {\n      if (!enabled) return;\n      if (!dataSeriesExists(data)) return;\n      nv.dom.write(function () {\n        initTooltip(); // Generate data and set it into tooltip.\n        // Bonus - If you override contentGenerator and return false, you can use something like\n        //         Angular, React or Knockout to bind the data for your tooltip directly to the DOM.\n\n        var newContent = contentGenerator(data, tooltip.node());\n\n        if (newContent) {\n          tooltip.node().innerHTML = newContent;\n        }\n\n        positionTooltip();\n      });\n      return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n    nvtooltip._options = Object.create({}, {\n      // simple read/write options\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      distance: {\n        get: function get() {\n          return distance;\n        },\n        set: function set(_) {\n          distance = _;\n        }\n      },\n      snapDistance: {\n        get: function get() {\n          return snapDistance;\n        },\n        set: function set(_) {\n          snapDistance = _;\n        }\n      },\n      classes: {\n        get: function get() {\n          return classes;\n        },\n        set: function set(_) {\n          classes = _;\n        }\n      },\n      enabled: {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(_) {\n          enabled = _;\n        }\n      },\n      hideDelay: {\n        get: function get() {\n          return hideDelay;\n        },\n        set: function set(_) {\n          hideDelay = _;\n        }\n      },\n      contentGenerator: {\n        get: function get() {\n          return contentGenerator;\n        },\n        set: function set(_) {\n          contentGenerator = _;\n        }\n      },\n      valueFormatter: {\n        get: function get() {\n          return valueFormatter;\n        },\n        set: function set(_) {\n          valueFormatter = _;\n        }\n      },\n      headerFormatter: {\n        get: function get() {\n          return headerFormatter;\n        },\n        set: function set(_) {\n          headerFormatter = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      headerEnabled: {\n        get: function get() {\n          return headerEnabled;\n        },\n        set: function set(_) {\n          headerEnabled = _;\n        }\n      },\n      position: {\n        get: function get() {\n          return position;\n        },\n        set: function set(_) {\n          position = _;\n        }\n      },\n      // Deprecated options\n      chartContainer: {\n        get: function get() {\n          return document.body;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.3\n          nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }\n      },\n      fixedTop: {\n        get: function get() {\n          return null;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }\n      },\n      offset: {\n        get: function get() {\n          return {\n            left: 0,\n            top: 0\n          };\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }\n      },\n      // options with extra logic\n      hidden: {\n        get: function get() {\n          return hidden;\n        },\n        set: function set(_) {\n          if (hidden != _) {\n            hidden = !!_;\n            nvtooltip();\n          }\n        }\n      },\n      data: {\n        get: function get() {\n          return data;\n        },\n        set: function set(_) {\n          // if showing a single data point, adjust data format with that\n          if (_.point) {\n            _.value = _.point.x;\n            _.series = _.series || {};\n            _.series.value = _.point.y;\n            _.series.color = _.point.color || _.series.color;\n          }\n\n          data = _;\n        }\n      },\n      // read only properties\n      node: {\n        get: function get() {\n          return tooltip.node();\n        },\n        set: function set(_) {}\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {}\n      }\n    });\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n  };\n  /*\n  Gets the browser window size\n  \n  Returns object with height and width properties\n   */\n\n\n  nv.utils.windowSize = function () {\n    // Sane defaults\n    var size = {\n      width: 640,\n      height: 480\n    }; // Most recent browsers use\n\n    if (window.innerWidth && window.innerHeight) {\n      size.width = window.innerWidth;\n      size.height = window.innerHeight;\n      return size;\n    } // IE can use depending on mode it is in\n\n\n    if (document.compatMode == 'CSS1Compat' && document.documentElement && document.documentElement.offsetWidth) {\n      size.width = document.documentElement.offsetWidth;\n      size.height = document.documentElement.offsetHeight;\n      return size;\n    } // Earlier IE uses Doc.body\n\n\n    if (document.body && document.body.offsetWidth) {\n      size.width = document.body.offsetWidth;\n      size.height = document.body.offsetHeight;\n      return size;\n    }\n\n    return size;\n  };\n  /* handle dumb browser quirks...  isinstance breaks if you use frames\n  typeof returns 'object' for null, NaN is a number, etc.\n   */\n\n\n  nv.utils.isArray = Array.isArray;\n\n  nv.utils.isObject = function (a) {\n    return a !== null && typeof a === 'object';\n  };\n\n  nv.utils.isFunction = function (a) {\n    return typeof a === 'function';\n  };\n\n  nv.utils.isDate = function (a) {\n    return toString.call(a) === '[object Date]';\n  };\n\n  nv.utils.isNumber = function (a) {\n    return !isNaN(a) && typeof a === 'number';\n  };\n  /*\n  Binds callback function to run when window is resized\n   */\n\n\n  nv.utils.windowResize = function (handler) {\n    if (window.addEventListener) {\n      window.addEventListener('resize', handler);\n    } else {\n      nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    } // return object with clear function to remove the single added callback.\n\n\n    return {\n      callback: handler,\n      clear: function clear() {\n        window.removeEventListener('resize', handler);\n      }\n    };\n  };\n  /*\n  Backwards compatible way to implement more d3-like coloring of graphs.\n  Can take in nothing, an array, or a function/scale\n  To use a normal scale, get the range and pass that because we must be able\n  to take two arguments and use the index to keep backward compatibility\n  */\n\n\n  nv.utils.getColor = function (color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n      return nv.utils.defaultColor(); //if passed an array, turn it into a color scale\n    } else if (nv.utils.isArray(color)) {\n      var color_scale = d3.scale.ordinal().range(color);\n      return function (d, i) {\n        var key = i === undefined ? d : i;\n        return d.color || color_scale(key);\n      }; //if passed a function or scale, return it, or whatever it may be\n      //external libs, such as angularjs-nvd3-directives use this\n    } else {\n      //can't really help it if someone passes rubbish as color\n      return color;\n    }\n  };\n  /*\n  Default color chooser uses a color scale of 20 colors from D3\n   https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n   */\n\n\n  nv.utils.defaultColor = function () {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n  };\n  /*\n  Returns a color function that takes the result of 'getKey' for each series and\n  looks for a corresponding color from the dictionary\n  */\n\n\n  nv.utils.customTheme = function (dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function (series) {\n      return series.key;\n    };\n\n    defaultColors = defaultColors || d3.scale.category20().range(); // start at end of default color list and walk back to index 0\n\n    var defIndex = defaultColors.length;\n    return function (series, index) {\n      var key = getKey(series);\n\n      if (nv.utils.isFunction(dictionary[key])) {\n        return dictionary[key]();\n      } else if (dictionary[key] !== undefined) {\n        return dictionary[key];\n      } else {\n        // no match in dictionary, use a default color\n        if (!defIndex) {\n          // used all the default colors, start over\n          defIndex = defaultColors.length;\n        }\n\n        defIndex = defIndex - 1;\n        return defaultColors[defIndex];\n      }\n    };\n  };\n  /*\n  From the PJAX example on d3js.org, while this is not really directly needed\n  it's a very cool method for doing pjax, I may expand upon it a little bit,\n  open to suggestions on anything that may be useful\n  */\n\n\n  nv.utils.pjax = function (links, content) {\n    var load = function load(href) {\n      d3.html(href, function (fragment) {\n        var target = d3.select(content).node();\n        target.parentNode.replaceChild(d3.select(fragment).select(content).node(), target);\n        nv.utils.pjax(links, content);\n      });\n    };\n\n    d3.selectAll(links).on(\"click\", function () {\n      history.pushState(this.href, this.textContent, this.href);\n      load(this.href);\n      d3.event.preventDefault();\n    });\n    d3.select(window).on(\"popstate\", function () {\n      if (d3.event.state) {\n        load(d3.event.state);\n      }\n    });\n  };\n  /*\n  For when we want to approximate the width in pixels for an SVG:text element.\n  Most common instance is when the element is in a display:none; container.\n  Forumla is : text.length * font-size * constant_factor\n  */\n\n\n  nv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n      var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\", \"\"), 10);\n      var textLength = svgTextElem.text().length;\n      return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n\n    return 0;\n  };\n  /*\n  Numbers that are undefined, null or NaN, convert them to zeros.\n  */\n\n\n  nv.utils.NaNtoZero = function (n) {\n    if (!nv.utils.isNumber(n) || isNaN(n) || n === null || n === Infinity || n === -Infinity) {\n      return 0;\n    }\n\n    return n;\n  };\n  /*\n  Add a way to watch for d3 transition ends to d3\n  */\n\n\n  d3.selection.prototype.watchTransition = function (renderWatch) {\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n  };\n  /*\n  Helper object to watch when d3 has rendered something\n  */\n\n\n  nv.utils.renderWatch = function (dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n      return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n\n    var renderStack = [];\n    var self = this;\n\n    this.models = function (models) {\n      models = [].slice.call(arguments, 0);\n      models.forEach(function (model) {\n        model.__rendered = false;\n\n        (function (m) {\n          m.dispatch.on('renderEnd', function (arg) {\n            m.__rendered = true;\n            self.renderEnd('model');\n          });\n        })(model);\n\n        if (renderStack.indexOf(model) < 0) {\n          renderStack.push(model);\n        }\n      });\n      return this;\n    };\n\n    this.reset = function (duration) {\n      if (duration !== undefined) {\n        _duration = duration;\n      }\n\n      renderStack = [];\n    };\n\n    this.transition = function (selection, args, duration) {\n      args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n      if (args.length > 1) {\n        duration = args.pop();\n      } else {\n        duration = _duration !== undefined ? _duration : 250;\n      }\n\n      selection.__rendered = false;\n\n      if (renderStack.indexOf(selection) < 0) {\n        renderStack.push(selection);\n      }\n\n      if (duration === 0) {\n        selection.__rendered = true;\n\n        selection.delay = function () {\n          return this;\n        };\n\n        selection.duration = function () {\n          return this;\n        };\n\n        return selection;\n      } else {\n        if (selection.length === 0) {\n          selection.__rendered = true;\n        } else if (selection.every(function (d) {\n          return !d.length;\n        })) {\n          selection.__rendered = true;\n        } else {\n          selection.__rendered = false;\n        }\n\n        var n = 0;\n        return selection.transition().duration(duration).each(function () {\n          ++n;\n        }).each('end', function (d, i) {\n          if (--n === 0) {\n            selection.__rendered = true;\n            self.renderEnd.apply(this, args);\n          }\n        });\n      }\n    };\n\n    this.renderEnd = function () {\n      if (renderStack.every(function (d) {\n        return d.__rendered;\n      })) {\n        renderStack.forEach(function (d) {\n          d.__rendered = false;\n        });\n        dispatch.renderEnd.apply(this, arguments);\n      }\n    };\n  };\n  /*\n  Takes multiple objects and combines them into the first one (dst)\n  example:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n  gives:  {a: 2, b: 3, c: 4}\n  */\n\n\n  nv.utils.deepExtend = function (dst) {\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function (source) {\n      for (var key in source) {\n        var isArray = nv.utils.isArray(dst[key]);\n        var isObject = nv.utils.isObject(dst[key]);\n        var srcObj = nv.utils.isObject(source[key]);\n\n        if (isObject && !isArray && srcObj) {\n          nv.utils.deepExtend(dst[key], source[key]);\n        } else {\n          dst[key] = source[key];\n        }\n      }\n    });\n  };\n  /*\n  state utility object, used to track d3 states in the models\n  */\n\n\n  nv.utils.state = function () {\n    if (!(this instanceof nv.utils.state)) {\n      return new nv.utils.state();\n    }\n\n    var state = {};\n\n    var _self = this;\n\n    var _setState = function _setState() {};\n\n    var _getState = function _getState() {\n      return {};\n    };\n\n    var init = null;\n    var changed = null;\n    this.dispatch = d3.dispatch('change', 'set');\n    this.dispatch.on('set', function (state) {\n      _setState(state, true);\n    });\n\n    this.getter = function (fn) {\n      _getState = fn;\n      return this;\n    };\n\n    this.setter = function (fn, callback) {\n      if (!callback) {\n        callback = function callback() {};\n      }\n\n      _setState = function _setState(state, update) {\n        fn(state);\n\n        if (update) {\n          callback();\n        }\n      };\n\n      return this;\n    };\n\n    this.init = function (state) {\n      init = init || {};\n      nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function _set() {\n      var settings = _getState();\n\n      if (JSON.stringify(settings) === JSON.stringify(state)) {\n        return false;\n      }\n\n      for (var key in settings) {\n        if (state[key] === undefined) {\n          state[key] = {};\n        }\n\n        state[key] = settings[key];\n        changed = true;\n      }\n\n      return true;\n    };\n\n    this.update = function () {\n      if (init) {\n        _setState(init, false);\n\n        init = null;\n      }\n\n      if (_set.call(this)) {\n        this.dispatch.change(state);\n      }\n    };\n  };\n  /*\n  Snippet of code you can insert into each nv.models.* to give you the ability to\n  do things like:\n  chart.options({\n    showXAxis: true,\n    tooltips: true\n  });\n  \n  To enable in the chart:\n  chart.options = nv.utils.optionsFunc.bind(chart);\n  */\n\n\n  nv.utils.optionsFunc = function (args) {\n    if (args) {\n      d3.map(args).forEach(function (key, value) {\n        if (nv.utils.isFunction(this[key])) {\n          this[key](value);\n        }\n      }.bind(this));\n    }\n\n    return this;\n  };\n  /*\n  numTicks:  requested number of ticks\n  data:  the chart data\n  \n  returns the number of ticks to actually use on X axis, based on chart data\n  to avoid duplicate ticks with the same value\n  */\n\n\n  nv.utils.calcTicksX = function (numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n\n    for (i; i < data.length; i += 1) {\n      var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n      numValues = stream_len > numValues ? stream_len : numValues;\n    }\n\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues); // make sure we don't have more ticks than values to avoid duplicates\n\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks; // make sure we have at least one tick\n\n    numTicks = numTicks < 1 ? 1 : numTicks; // make sure it's an integer\n\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n  };\n  /*\n  returns number of ticks to actually use on Y axis, based on chart data\n  */\n\n\n  nv.utils.calcTicksY = function (numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n  };\n  /*\n  Add a particular option from an options object onto chart\n  Options exposed on a chart are a getter/setter function that returns chart\n  on set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n  \n  option objects should be generated via Object.create() to provide\n  the option of manipulating data via get/set functions.\n  */\n\n\n  nv.utils.initOption = function (chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n      chart[name] = chart._calls[name];\n    } else {\n      chart[name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n        chart._overrides[name] = true;\n        chart._options[name] = _;\n        return chart;\n      }; // calling the option as _option will ignore if set by option already\n      // so nvd3 can set options internally but the stop if set manually\n\n\n      chart['_' + name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n\n        if (!chart._overrides[name]) {\n          chart._options[name] = _;\n        }\n\n        return chart;\n      };\n    }\n  };\n  /*\n  Add all options in an options object to the chart\n  */\n\n\n  nv.utils.initOptions = function (chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n\n    for (var i in ops) {\n      nv.utils.initOption(chart, ops[i]);\n    }\n  };\n  /*\n  Inherit options from a D3 object\n  d3.rebind makes calling the function on target actually call it on source\n  Also use _d3options so we can track what we inherit for documentation and chained inheritance\n  */\n\n\n  nv.utils.inheritOptionsD3 = function (target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []); // Find unique d3 options (string) and update d3options\n\n    target._d3options = (target._d3options || []).filter(function (item, i, ar) {\n      return ar.indexOf(item) === i;\n    });\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n  };\n  /*\n  Remove duplicates from an array\n  */\n\n\n  nv.utils.arrayUnique = function (a) {\n    return a.sort().filter(function (item, pos) {\n      return !pos || item != a[pos - 1];\n    });\n  };\n  /*\n  Keeps a list of custom symbols to draw from in addition to d3.svg.symbol\n  Necessary since d3 doesn't let you extend its list -_-\n  Add new symbols by doing nv.utils.symbols.set('name', function(size){...});\n  */\n\n\n  nv.utils.symbolMap = d3.map();\n  /*\n  Replaces d3.svg.symbol so that we can look both there and our own map\n   */\n\n  nv.utils.symbol = function () {\n    var type,\n        size = 64;\n\n    function symbol(d, i) {\n      var t = type.call(this, d, i);\n      var s = size.call(this, d, i);\n\n      if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n        return d3.svg.symbol().type(t).size(s)();\n      } else {\n        return nv.utils.symbolMap.get(t)(s);\n      }\n    }\n\n    symbol.type = function (_) {\n      if (!arguments.length) return type;\n      type = d3.functor(_);\n      return symbol;\n    };\n\n    symbol.size = function (_) {\n      if (!arguments.length) return size;\n      size = d3.functor(_);\n      return symbol;\n    };\n\n    return symbol;\n  };\n  /*\n  Inherit option getter/setter functions from source to target\n  d3.rebind makes calling the function on target actually call it on source\n  Also track via _inherited and _d3options so we can track what we inherit\n  for documentation generation purposes and chained inheritance\n  */\n\n\n  nv.utils.inheritOptions = function (target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args); // pass along the lists to keep track of them, don't allow duplicates\n\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n  };\n  /*\n  Runs common initialize code on the svg before the chart builds\n  */\n\n\n  nv.utils.initSVG = function (svg) {\n    svg.classed({\n      'nvd3-svg': true\n    });\n  };\n  /*\n  Sanitize and provide default for the container height.\n  */\n\n\n  nv.utils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n  };\n  /*\n  Sanitize and provide default for the container width.\n  */\n\n\n  nv.utils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n  };\n  /*\n  Calculate the available height for a chart.\n  */\n\n\n  nv.utils.availableHeight = function (height, container, margin) {\n    return Math.max(0, nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n  };\n  /*\n  Calculate the available width for a chart.\n  */\n\n\n  nv.utils.availableWidth = function (width, container, margin) {\n    return Math.max(0, nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n  };\n  /*\n  Clear any rendered chart components and display a chart's 'noData' message\n  */\n\n\n  nv.utils.noData = function (chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = noData == null ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width / 2,\n        y = margin.top + height / 2; //Remove any previously created chart components\n\n    container.selectAll('g').remove();\n    var noDataText = container.selectAll('.nv-noData').data(data);\n    noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n    noDataText.attr('x', x).attr('y', y).text(function (t) {\n      return t;\n    });\n  };\n  /*\n   Wrap long labels.\n   */\n\n\n  nv.utils.wrapTicks = function (text, width) {\n    text.each(function () {\n      var text = d3.select(this),\n          words = text.text().split(/\\s+/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.1,\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n        }\n      }\n    });\n  };\n  /*\n  Check equality of 2 array\n  */\n\n\n  nv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2) return true;\n    if (!array1 || !array2) return false; // compare lengths - can save a lot of time\n\n    if (array1.length != array2.length) return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (array1[i] instanceof Array && array2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!nv.arrayEquals(array1[i], array2[i])) return false;\n      } else if (array1[i] != array2[i]) {\n        // Warning - two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /*\n   Check if a point within an arc\n   */\n\n\n  nv.utils.pointIsInArc = function (pt, ptData, d3Arc) {\n    // Center of the arc is assumed to be 0,0\n    // (pt.x, pt.y) are assumed to be relative to the center\n    var r1 = d3Arc.innerRadius()(ptData),\n        // Note: Using the innerRadius\n    r2 = d3Arc.outerRadius()(ptData),\n        theta1 = d3Arc.startAngle()(ptData),\n        theta2 = d3Arc.endAngle()(ptData);\n    var dist = pt.x * pt.x + pt.y * pt.y,\n        angle = Math.atan2(pt.x, -pt.y); // Note: different coordinate system.\n\n    angle = angle < 0 ? angle + Math.PI * 2 : angle;\n    return r1 * r1 <= dist && dist <= r2 * r2 && theta1 <= angle && angle <= theta2;\n  };\n\n  nv.models.axis = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 75 //only used for tickLabel currently\n    ,\n        height = 60 //only used for tickLabel currently\n    ,\n        axisLabelText = null,\n        showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n    ,\n        rotateLabels = 0,\n        rotateYLabel = true,\n        staggerLabels = false,\n        isOrdinal = false,\n        ticks = null,\n        axisLabelDistance = 0,\n        fontSize = undefined,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'),\n        tickFormatMaxMin;\n    axis.scale(scale).orient('bottom').tickFormat(function (d) {\n      return d;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        if (ticks !== null) axis.ticks(ticks);else if (axis.orient() == 'top' || axis.orient() == 'bottom') axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100); //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\n        g.watchTransition(renderWatch, 'axis').call(axis);\n        scale0 = scale0 || axis.scale();\n        var fmt = axis.tickFormat();\n\n        if (fmt == null) {\n          fmt = scale0.tickFormat();\n        }\n\n        var axisLabel = g.selectAll('text.nv-axislabel').data([axisLabelText || null]);\n        axisLabel.exit().remove(); //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\n        if (fontSize !== undefined) {\n          g.selectAll('g').select(\"text\").style('font-size', fontSize);\n        }\n\n        var xLabelMargin;\n        var axisMaxMin;\n        var w;\n\n        switch (axis.orient()) {\n          case 'top':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', 0).attr('x', w / 2);\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)';\n              }).select('text').attr('dy', '-0.5em').attr('y', -axis.tickPadding()).attr('text-anchor', 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max top').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'bottom':\n            xLabelMargin = axisLabelDistance + 36;\n            var maxTextWidth = 30;\n            var textHeight = 0;\n            var xTicks = g.selectAll('g').select(\"text\");\n            var rotateLabelsRule = '';\n\n            if (rotateLabels % 360) {\n              //Reset transform on ticks so textHeight can be calculated correctly\n              xTicks.attr('transform', ''); //Calculate the longest xTick width\n\n              xTicks.each(function (d, i) {\n                var box = this.getBoundingClientRect();\n                var width = box.width;\n                textHeight = box.height;\n                if (width > maxTextWidth) maxTextWidth = width;\n              });\n              rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight / 2 + axis.tickPadding()) + ')'; //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\n              var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180));\n              xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30; //Rotate all xTicks\n\n              xTicks.attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels % 360 > 0 ? 'start' : 'end');\n            } else {\n              if (staggerLabels) {\n                xTicks.attr('transform', function (d, i) {\n                  return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')';\n                });\n              } else {\n                xTicks.attr('transform', \"translate(0,0)\");\n              }\n            }\n\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', xLabelMargin).attr('x', w / 2);\n\n            if (showMaxMin) {\n              //if (showMaxMin && !isOrdinal) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin') //.data(scale.domain())\n              .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              }).select('text').attr('dy', '.71em').attr('y', axis.tickPadding()).attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels ? rotateLabels % 360 > 0 ? 'start' : 'end' : 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max bottom').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'right':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'begin').attr('transform', rotateYLabel ? 'rotate(90)' : '').attr('y', rotateYLabel ? -Math.max(margin.right, width) + 12 - (axisLabelDistance || 0) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n            .attr('x', rotateYLabel ? d3.max(scale.range()) / 2 : axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', axis.tickPadding()).style('text-anchor', 'start').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n\n          case 'left':\n            /*\n             //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n             var yTicks = g.selectAll('g').select(\"text\");\n             yTicks.each(function(d,i){\n             var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n             if(labelPadding > width) width = labelPadding;\n             });\n             */\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'end').attr('transform', rotateYLabel ? 'rotate(-90)' : '').attr('y', rotateYLabel ? -Math.max(margin.left, width) + 25 - (axisLabelDistance || 0) : -10).attr('x', rotateYLabel ? -d3.max(scale.range()) / 2 : -axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', -axis.tickPadding()).attr('text-anchor', 'end').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n        }\n\n        axisLabel.text(function (d) {\n          return d;\n        });\n\n        if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n          //check if max and min overlap other values, if so, hide the values that overlap\n          g.selectAll('g') // the g's wrapping each tick\n          .each(function (d, i) {\n            d3.select(this).select('text').attr('opacity', 1);\n\n            if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) {\n              // 10 is assuming text height is 16... if d is 0, leave it!\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).attr('opacity', 0);\n              d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n            }\n          }); //if Max and Min = 0 only show min, Issue #281\n\n          if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n            wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n              return !i ? 1 : 0;\n            });\n          }\n        }\n\n        if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n          var maxMinRange = [];\n          wrap.selectAll('g.nv-axisMaxMin').each(function (d, i) {\n            try {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4);\n            } catch (err) {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + 4);\n            }\n          }); // the g's wrapping each tick\n\n          g.selectAll('g').each(function (d, i) {\n            if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).remove();else d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n            }\n          });\n        } //Highlight zero tick line\n\n\n        g.selectAll('.tick').filter(function (d) {\n          /*\n          The filter needs to return only ticks at or near zero.\n          Numbers like 0.00001 need to count as zero as well,\n          and the arithmetic trick below solves that.\n          */\n          return !parseFloat(Math.round(d * 100000) / 1000000) && d !== undefined;\n        }).classed('zero', true); //store old scales for use in transitions on update\n\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('axis immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      axisLabelDistance: {\n        get: function get() {\n          return axisLabelDistance;\n        },\n        set: function set(_) {\n          axisLabelDistance = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      rotateYLabel: {\n        get: function get() {\n          return rotateYLabel;\n        },\n        set: function set(_) {\n          rotateYLabel = _;\n        }\n      },\n      showMaxMin: {\n        get: function get() {\n          return showMaxMin;\n        },\n        set: function set(_) {\n          showMaxMin = _;\n        }\n      },\n      axisLabel: {\n        get: function get() {\n          return axisLabelText;\n        },\n        set: function set(_) {\n          axisLabelText = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      fontSize: {\n        get: function get() {\n          return fontSize;\n        },\n        set: function set(_) {\n          fontSize = _;\n        }\n      },\n      tickFormatMaxMin: {\n        get: function get() {\n          return tickFormatMaxMin;\n        },\n        set: function set(_) {\n          tickFormatMaxMin = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      scale: {\n        get: function get() {\n          return scale;\n        },\n        set: function set(_) {\n          scale = _;\n          axis.scale(scale);\n          isOrdinal = typeof scale.rangeBands === 'function';\n          nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n    return chart;\n  };\n\n  nv.models.boxPlot = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000),\n        // Create semi-unique ID in case user doesn't select one\n    xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.label;\n    },\n        // Default data model selectors.\n    getQ1 = function getQ1(d) {\n      return d.values.Q1;\n    },\n        getQ2 = function getQ2(d) {\n      return d.values.Q2;\n    },\n        getQ3 = function getQ3(d) {\n      return d.values.Q3;\n    },\n        getWl = function getWl(d) {\n      return d.values.whisker_low;\n    },\n        getWh = function getWh(d) {\n      return d.values.whisker_high;\n    },\n        getColor = function getColor(d) {\n      return d.color;\n    },\n        getOlItems = function getOlItems(d) {\n      return d.values.outliers;\n    },\n        getOlValue = function getOlValue(d, i, j) {\n      return d;\n    },\n        getOlLabel = function getOlLabel(d, i, j) {\n      return d;\n    },\n        getOlColor = function getOlColor(d, i, j) {\n      return undefined;\n    },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain,\n        xRange,\n        yDomain,\n        yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        xScale.domain(xDomain || data.map(function (d, i) {\n          return getX(d, i);\n        })).rangeBands(xRange || [0, availableWidth], 0.1); // if we know yDomain, no need to calculate\n\n        var yData = [];\n\n        if (!yDomain) {\n          // (y-range is based on quartiles, whiskers and outliers)\n          var values = [],\n              yMin,\n              yMax;\n          data.forEach(function (d, i) {\n            var q1 = getQ1(d),\n                q3 = getQ3(d),\n                wl = getWl(d),\n                wh = getWh(d);\n            var olItems = getOlItems(d);\n\n            if (olItems) {\n              olItems.forEach(function (e, i) {\n                values.push(getOlValue(e, i, undefined));\n              });\n            }\n\n            if (wl) {\n              values.push(wl);\n            }\n\n            if (q1) {\n              values.push(q1);\n            }\n\n            if (q3) {\n              values.push(q3);\n            }\n\n            if (wh) {\n              values.push(wh);\n            }\n          });\n          yMin = d3.min(values);\n          yMax = d3.max(values);\n          yData = [yMin, yMax];\n        }\n\n        yScale.domain(yDomain || yData);\n        yScale.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        xScale0 = xScale0 || xScale;\n        yScale0 = yScale0 || yScale.copy().range([yScale(0), yScale(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var boxplots = wrap.selectAll('.nv-boxplot').data(function (d) {\n          return d;\n        });\n        var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        boxplots.attr('class', 'nv-boxplot').attr('transform', function (d, i, j) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        boxplots.watchTransition(renderWatch, 'nv-boxplot: boxplots').style('stroke-opacity', 1).style('fill-opacity', 0.75).delay(function (d, i) {\n          return i * duration / data.length;\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        });\n        boxplots.exit().remove(); // ----- add the SVG elements for each boxPlot -----\n        // conditionally append whisker lines\n\n        boxEnter.each(function (d, i) {\n          var box = d3.select(this);\n          [getWl, getWh].forEach(function (f) {\n            if (f(d) !== undefined && f(d) !== null) {\n              var key = f === getWl ? 'low' : 'high';\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n            }\n          });\n        });\n\n        var box_width = function box_width() {\n          return maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9);\n        };\n\n        var box_left = function box_left() {\n          return xScale.rangeBand() * 0.45 - box_width() / 2;\n        };\n\n        var box_right = function box_right() {\n          return xScale.rangeBand() * 0.45 + box_width() / 2;\n        }; // update whisker lines and ticks\n\n\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          var endpoint = f === getWl ? getQ1 : getQ3;\n          boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', xScale.rangeBand() * 0.45).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', xScale.rangeBand() * 0.45).attr('y2', function (d, i) {\n            return yScale(endpoint(d));\n          });\n          boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', box_left).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', box_right).attr('y2', function (d, i) {\n            return yScale(f(d));\n          });\n        });\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          boxEnter.selectAll('.nv-boxplot-' + key).on('mouseover', function (d, i, j) {\n            d3.select(this).classed('hover', true);\n            dispatch.elementMouseover({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mouseout', function (d, i, j) {\n            d3.select(this).classed('hover', false);\n            dispatch.elementMouseout({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mousemove', function (d, i) {\n            dispatch.elementMousemove({\n              e: d3.event\n            });\n          });\n        }); // boxes\n\n        boxEnter.append('rect').attr('class', 'nv-boxplot-box') // tooltip events\n        .on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        }); // box transitions\n\n        boxplots.select('rect.nv-boxplot-box').watchTransition(renderWatch, 'nv-boxplot: boxes').attr('y', function (d, i) {\n          return yScale(getQ3(d));\n        }).attr('width', box_width).attr('x', box_left).attr('height', function (d, i) {\n          return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1;\n        }).style('fill', function (d, i) {\n          return getColor(d) || color(d, i);\n        }).style('stroke', function (d, i) {\n          return getColor(d) || color(d, i);\n        }); // median line\n\n        boxEnter.append('line').attr('class', 'nv-boxplot-median');\n        boxplots.select('line.nv-boxplot-median').watchTransition(renderWatch, 'nv-boxplot: boxplots line').attr('x1', box_left).attr('y1', function (d, i) {\n          return yScale(getQ2(d));\n        }).attr('x2', box_right).attr('y2', function (d, i) {\n          return yScale(getQ2(d));\n        }); // outliers\n\n        var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function (d) {\n          return getOlItems(d) || [];\n        });\n        outliers.enter().append('circle').style('fill', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('stroke', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('z-index', 9000).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        });\n        outliers.attr('class', 'nv-boxplot-outlier');\n        outliers.watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier').attr('cx', xScale.rangeBand() * 0.45).attr('cy', function (d, i, j) {\n          return yScale(getOlValue(d, i, j));\n        }).attr('r', '3');\n        outliers.exit().remove(); //store old scales for use in transitions on update\n\n        xScale0 = xScale.copy();\n        yScale0 = yScale.copy();\n      });\n      renderWatch.renderEnd('nv-boxplot immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      maxBoxWidth: {\n        get: function get() {\n          return maxBoxWidth;\n        },\n        set: function set(_) {\n          maxBoxWidth = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      q1: {\n        get: function get() {\n          return getQ1;\n        },\n        set: function set(_) {\n          getQ1 = _;\n        }\n      },\n      q2: {\n        get: function get() {\n          return getQ2;\n        },\n        set: function set(_) {\n          getQ2 = _;\n        }\n      },\n      q3: {\n        get: function get() {\n          return getQ3;\n        },\n        set: function set(_) {\n          getQ3 = _;\n        }\n      },\n      wl: {\n        get: function get() {\n          return getWl;\n        },\n        set: function set(_) {\n          getWl = _;\n        }\n      },\n      wh: {\n        get: function get() {\n          return getWh;\n        },\n        set: function set(_) {\n          getWh = _;\n        }\n      },\n      itemColor: {\n        get: function get() {\n          return getColor;\n        },\n        set: function set(_) {\n          getColor = _;\n        }\n      },\n      outliers: {\n        get: function get() {\n          return getOlItems;\n        },\n        set: function set(_) {\n          getOlItems = _;\n        }\n      },\n      outlierValue: {\n        get: function get() {\n          return getOlValue;\n        },\n        set: function set(_) {\n          getOlValue = _;\n        }\n      },\n      outlierLabel: {\n        get: function get() {\n          return getOlLabel;\n        },\n        set: function set(_) {\n          getOlLabel = _;\n        }\n      },\n      outlierColor: {\n        get: function get() {\n          return getOlColor;\n        },\n        set: function set(_) {\n          getOlColor = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return xScale;\n        },\n        set: function set(_) {\n          xScale = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return yScale;\n        },\n        set: function set(_) {\n          yScale = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n      y: {\n        get: function get() {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n          return {};\n        },\n        set: function set(_) {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.boxPlotChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x,\n        y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(boxplot);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = (width || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n        var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n        // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\n        if (!data || !data.length) {\n          var noDataText = container.selectAll('.nv-noData').data([noData]);\n          noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n          noDataText.attr('x', margin.left + availableWidth / 2).attr('y', margin.top + availableHeight / 2).text(function (d) {\n            return d;\n          });\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = boxplot.xScale();\n        y = boxplot.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(' + availableWidth + ',0)');\n        } // Main Chart Component(s)\n\n\n        boxplot.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(boxplot);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + boxplot.id()).append('rect');\n        g.select('#nv-x-label-clip-' + boxplot.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x).ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')';\n            });\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y).ticks(Math.floor(availableHeight / 36)) // can't use nv.utils.calcTicksY with Object data\n          .tickSize(-availableWidth, 0);\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select('.nv-zeroLine line').attr('x1', 0).attr('x2', availableWidth).attr('y1', y(0)).attr('y2', y(0)); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n      });\n      renderWatch.renderEnd('nv-boxplot chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.data(evt).hidden(false);\n    });\n    boxplot.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.data(evt).hidden(true);\n    });\n    boxplot.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      tooltipContent: {\n        get: function get() {\n          return tooltip;\n        },\n        set: function set(_) {\n          tooltip = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          boxplot.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          boxplot.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bullet = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        markerLines = function markerLines(d) {\n      return d.markerLines ? d.markerLines : [0];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        rangeLabels = function rangeLabels(d) {\n      return d.rangeLabels ? d.rangeLabels : [];\n    },\n        markerLabels = function markerLabels(d) {\n      return d.markerLabels ? d.markerLabels : [];\n    },\n        markerLineLabels = function markerLineLabels(d) {\n      return d.markerLineLabels ? d.markerLineLabels : [];\n    },\n        measureLabels = function measureLabels(d) {\n      return d.measureLabels ? d.measureLabels : [];\n    },\n        forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        width = 380,\n        height = 30,\n        container = null,\n        tickFormat = null,\n        color = nv.utils.getColor(['#1f77b4']),\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove'),\n        defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"],\n        legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"],\n        duration = 1000;\n\n    function sortLabels(labels, values) {\n      var lz = labels.slice();\n      labels.sort(function (a, b) {\n        var iA = lz.indexOf(a);\n        var iB = lz.indexOf(b);\n        return d3.descending(values[iA], values[iB]);\n      });\n    }\n\n    ;\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var rangez = ranges.call(this, d, i).slice(),\n            markerz = markers.call(this, d, i).slice(),\n            markerLinez = markerLines.call(this, d, i).slice(),\n            measurez = measures.call(this, d, i).slice(),\n            rangeLabelz = rangeLabels.call(this, d, i).slice(),\n            markerLabelz = markerLabels.call(this, d, i).slice(),\n            markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n            measureLabelz = measureLabels.call(this, d, i).slice(); // Sort labels according to their sorted values\n\n        sortLabels(rangeLabelz, rangez);\n        sortLabels(markerLabelz, markerz);\n        sortLabels(markerLineLabelz, markerLinez);\n        sortLabels(measureLabelz, measurez); // sort values descending\n\n        rangez.sort(d3.descending);\n        markerz.sort(d3.descending);\n        markerLinez.sort(d3.descending);\n        measurez.sort(d3.descending); // Setup Scales\n        // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain(d3.extent(d3.merge([forceX, rangez]))).range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n        var rangeMin = d3.min(rangez),\n            //rangez[2]\n        rangeMax = d3.max(rangez),\n            //rangez[0]\n        rangeAvg = rangez[1]; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var rangeClassNames = 'nv-range nv-range' + i;\n\n          if (i <= 2) {\n            rangeClassNames = rangeClassNames + ' nv-range' + legacyRangeClassNames[i];\n          }\n\n          gEnter.append('rect').attr('class', rangeClassNames);\n        }\n\n        gEnter.append('rect').attr('class', 'nv-measure');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var xp0 = function xp0(d) {\n          return d < 0 ? x0(d) : x0(0);\n        },\n            xp1 = function xp1(d) {\n          return d < 0 ? x1(d) : x1(0);\n        };\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var range = rangez[i];\n          g.select('rect.nv-range' + i).datum(range).attr('height', availableHeight).transition().duration(duration).attr('width', w1(range)).attr('x', xp1(range));\n        }\n\n        g.select('rect.nv-measure').style('fill', color).attr('height', availableHeight / 3).attr('y', availableHeight / 3).on('mouseover', function () {\n          dispatch.elementMouseover({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function () {\n          dispatch.elementMouseout({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).transition().duration(duration).attr('width', measurez < 0 ? x1(0) - x1(measurez[0]) : x1(measurez[0]) - x1(0)).attr('x', xp1(measurez));\n        var h3 = availableHeight / 6;\n        var markerData = markerz.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"path.nv-markerTriangle\").data(markerData).enter().append('path').attr('class', 'nv-markerTriangle').attr('d', 'M0,' + h3 + 'L' + h3 + ',' + -h3 + ' ' + -h3 + ',' + -h3 + 'Z').on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"path.nv-markerTriangle\").data(markerData).transition().duration(duration).attr('transform', function (d) {\n          return 'translate(' + x1(d.value) + ',' + availableHeight / 2 + ')';\n        });\n        var markerLinesData = markerLinez.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLineLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"line.nv-markerLine\").data(markerLinesData).enter().append('line').attr('cursor', '').attr('class', 'nv-markerLine').attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('y1', '2').attr('x2', function (d) {\n          return x1(d.value);\n        }).attr('y2', availableHeight - 2).on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"line.nv-markerLine\").data(markerLinesData).transition().duration(duration).attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('x2', function (d) {\n          return x1(d.value);\n        });\n        wrap.selectAll('.nv-range').on('mouseover', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseover({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseout({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bulletChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        margin = {\n      top: 5,\n      right: 40,\n      bottom: 20,\n      left: 120\n    },\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        width = null,\n        height = 55,\n        tickFormat = null,\n        ticks = null,\n        noData = null,\n        dispatch = d3.dispatch();\n\n    tooltip.duration(0).headerEnabled(false);\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom,\n            that = this;\n\n        chart.update = function () {\n          chart(selection);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!d || !ranges.call(this, d, i)) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n            markerz = markers.call(this, d, i).slice().sort(d3.descending),\n            measurez = measures.call(this, d, i).slice().sort(d3.descending); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bulletWrap');\n        gEnter.append('g').attr('class', 'nv-titles');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain([0, Math.max(rangez[0], markerz[0] || 0, measurez[0])]) // TODO: need to allow forceX and forceY, and xDomain, yDomain\n        .range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var title = gEnter.select('.nv-titles').append('g').attr('text-anchor', 'end').attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n        title.append('text').attr('class', 'nv-title').text(function (d) {\n          return d.title;\n        });\n        title.append('text').attr('class', 'nv-subtitle').attr('dy', '1em').text(function (d) {\n          return d.subtitle;\n        });\n        bullet.width(availableWidth).height(availableHeight);\n        var bulletWrap = g.select('.nv-bulletWrap');\n        d3.transition(bulletWrap).call(bullet); // Compute the tick format.\n\n        var format = tickFormat || x1.tickFormat(availableWidth / 100); // Update the tick groups.\n\n        var tick = g.selectAll('g.nv-tick').data(x1.ticks(ticks ? ticks : availableWidth / 50), function (d) {\n          return this.textContent || format(d);\n        }); // Initialize the ticks with the old scale, x0.\n\n        var tickEnter = tick.enter().append('g').attr('class', 'nv-tick').attr('transform', function (d) {\n          return 'translate(' + x0(d) + ',0)';\n        }).style('opacity', 1e-6);\n        tickEnter.append('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickEnter.append('text').attr('text-anchor', 'middle').attr('dy', '1em').attr('y', availableHeight * 7 / 6).text(format); // Transition the updating ticks to the new scale, x1.\n\n        var tickUpdate = d3.transition(tick).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1);\n        tickUpdate.select('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickUpdate.select('text').attr('y', availableHeight * 7 / 6); // Transition the exiting ticks to the new scale, x1.\n\n        d3.transition(tick.exit()).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1e-6).remove();\n      });\n      d3.timer.flush();\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bullet.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: evt.label,\n        value: evt.value,\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bullet.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bullet.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.candlestickBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Width of the candlestick bars.\n\n        var barWidth = availableWidth / data[0].values.length * .45; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        var tickGroups = ticks.enter().append('g'); // The colors are currently controlled by CSS.\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        var lines = tickGroups.append('line').attr('class', 'nv-candlestick-lines').attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        var rects = tickGroups.append('rect').attr('class', 'nv-candlestick-rects nv-bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n        ticks.select('.nv-candlestick-lines').transition().attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        ticks.select('.nv-candlestick-rects').transition().attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-candlestickBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.cumulativeLineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        showControls = true,\n        useInteractiveGuideline = false,\n        rescaleY = true,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        id = lines.id(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        average = function average(d) {\n      return d.average;\n    },\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250,\n        duration = 250,\n        noErrorCheck = false //if set to TRUE, will bypass an error check in the indexify function.\n    ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear(),\n        index = {\n      i: 0,\n      x: 0\n    },\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        currentYDomain;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          index: index.i,\n          rescaleY: rescaleY\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.index !== undefined) index.i = state.index;\n        if (state.rescaleY !== undefined) rescaleY = state.rescaleY;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        container.classed('nv-chart-' + id, true);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        }\n\n        var indexDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd);\n\n        function dragStart(d, i) {\n          d3.select(chart.container).style('cursor', 'ew-resize');\n        }\n\n        function dragMove(d, i) {\n          index.x = d3.event.x;\n          index.i = Math.round(dx.invert(index.x));\n          updateZero();\n        }\n\n        function dragEnd(d, i) {\n          d3.select(chart.container).style('cursor', 'auto'); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = lines.xScale();\n        y = lines.yScale();\n        dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n        .range([0, availableWidth]).clamp(true);\n        var data = indexify(index.i, data); // initialize the starting yDomain for the not-rescale case after indexify (to have calculated point.display)\n\n        if (typeof currentYDomain === \"undefined\") {\n          currentYDomain = getCurrentYDomain(data);\n        }\n\n        if (!rescaleY) {\n          lines.yDomain(currentYDomain);\n          lines.clipEdge(true);\n        } else {\n          lines.yDomain(null);\n        } // Setup containers and skeleton of chart\n\n\n        var interactivePointerEvents = useInteractiveGuideline ? \"none\" : \"all\";\n        var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-background');\n        gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\", interactivePointerEvents);\n        gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: 'Re-scale y-axis',\n            disabled: !rescaleY\n          }];\n          controls.width(140).color(['#444', '#444', '#444']).rightAlign(false).margin({\n            top: 5,\n            right: 0,\n            bottom: 5,\n            left: 20\n          });\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Show error if index point value is 0 (division by zero avoided)\n\n\n        var tempDisabled = data.filter(function (d) {\n          return d.tempDisabled;\n        });\n        wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\n        if (tempDisabled.length) {\n          wrap.append('text').attr('class', 'tempDisabled').attr('x', availableWidth / 2).attr('y', '-.71em').style('text-anchor', 'end').text(tempDisabled.map(function (d) {\n            return d.key;\n          }).join(', ') + ' values cannot be calculated for this time period.');\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        gEnter.select('.nv-background').append('rect');\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines //.x(function(d) { return d.x })\n        .y(function (d) {\n          return d.display.y;\n        }).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].tempDisabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled && !d.tempDisabled;\n        }));\n        linesWrap.call(lines); //Store a series index number in the data array.\n\n        data.forEach(function (d, i) {\n          d.seriesIndex = i;\n        });\n        var avgLineData = data.filter(function (d) {\n          return !d.disabled && !!average(d);\n        });\n        var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\").data(avgLineData, function (d) {\n          return d.key;\n        });\n\n        var getAvgLineY = function getAvgLineY(d) {\n          //If average lines go off the svg element, clamp them to the svg bounds.\n          var yVal = y(average(d));\n          if (yVal < 0) return 0;\n          if (yVal > availableHeight) return availableHeight;\n          return yVal;\n        };\n\n        avgLines.enter().append('line').style('stroke-width', 2).style('stroke-dasharray', '10,10').style('stroke', function (d, i) {\n          return lines.color()(d, d.seriesIndex);\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.style('stroke-opacity', function (d) {\n          //If average lines go offscreen, make them transparent\n          var yVal = y(average(d));\n          if (yVal < 0 || yVal > availableHeight) return 0;\n          return 1;\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.exit().remove(); //Create index line\n\n        var indexLine = linesWrap.selectAll('.nv-indexLine').data([index]);\n        indexLine.enter().append('rect').attr('class', 'nv-indexLine').attr('width', 3).attr('x', -2).attr('fill', 'red').attr('fill-opacity', .5).style(\"pointer-events\", \"all\").call(indexDrag);\n        indexLine.attr('transform', function (d) {\n          return 'translate(' + dx(d.i) + ',0)';\n        }).attr('height', availableHeight); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 70, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        function updateZero() {\n          indexLine.data([index]); //When dragging the index line, turn off line transitions.\n          // Then turn them back on when done dragging.\n\n          var oldDuration = chart.duration();\n          chart.duration(0);\n          chart.update();\n          chart.duration(oldDuration);\n        }\n\n        g.select('.nv-background rect').on('click', function () {\n          index.x = d3.mouse(this)[0];\n          index.i = Math.round(dx.invert(index.x)); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        lines.dispatch.on('elementClick', function (e) {\n          index.i = e.pointIndex;\n          index.x = dx(index.i); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n          rescaleY = !d.disabled;\n          state.rescaleY = rescaleY;\n\n          if (!rescaleY) {\n            currentYDomain = getCurrentYDomain(data); // rescale is turned off, so set the currentYDomain\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !(series.disabled || series.tempDisabled);\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            lines.highlightPoint(i, pointIndex, true);\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex)\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex), pointIndex);\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.index !== 'undefined') {\n            index.i = e.index;\n            index.x = dx(index.i);\n            state.index = e.index;\n            indexLine.data([index]);\n          }\n\n          if (typeof e.rescaleY !== 'undefined') {\n            rescaleY = e.rescaleY;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('cumulativeLineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var point = {\n        x: chart.x()(evt.point),\n        y: chart.y()(evt.point),\n        color: evt.point.color\n      };\n      evt.point = point;\n      tooltip.data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n\n    function indexify(idx, data) {\n      if (!indexifyYGetter) indexifyYGetter = lines.y();\n      return data.map(function (line, i) {\n        if (!line.values) {\n          return line;\n        }\n\n        var indexValue = line.values[idx];\n\n        if (indexValue == null) {\n          return line;\n        }\n\n        var v = indexifyYGetter(indexValue, idx); // avoid divide by zero\n\n        if (Math.abs(v) < 0.00001 && !noErrorCheck) {\n          line.tempDisabled = true;\n          return line;\n        }\n\n        line.tempDisabled = false;\n        line.values = line.values.map(function (point, pointIndex) {\n          point.display = {\n            'y': (indexifyYGetter(point, pointIndex) - v) / v\n          };\n          return point;\n        });\n        return line;\n      });\n    }\n\n    function getCurrentYDomain(data) {\n      var seriesDomains = data.filter(function (series) {\n        return !(series.disabled || series.tempDisabled);\n      }).map(function (series, i) {\n        return d3.extent(series.values, function (d) {\n          return d.display.y;\n        });\n      });\n      return [d3.min(seriesDomains, function (d) {\n        return d[0];\n      }), d3.max(seriesDomains, function (d) {\n        return d[1];\n      })];\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      average: {\n        get: function get() {\n          return average;\n        },\n        set: function set(_) {\n          average = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noErrorCheck: {\n        get: function get() {\n          return noErrorCheck;\n        },\n        set: function set(_) {\n          noErrorCheck = _;\n        }\n      },\n      // options that require extra logic in the setter\n      rescaleY: {\n        get: function get() {\n          return rescaleY;\n        },\n        set: function set(_) {\n          rescaleY = _;\n          chart.state.rescaleY = _; // also update state\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n            chart.useVoronoi(false);\n          }\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          lines.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating by adding necessary features to multiBar model\n\n\n  nv.models.discreteBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        showValues = false,\n        valueFormat = d3.format(',.2f'),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        rectClass = 'discreteBar',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], .1);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return d.y;\n        }).concat(forceY))); // If showValues, pad the Y axis range to account for label height\n\n        if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);else y.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        x0 = x0 || x;\n        y0 = y0 || y.copy().range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'discreteBar: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'discreteBar: groups').style('stroke-opacity', 1).style('fill-opacity', .75);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + (x(getX(d, i)) + x.rangeBand() * .05) + ', ' + y(0) + ')';\n        }).on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        barsEnter.append('rect').attr('height', 0).attr('width', x.rangeBand() * .9 / data.length);\n\n        if (showValues) {\n          barsEnter.append('text').attr('text-anchor', 'middle');\n          bars.select('text').text(function (d, i) {\n            return valueFormat(getY(d, i));\n          }).watchTransition(renderWatch, 'discreteBar: bars text').attr('x', x.rangeBand() * .9 / 2).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(getY(d, i)) - y(0) + 12 : -4;\n          });\n        } else {\n          bars.selectAll('text').remove();\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).style('fill', function (d, i) {\n          return d.color || color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).select('rect').attr('class', rectClass).watchTransition(renderWatch, 'discreteBar: bars rect').attr('width', x.rangeBand() * .9 / data.length);\n        bars.watchTransition(renderWatch, 'discreteBar: bars') //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n        .attr('transform', function (d, i) {\n          var left = x(getX(d, i)) + x.rangeBand() * .05,\n              top = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : //make 1 px positive bars show up above y=0\n          y(getY(d, i));\n          return 'translate(' + left + ', ' + top + ')';\n        }).select('rect').attr('height', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('discreteBar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      rectClass: {\n        get: function get() {\n          return rectClass;\n        },\n        set: function set(_) {\n          rectClass = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.discreteBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x,\n        y,\n        noData = null,\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).keyFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(discretebar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = discretebar.xScale();\n        y = discretebar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        discretebar.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(discretebar);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + discretebar.id()).append('rect');\n        g.select('#nv-x-label-clip-' + discretebar.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + (y.range()[0] + (discretebar.showValues() && y.domain()[0] < 0 ? 16 : 0)) + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')';\n            });\n          }\n\n          if (rotateLabels) {\n            xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", 0).attr(\"x2\", rightAlignYAxis ? -availableWidth : availableWidth).attr(\"y1\", y(0)).attr(\"y2\", y(0));\n      });\n      renderWatch.renderEnd('discreteBar chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    discretebar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    discretebar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          discretebar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          discretebar.color(color);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.distribution = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 400 //technically width or height depending on x or y....\n    ,\n        size = 8,\n        axis = 'x' // 'x' or 'y'... horizontal or vertical\n    ,\n        getData = function getData(d) {\n      return d[axis];\n    } // defaults d.x or d.y\n    ,\n        color = nv.utils.defaultColor(),\n        scale = d3.scale.linear(),\n        domain,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n            naxis = axis == 'x' ? 'y' : 'x',\n            container = d3.select(this);\n        nv.utils.initSVG(container); //------------------------------------------------------------\n        // Setup Scales\n\n        scale0 = scale0 || scale; //------------------------------------------------------------\n        //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-distribution').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //------------------------------------------------------------\n\n        var distWrap = g.selectAll('g.nv-dist').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        distWrap.enter().append('g');\n        distWrap.attr('class', function (d, i) {\n          return 'nv-dist nv-series-' + i;\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        var dist = distWrap.selectAll('line.nv-dist' + axis).data(function (d) {\n          return d.values;\n        });\n        dist.enter().append('line').attr(axis + '1', function (d, i) {\n          return scale0(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale0(getData(d, i));\n        });\n        renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        }).style('stroke-opacity', 0).remove();\n        dist.attr('class', function (d, i) {\n          return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i;\n        }).attr(naxis + '1', 0).attr(naxis + '2', size);\n        renderWatch.transition(dist, 'dist') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        });\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('distribution immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n      margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return chart;\n    };\n\n    chart.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return chart;\n    };\n\n    chart.axis = function (_) {\n      if (!arguments.length) return axis;\n      axis = _;\n      return chart;\n    };\n\n    chart.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return chart;\n    };\n\n    chart.getData = function (_) {\n      if (!arguments.length) return getData;\n      getData = d3.functor(_);\n      return chart;\n    };\n\n    chart.scale = function (_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return chart;\n    };\n\n    chart.color = function (_) {\n      if (!arguments.length) return color;\n      color = nv.utils.getColor(_);\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      return chart;\n    }; //============================================================\n\n\n    return chart;\n  };\n\n  nv.models.focus = function (content) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        brush = d3.svg.brush();\n    var margin = {\n      top: 10,\n      right: 0,\n      bottom: 30,\n      left: 0\n    },\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = 70,\n        showXAxis = true,\n        showYAxis = false,\n        rightAlignYAxis = false,\n        ticks = null,\n        x,\n        y,\n        brushExtent = null,\n        duration = 250,\n        dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd'),\n        syncBrushing = true;\n    content.interactive(false);\n    content.pointActive(function (d) {\n      return false;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(content);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom;\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this; // Setup Scales\n\n        x = content.xScale();\n        y = content.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-focus').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        gEnter.append('g').attr('class', 'nv-background').append('rect');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-contentWrap');\n        gEnter.append('g').attr('class', 'nv-brushBackground');\n        gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        }\n\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        content.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var contentWrap = g.select('.nv-contentWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        d3.transition(contentWrap).call(content); // Setup Brush\n\n        brush.x(x).on('brush', function () {\n          onBrush(syncBrushing);\n        });\n        brush.on('brushend', function () {\n          if (!syncBrushing) {\n            dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n          }\n        });\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect').attr('height', availableHeight);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n        onBrush(true);\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          d3.transition(g.select('.nv-y.nv-axis')).call(yAxis);\n        }\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')'); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x(d[0]) - x.range()[0],\n                rightWidth = availableWidth - x(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush(shouldDispatch) {\n          brushExtent = brush.empty() ? null : brush.extent();\n          var extent = brush.empty() ? x.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG();\n\n          if (shouldDispatch) {\n            dispatch.onBrush(extent);\n          }\n        }\n      });\n      renderWatch.renderEnd('focus immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      syncBrushing: {\n        get: function get() {\n          return syncBrushing;\n        },\n        set: function set(_) {\n          syncBrushing = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          content.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          content.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return content.interpolate();\n        },\n        set: function set(_) {\n          content.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return content.x();\n        },\n        set: function set(_) {\n          content.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return content.y();\n        },\n        set: function set(_) {\n          content.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.forceDirectedGraph = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        dispatch = d3.dispatch('renderEnd'),\n        color = nv.utils.getColor(['#000']),\n        tooltip = nv.models.tooltip(),\n        noData = null // Force directed graph specific parameters [default values]\n    ,\n        linkStrength = 0.1,\n        friction = 0.9,\n        linkDist = 30,\n        charge = -120,\n        gravity = 0.1,\n        theta = 0.8,\n        alpha = 0.1,\n        radius = 5 // These functions allow to add extra attributes to ndes and links\n    ,\n        nodeExtras = function nodeExtras(nodes) {\n      /* Do nothing */\n    },\n        linkExtras = function linkExtras(links) {\n      /* Do nothing */\n    },\n        getX = d3.functor(0.0),\n        getY = d3.functor(0.0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        container.attr(\"width\", availableWidth).attr(\"height\", availableHeight); // Display No Data message if there's nothing to show.\n\n        if (!data || !data.links || !data.nodes) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        container.selectAll('*').remove(); // Collect names of all fields in the nodes\n\n        var nodeFieldSet = new Set();\n        data.nodes.forEach(function (node) {\n          var keys = Object.keys(node);\n          keys.forEach(function (key) {\n            nodeFieldSet.add(key);\n          });\n        });\n        var force = d3.layout.force().nodes(data.nodes).links(data.links).size([availableWidth, availableHeight]).linkStrength(linkStrength).friction(friction).linkDistance(linkDist).charge(charge).gravity(gravity).theta(theta).alpha(alpha).start();\n        var link = container.selectAll(\".link\").data(data.links).enter().append(\"line\").attr(\"class\", \"nv-force-link\").style(\"stroke-width\", function (d) {\n          return Math.sqrt(d.value);\n        });\n        var node = container.selectAll(\".node\").data(data.nodes).enter().append(\"g\").attr(\"class\", \"nv-force-node\").call(force.drag);\n        node.append(\"circle\").attr(\"r\", radius).style(\"fill\", function (d) {\n          return color(d);\n        }).on(\"mouseover\", function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.py);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.px); // Add 'series' object to\n\n          var nodeColor = color(evt);\n          evt.series = [];\n          nodeFieldSet.forEach(function (field) {\n            evt.series.push({\n              color: nodeColor,\n              key: field,\n              value: evt[field]\n            });\n          });\n          tooltip.data(evt).hidden(false);\n        }).on(\"mouseout\", function (d) {\n          tooltip.hidden(true);\n        });\n        tooltip.headerFormatter(function (d) {\n          return \"Node\";\n        }); // Apply extra attributes to nodes and links (if any)\n\n        linkExtras(link);\n        nodeExtras(node);\n        force.on(\"tick\", function () {\n          link.attr(\"x1\", function (d) {\n            return d.source.x;\n          }).attr(\"y1\", function (d) {\n            return d.source.y;\n          }).attr(\"x2\", function (d) {\n            return d.target.x;\n          }).attr(\"y2\", function (d) {\n            return d.target.y;\n          });\n          node.attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \", \" + d.y + \")\";\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      // Force directed graph specific parameters\n      linkStrength: {\n        get: function get() {\n          return linkStrength;\n        },\n        set: function set(_) {\n          linkStrength = _;\n        }\n      },\n      friction: {\n        get: function get() {\n          return friction;\n        },\n        set: function set(_) {\n          friction = _;\n        }\n      },\n      linkDist: {\n        get: function get() {\n          return linkDist;\n        },\n        set: function set(_) {\n          linkDist = _;\n        }\n      },\n      charge: {\n        get: function get() {\n          return charge;\n        },\n        set: function set(_) {\n          charge = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      theta: {\n        get: function get() {\n          return theta;\n        },\n        set: function set(_) {\n          theta = _;\n        }\n      },\n      alpha: {\n        get: function get() {\n          return alpha;\n        },\n        set: function set(_) {\n          alpha = _;\n        }\n      },\n      radius: {\n        get: function get() {\n          return radius;\n        },\n        set: function set(_) {\n          radius = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nodeExtras: {\n        get: function get() {\n          return nodeExtras;\n        },\n        set: function set(_) {\n          nodeExtras = _;\n        }\n      },\n      linkExtras: {\n        get: function get() {\n          return linkExtras;\n        },\n        set: function set(_) {\n          linkExtras = _;\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.furiousLegend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 28 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('circle');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('rect');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (vers == 'furious' && expanded) return;\n          dispatch.legendDblclick(d, i);\n\n          if (updateState) {\n            // make sure we re-get data in case it was modified\n            var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n            // is to set all other series' to false, and make the double clicked series enabled.\n\n            data.forEach(function (series) {\n              series.disabled = true;\n              if (vers == 'furious') series.userDisabled = series.disabled;\n            });\n            d.disabled = false;\n            if (vers == 'furious') d.userDisabled = d.disabled;\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              })\n            });\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var legendWidth = 0;\n          var columnWidths = [];\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15);\n        }\n\n        seriesShape.style('fill', setBGColor).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? color(d, i) : '#fff';\n        } else if (!expanded) {\n          return !!d.disabled ? color(d, i) : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#fff' : color(d, i);\n        } else {\n          return !!d.disabled ? '#fff' : color(d, i);\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating and using multibar with single series for this\n\n\n  nv.models.historicalBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceX = [],\n        forceY = [0],\n        padData = false,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        interactive = true;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bars');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var bars = wrap.select('.nv-bars').selectAll('.nv-bar').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return getX(d, i);\n        });\n        bars.exit().remove();\n        bars.enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n          return nv.utils.NaNtoZero(y(Math.max(0, getY(d, i))));\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.abs(y(getY(d, i)) - y(0)));\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }).on('mouseover', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          if (!interactive) return;\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('fill', function (d, i) {\n          return color(d, i);\n        }).attr('class', function (d, i, j) {\n          return (getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i;\n        }).watchTransition(renderWatch, 'bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }) //TODO: better width calculations that don't assume always uniform data spacing;w\n        .attr('width', availableWidth / data[0].values.length * .9);\n        bars.watchTransition(renderWatch, 'bars').attr('y', function (d, i) {\n          var rval = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i));\n          return nv.utils.NaNtoZero(rval);\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d, i)) - y(0)), 1));\n        });\n      });\n      renderWatch.renderEnd('historicalBar immediate');\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      container.select(\".nv-bars .nv-bar-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-bars .nv-bar.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.historicalBarChart = function (bar_model) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 90,\n      bottom: 50,\n      left: 90\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        state = {},\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        renderWatch.models(bars);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this; //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = bars.xScale();\n        y = bars.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(bars); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').transition().call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').transition().call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          bars.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            bars.highlightPoint(pointIndex, true);\n            var point = series.values[pointIndex];\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex),\n              data: series.values[pointIndex]\n            });\n          });\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex));\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          dispatch.tooltipHide();\n          bars.clearHighlights();\n        });\n        legend.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n\n          if (!data.filter(function (d) {\n            return !d.disabled;\n          }).length) {\n            data.map(function (d) {\n              d.disabled = false;\n              wrap.selectAll('.nv-series').classed('disabled', false);\n              return d;\n            });\n          }\n\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          selection.transition().call(chart);\n        });\n        legend.dispatch.on('legendDblclick', function (d) {\n          //Double clicking should always enable current series, and disabled all others.\n          data.forEach(function (d) {\n            d.disabled = true;\n          });\n          d.disabled = false;\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('historicalBarChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          bars.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n          renderWatch.reset(transitionDuration);\n          yAxis.duration(transitionDuration);\n          xAxis.duration(transitionDuration);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // ohlcChart is just a historical chart with ohlc bars and some tweaks\n\n\n  nv.models.ohlcBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  }; // candlestickChart is just a historical chart with candlestick bars and some tweaks\n\n\n  nv.models.candlestickBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  };\n\n  nv.models.legend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 32 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        enableDoubleClick = true //If true, legend will enable double click handling\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        if (rightAlign) wrap.attr('transform', 'translate(' + -margin.right + ',' + margin.top + ')');else wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('.nv-legend-symbol');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('.nv-legend-symbol');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (enableDoubleClick) {\n            if (vers == 'furious' && expanded) return;\n            dispatch.legendDblclick(d, i);\n\n            if (updateState) {\n              // make sure we re-get data in case it was modified\n              var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n              // is to set all other series' to false, and make the double clicked series enabled.\n\n              data.forEach(function (series) {\n                series.disabled = true;\n                if (vers == 'furious') series.userDisabled = series.disabled;\n              });\n              d.disabled = false;\n              if (vers == 'furious') d.userDisabled = d.disabled;\n              dispatch.stateChange({\n                disabled: data.map(function (d) {\n                  return !!d.disabled;\n                })\n              });\n            }\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var legendWidth = 0;\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var columnWidths = [];\n          legendWidth = 0;\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n\n            if (legendWidth < xpos + maxwidth) {\n              legendWidth = xpos + maxwidth;\n            }\n\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15); // The background for the expanded legend (UI)\n\n          gEnter.insert('rect', ':first-child').attr('class', 'nv-legend-bg').attr('fill', '#eee') // .attr('stroke', '#444')\n          .attr('opacity', 0);\n          var seriesBG = g.select('.nv-legend-bg');\n          seriesBG.transition().duration(300).attr('x', -versPadding).attr('width', legendWidth + versPadding - 12).attr('height', height + 10).attr('y', -margin.top - 10).attr('opacity', expanded ? 1 : 0);\n        }\n\n        seriesShape.style('fill', setBGColor).style('fill-opacity', setBGOpacity).style('stroke', setBGColor);\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? '#000' : '#fff';\n        } else if (!expanded) {\n          if (!d.color) d.color = color(d, i);\n          return !!d.disabled ? d.color : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#eee' : d.color || color(d, i);\n        } else {\n          return d.color || color(d, i);\n        }\n      }\n\n      function setBGOpacity(d, i) {\n        if (expanded && vers == 'furious') {\n          return 1;\n        } else {\n          return !!d.disabled ? 0 : 1;\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      enableDoubleClick: {\n        get: function get() {\n          return enableDoubleClick;\n        },\n        set: function set(_) {\n          enableDoubleClick = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.line = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        container = null,\n        strokeWidth = 1.5,\n        color = nv.utils.defaultColor() // a function that returns a color\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        isArea = function isArea(d) {\n      return d.area;\n    } // decides if a line is an area or just a line\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        interpolate = \"linear\" // controls the line interpolation\n    ,\n        duration = 250,\n        dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    scatter.pointSize(16) // default size\n    .pointDomain([16, 256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        scatter.width(availableWidth).height(availableHeight);\n        var scatterWrap = wrap.select('.nv-scatterWrap');\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + scatter.id()).append('rect');\n        wrap.select('#nv-edge-clip-' + scatter.id() + ' rect').attr('width', availableWidth).attr('height', availableHeight > 0 ? availableHeight : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        scatterWrap.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('stroke-width', function (d) {\n          return d.strokeWidth || strokeWidth;\n        }).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'line: groups').style('stroke-opacity', 1).style('fill-opacity', function (d) {\n          return d.fillOpacity || .5;\n        });\n        var areaPaths = groups.selectAll('path.nv-area').data(function (d) {\n          return isArea(d) ? [d] : [];\n        }); // this is done differently than lines because I need to check if series is an area\n\n        areaPaths.enter().append('path').attr('class', 'nv-area').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x0(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y0(getY(d, i)));\n          }).y1(function (d, i) {\n            return y0(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        groups.exit().selectAll('path.nv-area').remove();\n        areaPaths.watchTransition(renderWatch, 'line: areaPaths').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y(getY(d, i)));\n          }).y1(function (d, i) {\n            return y(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        var linePaths = groups.selectAll('path.nv-line').data(function (d) {\n          return [d.values];\n        });\n        linePaths.enter().append('path').attr('class', 'nv-line').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x0(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y0(getY(d, i)));\n        }));\n        linePaths.watchTransition(renderWatch, 'line: linePaths').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y(getY(d, i)));\n        })); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter; // Pass through events\n\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      },\n      isArea: {\n        get: function get() {\n          return isArea;\n        },\n        set: function set(_) {\n          isArea = d3.functor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          scatter.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          scatter.y(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          scatter.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.line());\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        focusEnable = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        duration = 250; // set options on sub-objects for this chart\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    lines.clipEdge(true).duration(0);\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n        /* Update `main' graph on brush update. */\n\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Setup Scales\n\n        x = lines.xScale();\n        y = lines.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-linesWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive');\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Main (Focus) Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(duration).call(yAxis);\n          }\n        }\n\n        g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')'); //============================================================\n        // Update Focus\n        //============================================================\n\n        if (!focusEnable && focus.brush.extent() === null) {\n          linesWrap.call(lines);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').style('display', focusEnable ? 'initial' : 'none').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled && !series.disableTooltip;\n          }).forEach(function (series, i) {\n            var extent = focus.brush.extent() !== null ? focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent() : x.domain();\n            var currentValues = series.values.filter(function (d, i) {\n              // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n              // (e.g. x domain is manually set to reverse the x-axis)\n              if (extent[0] <= extent[1]) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              } else {\n                return lines.x()(d, i) >= extent[1] && lines.x()(d, i) <= extent[0];\n              }\n            });\n            pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n            var point = currentValues[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue !== null) {\n              lines.highlightPoint(i, pointIndex, true);\n            }\n\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: pointYValue,\n              color: color(series, series.seriesIndex),\n              data: point\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var defaultValueFormatter = function defaultValueFormatter(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n          };\n\n          interactiveLayer.tooltip.valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n            value: chart.x()(singlePoint, pointIndex),\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on('elementClick', function (e) {\n          var pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series) {\n            var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            var yPos = chart.yScale()(chart.y()(point, pointIndex));\n            allData.push({\n              point: point,\n              pointIndex: pointIndex,\n              pos: [pointXLocation, yPos],\n              seriesIndex: series.seriesIndex,\n              series: series\n            });\n          });\n          lines.dispatch.elementClick(allData);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          focusLinesWrap.transition().duration(duration).call(lines); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('lineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      if (!evt.series.disableTooltip) {\n        tooltip.data(evt).hidden(false);\n      }\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // Focus options, mostly passed onto focus model.\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focus.showXAxis();\n        },\n        set: function set(_) {\n          focus.showXAxis(_);\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focus.showYAxis();\n        },\n        set: function set(_) {\n          focus.showYAxis(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          lines.duration(duration);\n          focus.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          lines.color(color);\n          focus.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return lines.interpolate();\n        },\n        set: function set(_) {\n          lines.interpolate(_);\n          focus.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n          focus.xTickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n          focus.yTickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return lines.x();\n        },\n        set: function set(_) {\n          lines.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return lines.y();\n        },\n        set: function set(_) {\n          lines.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines.interactive(false);\n            lines.useVoronoi(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineWithFocusChart = function () {\n    return nv.models.lineChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  };\n\n  nv.models.linePlusBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        lines2 = nv.models.line(),\n        bars = nv.models.historicalBar(),\n        bars2 = nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        x2Axis = nv.models.axis(),\n        y1Axis = nv.models.axis(),\n        y2Axis = nv.models.axis(),\n        y3Axis = nv.models.axis(),\n        y4Axis = nv.models.axis(),\n        legend = nv.models.legend(),\n        brush = d3.svg.brush(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        marginTop = null,\n        margin2 = {\n      top: 0,\n      right: 30,\n      bottom: 20,\n      left: 60\n    },\n        width = null,\n        height = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.defaultColor(),\n        showLegend = true,\n        focusEnable = true,\n        focusShowAxisY = false,\n        focusShowAxisX = true,\n        focusHeight = 50,\n        extent,\n        brushExtent = null,\n        x,\n        x2,\n        y1,\n        y2,\n        y3,\n        y4,\n        noData = null,\n        dispatch = d3.dispatch('brush', 'stateChange', 'changeState'),\n        transitionDuration = 0,\n        state = nv.utils.state(),\n        defaultState = null,\n        legendLeftAxisHint = ' (left axis)',\n        legendRightAxisHint = ' (right axis)',\n        switchYAxisOrder = false;\n\n    lines.clipEdge(true);\n    lines2.interactive(false); // We don't want any points emitted for the focus chart's scatter graph.\n\n    lines2.pointActive(function (d) {\n      return false;\n    });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n    tooltip.headerEnabled(true).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function getBarsAxis() {\n      return switchYAxisOrder ? {\n        main: y2Axis,\n        focus: y4Axis\n      } : {\n        main: y1Axis,\n        focus: y3Axis\n      };\n    };\n\n    var getLinesAxis = function getLinesAxis() {\n      return switchYAxisOrder ? {\n        main: y1Axis,\n        focus: y3Axis\n      } : {\n        main: y2Axis,\n        focus: y4Axis\n      };\n    };\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var allDisabled = function allDisabled(data) {\n      return data.every(function (series) {\n        return series.disabled;\n      });\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focusHeight : 0),\n            availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        var dataBars = data.filter(function (d) {\n          return !d.disabled && d.bar;\n        });\n        var dataLines = data.filter(function (d) {\n          return !d.bar;\n        }); // removed the !d.disabled clause here to fix Issue #240\n\n        if (dataBars.length && !switchYAxisOrder) {\n          x = bars.xScale();\n        } else {\n          x = lines.xScale();\n        }\n\n        x2 = x2Axis.scale(); // select the scales and series based on the position of the yAxis\n\n        y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n        y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n        y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n        y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n        var series1 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        x.range([0, availableWidth]);\n        x2.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // this is the main chart\n\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-barsWrap');\n        focusEnter.append('g').attr('class', 'nv-linesWrap'); // context chart is where you can focus in\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n        contextEnter.append('g').attr('class', 'nv-x nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-barsWrap');\n        contextEnter.append('g').attr('class', 'nv-linesWrap');\n        contextEnter.append('g').attr('class', 'nv-brushBackground');\n        contextEnter.append('g').attr('class', 'nv-x nv-brush'); //============================================================\n        // Legend\n        //------------------------------------------------------------\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\n            if (switchYAxisOrder) {\n              series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n            } else {\n              series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n            }\n\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height(); // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //============================================================\n        // Context chart (focus chart) components\n        //------------------------------------------------------------\n        // hide or show the focus context chart\n\n        g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n        bars2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && data[i].bar;\n        }));\n        lines2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].bar;\n        }));\n        var bars2Wrap = g.select('.nv-context .nv-barsWrap').datum(dataBars.length ? dataBars : [{\n          values: []\n        }]);\n        var lines2Wrap = g.select('.nv-context .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n          values: []\n        }] : dataLines.filter(function (dataLine) {\n          return !dataLine.disabled;\n        }));\n        g.select('.nv-context').attr('transform', 'translate(0,' + (availableHeight1 + margin.bottom + margin2.top) + ')');\n        bars2Wrap.transition().call(bars2);\n        lines2Wrap.transition().call(lines2); // context (focus chart) axis controls\n\n        if (focusShowAxisX) {\n          x2Axis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight2, 0);\n\n          g.select('.nv-context .nv-x.nv-axis').attr('transform', 'translate(0,' + y3.range()[0] + ')');\n          g.select('.nv-context .nv-x.nv-axis').transition().call(x2Axis);\n        }\n\n        if (focusShowAxisY) {\n          y3Axis.scale(y3)._ticks(availableHeight2 / 36).tickSize(-availableWidth, 0);\n\n          y4Axis.scale(y4)._ticks(availableHeight2 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n\n          g.select('.nv-context .nv-y3.nv-axis').style('opacity', dataBars.length ? 1 : 0).attr('transform', 'translate(0,' + x2.range()[0] + ')');\n          g.select('.nv-context .nv-y2.nv-axis').style('opacity', dataLines.length ? 1 : 0).attr('transform', 'translate(' + x2.range()[1] + ',0)');\n          g.select('.nv-context .nv-y1.nv-axis').transition().call(y3Axis);\n          g.select('.nv-context .nv-y2.nv-axis').transition().call(y4Axis);\n        } // Setup Brush\n\n\n        brush.x(x2).on('brush', onBrush);\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect') //.attr('y', -5)\n        .attr('height', availableHeight2);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight2 / 3;\n          return 'M' + .5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + .5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x2(d[0]) - x2.range()[0],\n                rightWidth = x2.range()[1] - x2(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x2(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush() {\n          brushExtent = brush.empty() ? null : brush.extent();\n          extent = brush.empty() ? x2.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG(); // Prepare Main (Focus) Bars and Lines\n\n          bars.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && data[i].bar;\n          }));\n          lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && !data[i].bar;\n          }));\n          var focusBarsWrap = g.select('.nv-focus .nv-barsWrap').datum(!dataBars.length ? [{\n            values: []\n          }] : dataBars.map(function (d, i) {\n            return {\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return bars.x()(d, i) >= extent[0] && bars.x()(d, i) <= extent[1];\n              })\n            };\n          }));\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n            values: []\n          }] : dataLines.filter(function (dataLine) {\n            return !dataLine.disabled;\n          }).map(function (d, i) {\n            return {\n              area: d.area,\n              fillOpacity: d.fillOpacity,\n              strokeWidth: d.strokeWidth,\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              })\n            };\n          })); // Update Main (Focus) X Axis\n\n          if (dataBars.length && !switchYAxisOrder) {\n            x = bars.xScale();\n          } else {\n            x = lines.xScale();\n          }\n\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight1, 0);\n\n          xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n          g.select('.nv-x.nv-axis').transition().duration(transitionDuration).call(xAxis); // Update Main (Focus) Bars and Lines\n\n          focusBarsWrap.transition().duration(transitionDuration).call(bars);\n          focusLinesWrap.transition().duration(transitionDuration).call(lines); // Setup and Update Main (Focus) Y Axes\n\n          g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n          y1Axis.scale(y1)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)).tickSize(-availableWidth, 0);\n\n          y2Axis.scale(y2)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)); // Show the y2 rules only if y1 has none\n\n\n          if (!switchYAxisOrder) {\n            y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n          } else {\n            y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n          } // Calculate opacity of the axis\n\n\n          var barsOpacity = dataBars.length ? 1 : 0;\n          var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n          var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n          var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n          g.select('.nv-focus .nv-y1.nv-axis').style('opacity', y1Opacity);\n          g.select('.nv-focus .nv-y2.nv-axis').style('opacity', y2Opacity).attr('transform', 'translate(' + x.range()[1] + ',0)');\n          g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration).call(y1Axis);\n          g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration).call(y2Axis);\n        }\n\n        onBrush();\n      });\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.duration(100).valueFormatter(function (d, i) {\n        return getLinesAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.duration(0).valueFormatter(function (d, i) {\n        return getBarsAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focusHeight;\n        },\n        set: function set(_) {\n          focusHeight = _;\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focusShowAxisX;\n        },\n        set: function set(_) {\n          focusShowAxisX = _;\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focusShowAxisY;\n        },\n        set: function set(_) {\n          focusShowAxisY = _;\n        }\n      },\n      legendLeftAxisHint: {\n        get: function get() {\n          return legendLeftAxisHint;\n        },\n        set: function set(_) {\n          legendLeftAxisHint = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return margin2;\n        },\n        set: function set(_) {\n          margin2.top = _.top !== undefined ? _.top : margin2.top;\n          margin2.right = _.right !== undefined ? _.right : margin2.right;\n          margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n          margin2.left = _.left !== undefined ? _.left : margin2.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines.x(_);\n          lines2.x(_);\n          bars.x(_);\n          bars2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines.y(_);\n          lines2.y(_);\n          bars.y(_);\n          bars2.y(_);\n        }\n      },\n      switchYAxisOrder: {\n        get: function get() {\n          return switchYAxisOrder;\n        },\n        set: function set(_) {\n          // Switch the tick format for the yAxis\n          if (switchYAxisOrder !== _) {\n            var y1 = y1Axis;\n            y1Axis = y2Axis;\n            y2Axis = y1;\n            var y3 = y3Axis;\n            y3Axis = y4Axis;\n            y4Axis = y3;\n          }\n\n          switchYAxisOrder = _;\n          y1Axis.orient('left');\n          y2Axis.orient('right');\n          y3Axis.orient('left');\n          y4Axis.orient('right');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        clipEdge = true,\n        stacked = false,\n        stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n    ,\n        color = nv.utils.defaultColor(),\n        hideable = false,\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        duration = 500,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n    var last_datalength = 0;\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var nonStackableCount = 0; // This function defines the requirements for render complete\n\n        var endFn = function endFn(d, i) {\n          if (d.series === data.length - 1 && i === data[0].values.length - 1) return true;\n          return false;\n        };\n\n        if (hideable && data.length) hideable = [{\n          values: data[0].values.map(function (d) {\n            return {\n              x: d.x,\n              y: 0,\n              series: d.series,\n              size: 0.01\n            };\n          })\n        }];\n\n        if (stacked) {\n          var parsed = d3.layout.stack().offset(stackOffset).values(function (d) {\n            return d.values;\n          }).y(getY)(!data.length && hideable ? hideable : data);\n          parsed.forEach(function (series, i) {\n            // if series is non-stackable, use un-parsed data\n            if (series.nonStackable) {\n              data[i].nonStackableSeries = nonStackableCount++;\n              parsed[i] = data[i];\n            } else {\n              // don't stack this seires on top of the nonStackable seriees\n              if (i > 0 && parsed[i - 1].nonStackable) {\n                parsed[i].values.map(function (d, j) {\n                  d.y0 -= parsed[i - 1].values[j].y;\n                  d.y1 = d.y0 + d.y;\n                });\n              }\n            }\n          });\n          data = parsed;\n        } //add series index and key to each data point for reference\n\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked && data.length > 0) {\n          data[0].values.map(function (d, i) {\n            var posBase = 0,\n                negBase = 0;\n            data.map(function (d, idx) {\n              if (!data[idx].nonStackable) {\n                var f = d.values[i];\n                f.size = Math.abs(f.y);\n\n                if (f.y < 0) {\n                  f.y1 = negBase;\n                  negBase = negBase - f.size;\n                } else {\n                  f.y1 = f.size + posBase;\n                  posBase = posBase + f.size;\n                }\n              }\n            });\n          });\n        } // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d, idx) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1,\n              idx: idx\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          var domain = d.y; // increase the domain range if this series is stackable\n\n          if (stacked && !data[d.idx].nonStackable) {\n            if (d.y > 0) {\n              domain = d.y1;\n            } else {\n              domain = d.y1 + d.y;\n            }\n          }\n\n          return domain;\n        }).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        var exitTransition = renderWatch.transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration)).attr('y', function (d, i, j) {\n          var yVal = y0(0) || 0;\n\n          if (stacked) {\n            if (data[d.series] && !data[d.series].nonStackable) {\n              yVal = y0(d.y0);\n            }\n          }\n\n          return yVal;\n        }).attr('height', 0).remove();\n        if (exitTransition.delay) exitTransition.delay(function (d, i) {\n          var delay = i * (duration / (last_datalength + 1)) - i;\n          return delay;\n        });\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('rect.nv-bar').data(function (d) {\n          return hideable && !data.length ? hideable.values : d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('rect').attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('x', function (d, i, j) {\n          return stacked && !data[j].nonStackable ? 0 : j * x.rangeBand() / data.length;\n        }).attr('y', function (d, i, j) {\n          return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0;\n        }).attr('height', 0).attr('width', function (d, i, j) {\n          return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length);\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n        bars.style('fill', function (d, i, j) {\n          return color(d, j, i);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j, i);\n        }).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i, j) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i, j) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i, j) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        var barSelection = bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration)).delay(function (d, i) {\n          return i * duration / data[0].values.length;\n        });\n\n        if (stacked) {\n          barSelection.attr('y', function (d, i, j) {\n            var yVal = 0; // if stackable, stack it on top of the previous series\n\n            if (!data[j].nonStackable) {\n              yVal = y(d.y1);\n            } else {\n              if (getY(d, i) < 0) {\n                yVal = y(0);\n              } else {\n                if (y(0) - y(getY(d, i)) < -1) {\n                  yVal = y(0) - 1;\n                } else {\n                  yVal = y(getY(d, i)) || 0;\n                }\n              }\n            }\n\n            return yVal;\n          }).attr('height', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return Math.max(Math.abs(y(d.y + d.y0) - y(d.y0)), 0);\n            } else {\n              return Math.max(Math.abs(y(getY(d, i)) - y(0)), 0) || 0;\n            }\n          }).attr('x', function (d, i, j) {\n            var width = 0;\n\n            if (data[j].nonStackable) {\n              width = d.series * x.rangeBand() / data.length;\n\n              if (data.length !== nonStackableCount) {\n                width = data[j].nonStackableSeries * x.rangeBand() / (nonStackableCount * 2);\n              }\n            }\n\n            return width;\n          }).attr('width', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return x.rangeBand();\n            } else {\n              // if all series are nonStacable, take the full width\n              var width = x.rangeBand() / nonStackableCount; // otherwise, nonStackable graph will be only taking the half-width\n              // of the x rangeBand\n\n              if (data.length !== nonStackableCount) {\n                width = x.rangeBand() / (nonStackableCount * 2);\n              }\n\n              return width;\n            }\n          });\n        } else {\n          barSelection.attr('x', function (d, i) {\n            return d.series * x.rangeBand() / data.length;\n          }).attr('width', x.rangeBand() / data.length).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)) || 0;\n          }).attr('height', function (d, i) {\n            return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n          });\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy(); // keep track of the last data value length for transition calculations\n\n        if (data[0] && data[0].values) {\n          last_datalength = data[0].values.length;\n        }\n      });\n      renderWatch.renderEnd('multibar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      stackOffset: {\n        get: function get() {\n          return stackOffset;\n        },\n        set: function set(_) {\n          stackOffset = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      hideable: {\n        get: function get() {\n          return hideable;\n        },\n        set: function set(_) {\n          hideable = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        interactiveLayer = nv.interactiveGuideline(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = null,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        reduceXTicks = true // if false a tick will show for every data point\n    ,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250,\n        useInteractiveGuideline = false;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis.orient('bottom').tickPadding(7).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === 'bottom') {\n            legend.width(availableWidth - margin.right);\n            g.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else {\n            legend.width(availableWidth - controlWidth());\n            g.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n          xTicks.selectAll('line, text').style('opacity', 1);\n\n          if (staggerLabels) {\n            var getTranslate = function getTranslate(x, y) {\n              return \"translate(\" + x + \",\" + y + \")\";\n            };\n\n            var staggerUp = 5,\n                staggerDown = 17; //pixels to stagger by\n            // Issue #140\n\n            xTicks.selectAll(\"text\").attr('transform', function (d, i, j) {\n              return getTranslate(0, j % 2 == 0 ? staggerUp : staggerDown);\n            });\n            var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n            g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\").attr(\"transform\", function (d, i) {\n              return getTranslate(0, i === 0 || totalInBetweenTicks % 2 !== 0 ? staggerDown : staggerUp);\n            });\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n\n          if (reduceXTicks) xTicks.filter(function (d, i) {\n            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n          }).selectAll('text, line').style('opacity', 0);\n          if (rotateLabels) xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text').style('opacity', 1);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            if (e.pointXValue == undefined) return;\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                xValue,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              pointIndex = x.domain().indexOf(e.pointXValue);\n              var point = series.values[pointIndex];\n              if (point === undefined) return;\n              xValue = point.x;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = e.mouseX;\n              allData.push({\n                key: series.key,\n                value: chart.y()(point, pointIndex),\n                color: color(series, series.seriesIndex),\n                data: series.values[pointIndex]\n              });\n            });\n            interactiveLayer.tooltip.data({\n              value: xValue,\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            interactiveLayer.tooltip.hidden(true);\n          });\n        } else {\n          multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n            evt.value = chart.x()(evt.data);\n            evt['series'] = {\n              key: evt.data.key,\n              value: chart.y()(evt.data),\n              color: evt.color\n            };\n            tooltip.data(evt).hidden(false);\n          });\n          multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      renderWatch.renderEnd('multibarchart immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      reduceXTicks: {\n        get: function get() {\n          return reduceXTicks;\n        },\n        set: function set(_) {\n          reduceXTicks = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontal = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getYerr = function getYerr(d) {\n      return d.yErr;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        stacked = false,\n        showValues = false,\n        showBarLabels = false,\n        valuePadding = 60,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        valueFormat = d3.format(',.2f'),\n        delay = 1200,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        duration = 250,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0; //used to store previous scales\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        if (stacked) data = d3.layout.stack().offset('zero').values(function (d) {\n          return d.values;\n        }).y(getY)(data); //add series index and key to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked) data[0].values.map(function (d, i) {\n          var posBase = 0,\n              negBase = 0;\n          data.map(function (d) {\n            var f = d.values[i];\n            f.size = Math.abs(f.y);\n\n            if (f.y < 0) {\n              f.y1 = negBase - f.size;\n              negBase = negBase - f.size;\n            } else {\n              f.y1 = posBase;\n              posBase = posBase + f.size;\n            }\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableHeight], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return stacked ? d.y > 0 ? d.y1 + d.y : d.y1 : d.y;\n        }).concat(forceY)));\n        if (showValues && !stacked) y.range(yRange || [y.domain()[0] < 0 ? valuePadding : 0, availableWidth - (y.domain()[1] > 0 ? valuePadding : 0)]);else y.range(yRange || [0, availableWidth]);\n        x0 = x0 || x;\n        y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'multibarhorizontal: groups').style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : j * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        });\n        barsEnter.append('rect').attr('width', 0).attr('height', x.rangeBand() / (stacked ? 1 : data.length));\n        bars.on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n\n        if (getYerr(data[0], 0)) {\n          barsEnter.append('polyline');\n          bars.select('polyline').attr('fill', 'none').attr('points', function (d, i) {\n            var xerr = getYerr(d, i),\n                mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n            xerr = xerr.map(function (e) {\n              return y(e + (getY(d, i) < 0 ? 0 : getY(d, i))) - y(0);\n            });\n            var a = [[xerr[0], -mid], [xerr[0], mid], [xerr[0], 0], [xerr[1], 0], [xerr[1], -mid], [xerr[1], mid]];\n            return a.map(function (path) {\n              return path.join(',');\n            }).join(' ');\n          }).attr('transform', function (d, i) {\n            var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            return 'translate(0, ' + mid + ')';\n          });\n        }\n\n        barsEnter.append('text');\n\n        if (showValues && !stacked) {\n          bars.select('text').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'end' : 'start';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            var t = valueFormat(getY(d, i)),\n                yerr = getYerr(d, i);\n            if (yerr === undefined) return t;\n            if (!yerr.length) return t + '±' + valueFormat(Math.abs(yerr));\n            return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? -4 : y(getY(d, i)) - y(0) + 4;\n          });\n        } else {\n          bars.selectAll('text').text('');\n        }\n\n        if (showBarLabels && !stacked) {\n          barsEnter.append('text').classed('nv-bar-label', true);\n          bars.select('text.nv-bar-label').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'start' : 'end';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            return getX(d, i);\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text.nv-bar-label').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? y(0) - y(getY(d, i)) + 4 : -4;\n          });\n        } else {\n          bars.selectAll('text.nv-bar-label').text('');\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        if (stacked) bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          return 'translate(' + y(d.y1) + ',' + x(getX(d, i)) + ')';\n        }).select('rect').attr('width', function (d, i) {\n          return Math.abs(y(getY(d, i) + d.y0) - y(d.y0)) || 0;\n        }).attr('height', x.rangeBand());else bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          //TODO: stacked must be all positive or all negative, not both?\n          return 'translate(' + (getY(d, i) < 0 ? y(getY(d, i)) : y(0)) + ',' + (d.series * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        }).select('rect').attr('height', x.rangeBand() / data.length).attr('width', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('multibarHorizontal immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      yErr: {\n        get: function get() {\n          return getYerr;\n        },\n        set: function set(_) {\n          getYerr = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      // this shows the group name, seems pointless?\n      //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      valuePadding: {\n        get: function get() {\n          return valuePadding;\n        },\n        set: function set(_) {\n          valuePadding = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontalChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend().height(30),\n        controls = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlsPosition = 'top',\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        stacked = false,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n    xAxis.orient('left').tickPadding(5).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient('bottom').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        stacked = multibar.stacked();\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth - controlWidth());\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\n          if (controlsPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')').call(controls);\n          } else if (controlsPosition === 'top') {\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksY(availableHeight / 24, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n          xTicks.selectAll('line, text');\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", y(0)).attr(\"x2\", y(0)).attr(\"y1\", 0).attr(\"y2\", -availableHeight); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          stacked = multibar.stacked();\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('multibar horizontal chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        key: evt.data.key,\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      controlsPosition: {\n        get: function get() {\n          return controlsPosition;\n        },\n        set: function set(_) {\n          controlsPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        var dataLines1 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 1;\n        });\n        var dataLines2 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 2;\n        });\n        var dataScatters1 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 1;\n        });\n        var dataScatters2 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 2;\n        });\n        var dataBars1 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 1;\n        });\n        var dataBars2 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 2;\n        });\n        var dataStack1 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 1;\n        });\n        var dataStack2 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 2;\n        }); // Display noData message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var series1 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 1;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 2;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        x.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]);\n        var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        gEnter.append('g').attr('class', 'stack1Wrap');\n        gEnter.append('g').attr('class', 'stack2Wrap');\n        gEnter.append('g').attr('class', 'bars1Wrap');\n        gEnter.append('g').attr('class', 'bars2Wrap');\n        gEnter.append('g').attr('class', 'scatters1Wrap');\n        gEnter.append('g').attr('class', 'scatters2Wrap');\n        gEnter.append('g').attr('class', 'lines1Wrap');\n        gEnter.append('g').attr('class', 'lines2Wrap');\n        gEnter.append('g').attr('class', 'legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        var g = wrap.select('g');\n        var color_array = data.map(function (d, i) {\n          return data[i].color || color(d, i);\n        }); // Legend\n\n        if (!showLegend) {\n          g.select('.legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          legend.color(color_array);\n          g.select('.legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n            series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        lines1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line';\n        }));\n        lines2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line';\n        }));\n        scatters1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter';\n        }));\n        scatters2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter';\n        }));\n        bars1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar';\n        }));\n        bars2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar';\n        }));\n        stack1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area';\n        }));\n        stack2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area';\n        }));\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var lines1Wrap = g.select('.lines1Wrap').datum(dataLines1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters1Wrap = g.select('.scatters1Wrap').datum(dataScatters1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars1Wrap = g.select('.bars1Wrap').datum(dataBars1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack1Wrap = g.select('.stack1Wrap').datum(dataStack1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var lines2Wrap = g.select('.lines2Wrap').datum(dataLines2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters2Wrap = g.select('.scatters2Wrap').datum(dataScatters2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars2Wrap = g.select('.bars2Wrap').datum(dataBars2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack2Wrap = g.select('.stack2Wrap').datum(dataStack2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var extraValue1BarStacked = [];\n\n        if (bars1.stacked() && dataBars1.length) {\n          var extraValue1BarStacked = dataBars1.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue1BarStacked.length > 0) extraValue1BarStacked = extraValue1BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars1.length) {\n          extraValue1BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        var extraValue2BarStacked = [];\n\n        if (bars2.stacked() && dataBars2.length) {\n          var extraValue2BarStacked = dataBars2.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue2BarStacked.length > 0) extraValue2BarStacked = extraValue2BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars2.length) {\n          extraValue2BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        yScale1.domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        yScale2.domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        lines1.yDomain(yScale1.domain());\n        scatters1.yDomain(yScale1.domain());\n        bars1.yDomain(yScale1.domain());\n        stack1.yDomain(yScale1.domain());\n        lines2.yDomain(yScale2.domain());\n        scatters2.yDomain(yScale2.domain());\n        bars2.yDomain(yScale2.domain());\n        stack2.yDomain(yScale2.domain());\n\n        if (dataStack1.length) {\n          d3.transition(stack1Wrap).call(stack1);\n        }\n\n        if (dataStack2.length) {\n          d3.transition(stack2Wrap).call(stack2);\n        }\n\n        if (dataBars1.length) {\n          d3.transition(bars1Wrap).call(bars1);\n        }\n\n        if (dataBars2.length) {\n          d3.transition(bars2Wrap).call(bars2);\n        }\n\n        if (dataLines1.length) {\n          d3.transition(lines1Wrap).call(lines1);\n        }\n\n        if (dataLines2.length) {\n          d3.transition(lines2Wrap).call(lines2);\n        }\n\n        if (dataScatters1.length) {\n          d3.transition(scatters1Wrap).call(scatters1);\n        }\n\n        if (dataScatters2.length) {\n          d3.transition(scatters2Wrap).call(scatters2);\n        }\n\n        xAxis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n        d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n\n        yAxis1._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y1.nv-axis')).call(yAxis1);\n\n        yAxis2._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y2.nv-axis')).call(yAxis2);\n        g.select('.nv-y1.nv-axis').classed('nv-disabled', series1.length ? false : true).attr('transform', 'translate(' + x.range()[0] + ',0)');\n        g.select('.nv-y2.nv-axis').classed('nv-disabled', series2.length ? false : true).attr('transform', 'translate(' + x.range()[1] + ',0)');\n        legend.dispatch.on('stateChange', function (newState) {\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching\n        //------------------------------------------------------------\n\n\n        function mouseover_line(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_scatter(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(100).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_stack(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.point['x'] = stack1.x()(evt.point);\n          evt.point['y'] = stack1.y()(evt.point);\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_bar(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = bars1.x()(evt.data);\n          evt['series'] = {\n            value: bars1.y()(evt.data),\n            color: evt.color,\n            key: evt.data.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function clearHighlights() {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.clearHighlights();\n            } catch (e) {}\n          }\n        }\n\n        function highlightPoint(serieIndex, pointIndex, b) {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.highlightPoint(serieIndex, pointIndex, b);\n            } catch (e) {}\n          }\n        }\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            clearHighlights();\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              var extent = x.domain();\n              var currentValues = series.values.filter(function (d, i) {\n                return chart.x()(d, i) >= extent[0] && chart.x()(d, i) <= extent[1];\n              });\n              pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n              var point = currentValues[pointIndex];\n              var pointYValue = chart.y()(point, pointIndex);\n\n              if (pointYValue !== null) {\n                highlightPoint(i, pointIndex, true);\n              }\n\n              if (point === undefined) return;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = x(chart.x()(point, pointIndex));\n              allData.push({\n                key: series.key,\n                value: pointYValue,\n                color: color(series, series.seriesIndex),\n                data: point,\n                yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n              });\n            });\n\n            var defaultValueFormatter = function defaultValueFormatter(d, i) {\n              var yAxis = allData[i].yAxis;\n              return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n            };\n\n            interactiveLayer.tooltip.headerFormatter(function (d, i) {\n              return xAxis.tickFormat()(d, i);\n            }).valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n              value: chart.x()(singlePoint, pointIndex),\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            clearHighlights();\n          });\n        } else {\n          lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          lines2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n          bars2.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      yDomain1: {\n        get: function get() {\n          return yDomain1;\n        },\n        set: function set(_) {\n          yDomain1 = _;\n        }\n      },\n      yDomain2: {\n        get: function get() {\n          return yDomain2;\n        },\n        set: function set(_) {\n          yDomain2 = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines1.x(_);\n          lines2.x(_);\n          scatters1.x(_);\n          scatters2.x(_);\n          bars1.x(_);\n          bars2.x(_);\n          stack1.x(_);\n          stack2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines1.y(_);\n          lines2.y(_);\n          scatters1.y(_);\n          scatters2.y(_);\n          stack1.y(_);\n          stack2.y(_);\n          bars1.y(_);\n          bars2.y(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n          lines1.useVoronoi(_);\n          lines2.useVoronoi(_);\n          stack1.useVoronoi(_);\n          stack2.useVoronoi(_);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines1.interactive(false);\n            lines1.useVoronoi(false);\n            lines2.interactive(false);\n            lines2.useVoronoi(false);\n            stack1.interactive(false);\n            stack1.useVoronoi(false);\n            stack2.interactive(false);\n            stack2.useVoronoi(false);\n            scatters1.interactive(false);\n            scatters2.interactive(false);\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function (model) {\n            model.duration(duration);\n          });\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.ohlcBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // ohlc bar width.\n\n        var w = availableWidth / data[0].values.length * .9; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + w / 2, availableWidth - w / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        ticks.enter().append('path').attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        }).attr('d', function (d, i) {\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('fill', function (d, i) {\n          return color[0];\n        }).attr('stroke', function (d, i) {\n          return color[0];\n        }).attr('x', 0).attr('y', function (d, i) {\n          return y(Math.max(0, getY(d, i)));\n        }).attr('height', function (d, i) {\n          return Math.abs(y(getY(d, i)) - y(0));\n        }); // the bar colors are controlled by CSS currently\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        d3.transition(ticks).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('d', function (d, i) {\n          var w = availableWidth / data[0].values.length * .9;\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-ohlcBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Code adapted from Jason Davies' \"Parallel Coordinates\"\n  // http://bl.ocks.org/jasondavies/1341281\n\n\n  nv.models.parallelCoordinates = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 0,\n      bottom: 10,\n      left: 0\n    },\n        width = null,\n        height = null,\n        availableWidth = null,\n        availableHeight = null,\n        x = d3.scale.ordinal(),\n        y = {},\n        undefinedValuesLabel = \"undefined values\",\n        dimensionData = [],\n        enabledDimensions = [],\n        dimensionNames = [],\n        displayBrush = true,\n        color = nv.utils.defaultColor(),\n        filters = [],\n        active = [],\n        dragging = [],\n        axisWithUndefinedValues = [],\n        lineTension = 1,\n        foreground,\n        background,\n        dimensions,\n        line = d3.svg.line(),\n        axis = d3.svg.axis(),\n        dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //Convert old data to new format (name, values)\n\n        if (data[0].values === undefined) {\n          var newData = [];\n          data.forEach(function (d) {\n            var val = {};\n            var key = Object.keys(d);\n            key.forEach(function (k) {\n              if (k !== \"name\") val[k] = d[k];\n            });\n            newData.push({\n              key: d.name,\n              values: val\n            });\n          });\n          data = newData;\n        }\n\n        var dataValues = data.map(function (d) {\n          return d.values;\n        });\n\n        if (active.length === 0) {\n          active = data;\n        }\n\n        ; //set all active before first brush call\n\n        dimensionNames = dimensionData.sort(function (a, b) {\n          return a.currentPosition - b.currentPosition;\n        }).map(function (d) {\n          return d.key;\n        });\n        enabledDimensions = dimensionData.filter(function (d) {\n          return !d.disabled;\n        }); // Setup Scales\n\n        x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) {\n          return d.key;\n        })); //Set as true if all values on an axis are missing.\n        // Extract the list of dimensions and create a scale for each.\n\n        var oldDomainMaxValue = {};\n        var displayMissingValuesline = false;\n        var currentTicks = [];\n        dimensionNames.forEach(function (d) {\n          var extent = d3.extent(dataValues, function (p) {\n            return +p[d];\n          });\n          var min = extent[0];\n          var max = extent[1];\n          var onlyUndefinedValues = false; //If there is no values to display on an axis, set the extent to 0\n\n          if (isNaN(min) || isNaN(max)) {\n            onlyUndefinedValues = true;\n            min = 0;\n            max = 0;\n          } //Scale axis if there is only one value\n\n\n          if (min === max) {\n            min = min - 1;\n            max = max + 1;\n          }\n\n          var f = filters.filter(function (k) {\n            return k.dimension == d;\n          });\n\n          if (f.length !== 0) {\n            //If there is only NaN values, keep the existing domain.\n            if (onlyUndefinedValues) {\n              min = y[d].domain()[0];\n              max = y[d].domain()[1];\n            } //If the brush extent is > max (< min), keep the extent value.\n            else if (!f[0].hasOnlyNaN && displayBrush) {\n                min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                max = max < f[0].extent[1] ? f[0].extent[1] : max;\n              } //If there is NaN values brushed be sure the brush extent is on the domain.\n              else if (f[0].hasNaN) {\n                  max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                  oldDomainMaxValue[d] = y[d].domain()[1];\n                  displayMissingValuesline = true;\n                }\n          } //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n          //The remaining 10% are used to display the missingValue line.\n\n\n          y[d] = d3.scale.linear().domain([min, max]).range([(availableHeight - 12) * 0.9, 0]);\n          axisWithUndefinedValues = [];\n          y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n        }); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        line.interpolate('cardinal').tension(lineTension);\n        axis.orient('left');\n        var axisDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd); //Add missing value line at the bottom of the chart\n\n        var missingValuesline, missingValueslineText;\n        var step = x.range()[1] - x.range()[0];\n        step = isNaN(step) ? x.range()[0] : step;\n\n        if (!isNaN(step)) {\n          var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n          missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n          missingValuesline.enter().append('line');\n          missingValuesline.exit().remove();\n          missingValuesline.attr(\"x1\", function (d) {\n            return d[0];\n          }).attr(\"y1\", function (d) {\n            return d[1];\n          }).attr(\"x2\", function (d) {\n            return d[2];\n          }).attr(\"y2\", function (d) {\n            return d[3];\n          }); //Add the text \"undefined values\" under the missing value line\n\n          missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n          missingValueslineText.append('text').data([undefinedValuesLabel]);\n          missingValueslineText.enter().append('text');\n          missingValueslineText.exit().remove();\n          missingValueslineText.attr(\"y\", availableHeight) //To have the text right align with the missingValues line, substract 92 representing the text size.\n          .attr(\"x\", availableWidth - 92 - step / 2).text(function (d) {\n            return d;\n          });\n        } // Add grey background lines for context.\n\n\n        background = wrap.select('.background').selectAll('path').data(data);\n        background.enter().append('path');\n        background.exit().remove();\n        background.attr('d', path); // Add blue foreground lines for focus.\n\n        foreground = wrap.select('.foreground').selectAll('path').data(data);\n        foreground.enter().append('path');\n        foreground.exit().remove();\n        foreground.attr('d', path).style(\"stroke-width\", function (d, i) {\n          if (isNaN(d.strokeWidth)) {\n            d.strokeWidth = 1;\n          }\n\n          return d.strokeWidth;\n        }).attr('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n        foreground.on(\"mouseover\", function (d, i) {\n          d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n          dispatch.elementMouseover({\n            label: d.name,\n            color: d.color || color(d, i),\n            values: d.values,\n            dimensions: enabledDimensions\n          });\n        });\n        foreground.on(\"mouseout\", function (d, i) {\n          d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n          dispatch.elementMouseout({\n            label: d.name,\n            index: i\n          });\n        });\n        foreground.on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        });\n        foreground.on('click', function (d) {\n          dispatch.elementClick({\n            id: d.id\n          });\n        }); // Add a group element for each dimension.\n\n        dimensions = g.selectAll('.dimension').data(enabledDimensions);\n        var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n        dimensions.attr('transform', function (d) {\n          return 'translate(' + x(d.key) + ',0)';\n        });\n        dimensionsEnter.append('g').attr('class', 'nv-axis'); // Add an axis and title.\n\n        dimensionsEnter.append('text').attr('class', 'nv-label').style(\"cursor\", \"move\").attr('dy', '-1em').attr('text-anchor', 'middle').on(\"mouseover\", function (d, i) {\n          dispatch.elementMouseover({\n            label: d.tooltip || d.key,\n            color: d.color\n          });\n        }).on(\"mouseout\", function (d, i) {\n          dispatch.elementMouseout({\n            label: d.tooltip\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        }).call(axisDrag);\n        dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n        dimensions.exit().remove();\n        dimensions.select('.nv-label').text(function (d) {\n          return d.key;\n        }); // Add and store a brush for each axis.\n\n        restoreBrush(displayBrush);\n        var actives = dimensionNames.filter(function (p) {\n          return !y[p].brush.empty();\n        }),\n            extents = actives.map(function (p) {\n          return y[p].brush.extent();\n        });\n        var formerActive = active.slice(0); //Restore active values\n\n        active = [];\n        foreground.style(\"display\", function (d) {\n          var isActive = actives.every(function (p, i) {\n            if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n              return true;\n            }\n\n            return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n          });\n          if (isActive) active.push(d);\n          return !isActive ? \"none\" : null;\n        });\n\n        if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n          dispatch.activeChanged(active);\n        } // Returns the path for a given data point.\n\n\n        function path(d) {\n          return line(enabledDimensions.map(function (p) {\n            //If value if missing, put the value on the missing value line\n            if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n              var domain = y[p.key].domain();\n              var range = y[p.key].range();\n              var min = domain[0] - (domain[1] - domain[0]) / 9; //If it's not already the case, allow brush to select undefined values\n\n              if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n                var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                y[p.key].brush.y(newscale);\n                axisWithUndefinedValues.push(p.key);\n              }\n\n              if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                return [x(p.key), y[p.key](min)];\n              }\n            } //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\n\n            if (missingValuesline !== undefined) {\n              if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                missingValuesline.style(\"display\", \"inline\");\n                missingValueslineText.style(\"display\", \"inline\");\n              } else {\n                missingValuesline.style(\"display\", \"none\");\n                missingValueslineText.style(\"display\", \"none\");\n              }\n            }\n\n            return [x(p.key), y[p.key](d.values[p.key])];\n          }));\n        }\n\n        function restoreBrush(visible) {\n          filters.forEach(function (f) {\n            //If filter brushed NaN values, keep the brush on the bottom of the axis.\n            var brushDomain = y[f.dimension].brush.y().domain();\n\n            if (f.hasOnlyNaN) {\n              f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n            }\n\n            if (f.hasNaN) {\n              f.extent[0] = brushDomain[0];\n            }\n\n            if (visible) y[f.dimension].brush.extent(f.extent);\n          });\n          dimensions.select('.nv-brushBackground').each(function (d) {\n            d3.select(this).call(y[d.key].brush);\n          }).selectAll('rect').attr('x', -8).attr('width', 16);\n          updateTicks();\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brushstart() {\n          //If brush aren't visible, show it before brushing again.\n          if (displayBrush === false) {\n            displayBrush = true;\n            restoreBrush(true);\n          }\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brush() {\n          actives = dimensionNames.filter(function (p) {\n            return !y[p].brush.empty();\n          });\n          extents = actives.map(function (p) {\n            return y[p].brush.extent();\n          });\n          filters = []; //erase current filters\n\n          actives.forEach(function (d, i) {\n            filters[i] = {\n              dimension: d,\n              extent: extents[i],\n              hasNaN: false,\n              hasOnlyNaN: false\n            };\n          });\n          active = []; //erase current active list\n\n          foreground.style('display', function (d) {\n            var isActive = actives.every(function (p, i) {\n              if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n              return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n            });\n            if (isActive) active.push(d);\n            return isActive ? null : 'none';\n          });\n          updateTicks();\n          dispatch.brush({\n            filters: filters,\n            active: active\n          });\n        }\n\n        function brushend() {\n          var hasActiveBrush = actives.length > 0 ? true : false;\n          filters.forEach(function (f) {\n            if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0) f.hasNaN = true;\n            if (f.extent[1] < y[f.dimension].domain()[0]) f.hasOnlyNaN = true;\n          });\n          dispatch.brushEnd(active, hasActiveBrush);\n        }\n\n        function updateTicks() {\n          dimensions.select('.nv-axis').each(function (d, i) {\n            var f = filters.filter(function (k) {\n              return k.dimension == d.key;\n            });\n            currentTicks[d.key] = y[d.key].domain(); //If brush are available, display brush extent\n\n            if (f.length != 0 && displayBrush) {\n              currentTicks[d.key] = [];\n              if (f[0].extent[1] > y[d.key].domain()[0]) currentTicks[d.key] = [f[0].extent[1]];\n              if (f[0].extent[0] >= y[d.key].domain()[0]) currentTicks[d.key].push(f[0].extent[0]);\n            }\n\n            d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n          });\n        }\n\n        function dragStart(d) {\n          dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n          background.attr(\"visibility\", \"hidden\");\n        }\n\n        function dragMove(d) {\n          dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n          foreground.attr(\"d\", path);\n          enabledDimensions.sort(function (a, b) {\n            return dimensionPosition(a.key) - dimensionPosition(b.key);\n          });\n          enabledDimensions.forEach(function (d, i) {\n            return d.currentPosition = i;\n          });\n          x.domain(enabledDimensions.map(function (d) {\n            return d.key;\n          }));\n          dimensions.attr(\"transform\", function (d) {\n            return \"translate(\" + dimensionPosition(d.key) + \")\";\n          });\n        }\n\n        function dragEnd(d, i) {\n          delete this.parentNode.__origin__;\n          delete dragging[d.key];\n          d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n          foreground.attr(\"d\", path);\n          background.attr(\"d\", path).attr(\"visibility\", null);\n          dispatch.dimensionsOrder(enabledDimensions);\n        }\n\n        function dimensionPosition(d) {\n          var v = dragging[d];\n          return v == null ? x(d) : v;\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      filters: {\n        get: function get() {\n          return filters;\n        },\n        set: function set(_) {\n          filters = _;\n        }\n      },\n      active: {\n        get: function get() {\n          return active;\n        },\n        set: function set(_) {\n          active = _;\n        }\n      },\n      lineTension: {\n        get: function get() {\n          return lineTension;\n        },\n        set: function set(_) {\n          lineTension = _;\n        }\n      },\n      undefinedValuesLabel: {\n        get: function get() {\n          return undefinedValuesLabel;\n        },\n        set: function set(_) {\n          undefinedValuesLabel = _;\n        }\n      },\n      // deprecated options\n      dimensions: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensions', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionNames: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionNames', 'use dimensionData instead');\n          dimensionNames = [];\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionFormats: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.format;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (f) {\n              dimensionData.push({\n                format: f\n              });\n            });\n          } else {\n            _.forEach(function (f, i) {\n              dimensionData[i].format = f;\n            });\n          }\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.parallelCoordinatesChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var parallelCoordinates = nv.models.parallelCoordinates();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var dimensionTooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showLegend = true,\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        dimensionData = [],\n        displayBrush = true,\n        defaultState = null,\n        noData = null,\n        nanValue = \"undefined\",\n        dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    }; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    };\n\n    tooltip.contentGenerator(function (data) {\n      var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\n      if (data.series.length !== 0) {\n        str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n        data.series.forEach(function (d) {\n          str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n        });\n        str = str + '</tbody>';\n      }\n\n      str = str + '</table>';\n      return str;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(parallelCoordinates);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(dimensionData), chart.update).getter(stateGetter(dimensionData)).update(); //set state.disabled\n\n        state.disabled = dimensionData.map(function (d) {\n          return !!d.disabled;\n        }); //Keep dimensions position in memory\n\n        dimensionData = dimensionData.map(function (d) {\n          d.disabled = !!d.disabled;\n          return d;\n        });\n        dimensionData.forEach(function (d, i) {\n          d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n          d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.select(\"rect\").attr(\"width\", availableWidth).attr(\"height\", availableHeight > 0 ? availableHeight : 0); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth).color(function (d) {\n            return \"rgb(188,190,192)\";\n          });\n          g.select('.nv-legendWrap').datum(dimensionData.sort(function (a, b) {\n            return a.originalPosition - b.originalPosition;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate( 0 ,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        parallelCoordinates.width(availableWidth).height(availableHeight).dimensionData(dimensionData).displayBrush(displayBrush);\n        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ').datum(data);\n        parallelCoordinatesWrap.transition().call(parallelCoordinates); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //Display reset brush button\n\n        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n          if (hasActiveBrush) {\n            displayBrush = true;\n            dispatch.brushEnd(active);\n          } else {\n            displayBrush = false;\n          }\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); //Update dimensions order and display reset sorting button\n\n        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n          dimensionData.sort(function (a, b) {\n            return a.currentPosition - b.currentPosition;\n          });\n          var isSorted = false;\n          dimensionData.forEach(function (d, i) {\n            d.currentPosition = i;\n            if (d.currentPosition !== d.originalPosition) isSorted = true;\n          });\n          dispatch.dimensionsOrder(dimensionData, isSorted);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            dimensionData.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('parraleleCoordinateChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var tp = {\n        key: evt.label,\n        color: evt.color,\n        series: []\n      };\n\n      if (evt.values) {\n        Object.keys(evt.values).forEach(function (d) {\n          var dim = evt.dimensions.filter(function (dd) {\n            return dd.key === d;\n          })[0];\n\n          if (dim) {\n            var v;\n\n            if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n              v = nanValue;\n            } else {\n              v = dim.format(evt.values[d]);\n            }\n\n            tp.series.push({\n              idx: dim.currentPosition,\n              key: d,\n              value: v,\n              color: dim.color\n            });\n          }\n        });\n        tp.series.sort(function (a, b) {\n          return a.idx - b.idx;\n        });\n      }\n\n      tooltip.data(tp).hidden(false);\n    });\n    parallelCoordinates.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.parallelCoordinates = parallelCoordinates;\n    chart.legend = legend;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nanValue: {\n        get: function get() {\n          return nanValue;\n        },\n        set: function set(_) {\n          nanValue = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          parallelCoordinates.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, parallelCoordinates);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pie = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 500,\n        height = 500,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        valueFormat = d3.format(',.2f'),\n        showLabels = true,\n        labelsOutside = false,\n        labelType = \"key\",\n        labelThreshold = .02 //if slice percentage is under this, don't show label\n    ,\n        hideOverlapLabels = false //Hide labels that don't fit in slice\n    ,\n        donut = false,\n        title = false,\n        growOnHover = true,\n        titleOffset = 0,\n        labelSunbeamLayout = false,\n        startAngle = false,\n        padAngle = false,\n        endAngle = false,\n        cornerRadius = 0,\n        donutRatio = 0.5,\n        duration = 250,\n        arcsRadius = [],\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd');\n\n    var arcs = [];\n    var arcsOver = []; //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom,\n            radius = Math.min(availableWidth, availableHeight) / 2,\n            arcsRadiusOuter = [],\n            arcsRadiusInner = [];\n        container = d3.select(this);\n\n        if (arcsRadius.length === 0) {\n          var outer = radius - radius / 10;\n          var inner = donutRatio * radius;\n\n          for (var i = 0; i < data[0].length; i++) {\n            arcsRadiusOuter.push(outer);\n            arcsRadiusInner.push(inner);\n          }\n        } else {\n          if (growOnHover) {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return (d.outer - d.outer / 10) * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return (d.inner - d.inner / 10) * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner - d.inner / 10;\n            }));\n          } else {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return d.outer * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return d.inner * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner;\n            }));\n          }\n        }\n\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pie nv-chart-' + id);\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n        gEnter.append('g').attr('class', 'nv-pieLabels');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n        g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')'); //\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        arcs = [];\n        arcsOver = [];\n\n        for (var i = 0; i < data[0].length; i++) {\n          var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n          var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n          if (startAngle !== false) {\n            arc.startAngle(startAngle);\n            arcOver.startAngle(startAngle);\n          }\n\n          if (endAngle !== false) {\n            arc.endAngle(endAngle);\n            arcOver.endAngle(endAngle);\n          }\n\n          if (donut) {\n            arc.innerRadius(arcsRadiusInner[i]);\n            arcOver.innerRadius(arcsRadiusInner[i]);\n          }\n\n          if (arc.cornerRadius && cornerRadius) {\n            arc.cornerRadius(cornerRadius);\n            arcOver.cornerRadius(cornerRadius);\n          }\n\n          arcs.push(arc);\n          arcsOver.push(arcOver);\n        } // Setup the Pie chart and choose the data element\n\n\n        var pie = d3.layout.pie().sort(null).value(function (d) {\n          return d.disabled ? 0 : getY(d);\n        }); // padAngle added in d3 3.5\n\n        if (pie.padAngle && padAngle) {\n          pie.padAngle(padAngle);\n        } // if title is specified and donut, put it in the middle\n\n\n        if (donut && title) {\n          g_pie.append(\"text\").attr('class', 'nv-pie-title');\n          wrap.select('.nv-pie-title').style(\"text-anchor\", \"middle\").text(function (d) {\n            return title;\n          }).style(\"font-size\", Math.min(availableWidth, availableHeight) * donutRatio * 2 / (title.length + 2) + \"px\").attr(\"dy\", \"0.35em\") // trick to vertically center text\n          .attr('transform', function (d, i) {\n            return 'translate(0, ' + titleOffset + ')';\n          });\n        }\n\n        var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n        var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n        slices.exit().remove();\n        pieLabels.exit().remove();\n        var ae = slices.enter().append('g');\n        ae.attr('class', 'nv-slice');\n        ae.on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(70).attr(\"d\", arcsOver[i]);\n          }\n\n          dispatch.elementMouseover({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n          });\n        });\n        ae.on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(50).attr(\"d\", arcs[i]);\n          }\n\n          dispatch.elementMouseout({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n        });\n        ae.on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        slices.attr('fill', function (d, i) {\n          return color(d.data, i);\n        });\n        slices.attr('stroke', function (d, i) {\n          return color(d.data, i);\n        });\n        var paths = ae.append('path').each(function (d) {\n          this._current = d;\n        });\n        slices.select('path').transition().duration(duration).attr('d', function (d, i) {\n          return arcs[i](d);\n        }).attrTween('d', arcTween);\n\n        if (showLabels) {\n          // This does the normal label\n          var labelsArc = [];\n\n          for (var i = 0; i < data[0].length; i++) {\n            labelsArc.push(arcs[i]);\n\n            if (labelsOutside) {\n              if (donut) {\n                labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n              }\n            } else if (!donut) {\n              labelsArc[i].innerRadius(0);\n            }\n          }\n\n          pieLabels.enter().append(\"g\").classed(\"nv-label\", true).each(function (d, i) {\n            var group = d3.select(this);\n            group.attr('transform', function (d, i) {\n              if (labelSunbeamLayout) {\n                d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n                d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n                var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n                if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                  rotateAngle -= 90;\n                } else {\n                  rotateAngle += 90;\n                }\n\n                return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n              } else {\n                d.outerRadius = radius + 10; // Set Outer Coordinate\n\n                d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                return 'translate(' + labelsArc[i].centroid(d) + ')';\n              }\n            });\n            group.append('rect').style('stroke', '#fff').style('fill', '#fff').attr(\"rx\", 3).attr(\"ry\", 3);\n            group.append('text').style('text-anchor', labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n            .style('fill', '#000');\n          });\n          var labelLocationHash = {};\n          var avgHeight = 14;\n          var avgWidth = 140;\n\n          var createHashKey = function createHashKey(coordinates) {\n            return Math.floor(coordinates[0] / avgWidth) * avgWidth + ',' + Math.floor(coordinates[1] / avgHeight) * avgHeight;\n          };\n\n          var getSlicePercentage = function getSlicePercentage(d) {\n            return (d.endAngle - d.startAngle) / (2 * Math.PI);\n          };\n\n          pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n            if (labelSunbeamLayout) {\n              d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n              d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n              var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n              if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                rotateAngle -= 90;\n              } else {\n                rotateAngle += 90;\n              }\n\n              return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n            } else {\n              d.outerRadius = radius + 10; // Set Outer Coordinate\n\n              d.innerRadius = radius + 15; // Set Inner Coordinate\n\n              /*\n              Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n              Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n              Adjust the label's y-position to remove the overlap.\n              */\n\n              var center = labelsArc[i].centroid(d);\n              var percent = getSlicePercentage(d);\n\n              if (d.value && percent >= labelThreshold) {\n                var hashKey = createHashKey(center);\n\n                if (labelLocationHash[hashKey]) {\n                  center[1] -= avgHeight;\n                }\n\n                labelLocationHash[createHashKey(center)] = true;\n              }\n\n              return 'translate(' + center + ')';\n            }\n          });\n          pieLabels.select(\".nv-label text\").style('text-anchor', function (d, i) {\n            //center the text on it's origin or begin/end if orthogonal aligned\n            return labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle';\n          }).text(function (d, i) {\n            var percent = getSlicePercentage(d);\n            var label = '';\n            if (!d.value || percent < labelThreshold) return '';\n\n            if (typeof labelType === 'function') {\n              label = labelType(d, i, {\n                'key': getX(d.data),\n                'value': getY(d.data),\n                'percent': valueFormat(percent)\n              });\n            } else {\n              switch (labelType) {\n                case 'key':\n                  label = getX(d.data);\n                  break;\n\n                case 'value':\n                  label = valueFormat(getY(d.data));\n                  break;\n\n                case 'percent':\n                  label = d3.format('%')(percent);\n                  break;\n              }\n            }\n\n            return label;\n          });\n\n          if (hideOverlapLabels) {\n            pieLabels.each(function (d, i) {\n              if (!this.getBBox) return;\n              var bb = this.getBBox(),\n                  center = labelsArc[i].centroid(d);\n              var topLeft = {\n                x: center[0] + bb.x,\n                y: center[1] + bb.y\n              };\n              var topRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y\n              };\n              var bottomLeft = {\n                x: topLeft.x,\n                y: topLeft.y + bb.height\n              };\n              var bottomRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y + bb.height\n              };\n              d.visible = nv.utils.pointIsInArc(topLeft, d, arc) && nv.utils.pointIsInArc(topRight, d, arc) && nv.utils.pointIsInArc(bottomLeft, d, arc) && nv.utils.pointIsInArc(bottomRight, d, arc);\n            }).style('display', function (d) {\n              return d.visible ? null : 'none';\n            });\n          }\n        } // Computes the angle of an arc, converting from radians to degrees.\n\n\n        function angle(d) {\n          var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n          return a > 90 ? a - 180 : a;\n        }\n\n        function arcTween(a, idx) {\n          a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n          a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n          if (!donut) a.innerRadius = 0;\n          var i = d3.interpolate(this._current, a);\n          this._current = i(0);\n          return function (t) {\n            return arcs[idx](i(t));\n          };\n        }\n      });\n      renderWatch.renderEnd('pie immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      arcsRadius: {\n        get: function get() {\n          return arcsRadius;\n        },\n        set: function set(_) {\n          arcsRadius = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      title: {\n        get: function get() {\n          return title;\n        },\n        set: function set(_) {\n          title = _;\n        }\n      },\n      titleOffset: {\n        get: function get() {\n          return titleOffset;\n        },\n        set: function set(_) {\n          titleOffset = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      hideOverlapLabels: {\n        get: function get() {\n          return hideOverlapLabels;\n        },\n        set: function set(_) {\n          hideOverlapLabels = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      endAngle: {\n        get: function get() {\n          return endAngle;\n        },\n        set: function set(_) {\n          endAngle = _;\n        }\n      },\n      startAngle: {\n        get: function get() {\n          return startAngle;\n        },\n        set: function set(_) {\n          startAngle = _;\n        }\n      },\n      padAngle: {\n        get: function get() {\n          return padAngle;\n        },\n        set: function set(_) {\n          padAngle = _;\n        }\n      },\n      cornerRadius: {\n        get: function get() {\n          return cornerRadius;\n        },\n        set: function set(_) {\n          cornerRadius = _;\n        }\n      },\n      donutRatio: {\n        get: function get() {\n          return donutRatio;\n        },\n        set: function set(_) {\n          donutRatio = _;\n        }\n      },\n      labelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n        }\n      },\n      labelSunbeamLayout: {\n        get: function get() {\n          return labelSunbeamLayout;\n        },\n        set: function set(_) {\n          labelSunbeamLayout = _;\n        }\n      },\n      donut: {\n        get: function get() {\n          return donut;\n        },\n        set: function set(_) {\n          donut = _;\n        }\n      },\n      growOnHover: {\n        get: function get() {\n          return growOnHover;\n        },\n        set: function set(_) {\n          growOnHover = _;\n        }\n      },\n      // depreciated after 1.7.1\n      pieLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // depreciated after 1.7.1\n      donutLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // deprecated after 1.7.1\n      labelFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n          nv.deprecated('labelFormat', 'use valueFormat instead');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n          margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n          margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n          margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      labelType: {\n        get: function get() {\n          return labelType;\n        },\n        set: function set(_) {\n          labelType = _ || 'key';\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pieChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showTooltipPercent = false,\n        showLegend = true,\n        legendPosition = \"top\",\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return pie.valueFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    }; //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(pie);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-pieWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === \"top\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          } else if (legendPosition === \"right\") {\n            var legendWidth = nv.models.legend().width();\n\n            if (availableWidth / 2 < legendWidth) {\n              legendWidth = availableWidth / 2;\n            }\n\n            legend.height(availableHeight).key(pie.x());\n            legend.width(legendWidth);\n            availableWidth -= legend.width();\n            wrap.select('.nv-legendWrap').datum(data).call(legend).attr('transform', 'translate(' + availableWidth + ',0)');\n          } else if (legendPosition === \"bottom\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + availableHeight + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        pie.width(availableWidth).height(availableHeight);\n        var pieWrap = g.select('.nv-pieWrap').datum([data]);\n        d3.transition(pieWrap).call(pie); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('pieChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    pie.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    pie.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    pie.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          legend.color(color);\n          pie.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          pie.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sankey = function () {\n    'use strict'; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function layout(iterations) {\n      computeNodeLinks();\n      computeNodeValues();\n      computeNodeBreadths();\n      computeNodeDepths(iterations);\n    };\n\n    var relayout = function relayout() {\n      computeLinkDepths();\n    }; // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\n\n    var link = function link() {\n      var curvature = .5;\n\n      function link(d) {\n        var x0 = d.source.x + d.source.dx,\n            x1 = d.target.x,\n            xi = d3.interpolateNumber(x0, x1),\n            x2 = xi(curvature),\n            x3 = xi(1 - curvature),\n            y0 = d.source.y + d.sy + d.dy / 2,\n            y1 = d.target.y + d.ty + d.dy / 2;\n        var linkPath = 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1;\n        return linkPath;\n      }\n\n      link.curvature = function (_) {\n        if (!arguments.length) return curvature;\n        curvature = +_;\n        return link;\n      };\n\n      return link;\n    }; // Y-position of the middle of a node.\n\n\n    var center = function center(node) {\n      return node.y + node.dy / 2;\n    }; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n\n\n    function computeNodeLinks() {\n      nodes.forEach(function (node) {\n        // Links that have this node as source.\n        node.sourceLinks = []; // Links that have this node as target.\n\n        node.targetLinks = [];\n      });\n      links.forEach(function (link) {\n        var source = link.source,\n            target = link.target;\n        if (typeof source === 'number') source = link.source = nodes[link.source];\n        if (typeof target === 'number') target = link.target = nodes[link.target];\n        source.sourceLinks.push(link);\n        target.targetLinks.push(link);\n      });\n    } // Compute the value (size) of each node by summing the associated links.\n\n\n    function computeNodeValues() {\n      nodes.forEach(function (node) {\n        node.value = Math.max(d3.sum(node.sourceLinks, value), d3.sum(node.targetLinks, value));\n      });\n    } // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n\n\n    function computeNodeBreadths() {\n      //\n      var remainingNodes = nodes,\n          nextNodes,\n          x = 0; // Work from left to right.\n      // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n      //\n\n      while (remainingNodes.length && x < nodes.length) {\n        nextNodes = [];\n        remainingNodes.forEach(function (node) {\n          node.x = x;\n          node.dx = nodeWidth;\n          node.sourceLinks.forEach(function (link) {\n            if (nextNodes.indexOf(link.target) < 0) {\n              nextNodes.push(link.target);\n            }\n          });\n        });\n        remainingNodes = nextNodes;\n        ++x; //\n      } // Optionally move pure sinks always to the right.\n\n\n      if (sinksRight) {\n        moveSinksRight(x);\n      }\n\n      scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n      nodes.forEach(function (node) {\n        if (!node.targetLinks.length) {\n          node.x = d3.min(node.sourceLinks, function (d) {\n            return d.target.x;\n          }) - 1;\n        }\n      });\n    }\n\n    function moveSinksRight(x) {\n      nodes.forEach(function (node) {\n        if (!node.sourceLinks.length) {\n          node.x = x - 1;\n        }\n      });\n    }\n\n    function scaleNodeBreadths(kx) {\n      nodes.forEach(function (node) {\n        node.x *= kx;\n      });\n    } // Compute the depth (y-position) for each node.\n\n\n    function computeNodeDepths(iterations) {\n      // Group nodes by breath.\n      var nodesByBreadth = d3.nest().key(function (d) {\n        return d.x;\n      }).sortKeys(d3.ascending).entries(nodes).map(function (d) {\n        return d.values;\n      }); //\n\n      initializeNodeDepth();\n      resolveCollisions();\n      computeLinkDepths();\n\n      for (var alpha = 1; iterations > 0; --iterations) {\n        relaxRightToLeft(alpha *= .99);\n        resolveCollisions();\n        computeLinkDepths();\n        relaxLeftToRight(alpha);\n        resolveCollisions();\n        computeLinkDepths();\n      }\n\n      function initializeNodeDepth() {\n        // Calculate vertical scaling factor.\n        var ky = d3.min(nodesByBreadth, function (nodes) {\n          return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n        });\n        nodesByBreadth.forEach(function (nodes) {\n          nodes.forEach(function (node, i) {\n            node.y = i;\n            node.dy = node.value * ky;\n          });\n        });\n        links.forEach(function (link) {\n          link.dy = link.value * ky;\n        });\n      }\n\n      function relaxLeftToRight(alpha) {\n        nodesByBreadth.forEach(function (nodes, breadth) {\n          nodes.forEach(function (node) {\n            if (node.targetLinks.length) {\n              // Value-weighted average of the y-position of source node centers linked to this node.\n              var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedSource(link) {\n          return (link.source.y + link.sy + link.dy / 2) * link.value;\n        }\n      }\n\n      function relaxRightToLeft(alpha) {\n        nodesByBreadth.slice().reverse().forEach(function (nodes) {\n          nodes.forEach(function (node) {\n            if (node.sourceLinks.length) {\n              // Value-weighted average of the y-positions of target nodes linked to this node.\n              var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedTarget(link) {\n          return (link.target.y + link.ty + link.dy / 2) * link.value;\n        }\n      }\n\n      function resolveCollisions() {\n        nodesByBreadth.forEach(function (nodes) {\n          var node,\n              dy,\n              y0 = 0,\n              n = nodes.length,\n              i; // Push any overlapping nodes down.\n\n          nodes.sort(ascendingDepth);\n\n          for (i = 0; i < n; ++i) {\n            node = nodes[i];\n            dy = y0 - node.y;\n            if (dy > 0) node.y += dy;\n            y0 = node.y + node.dy + nodePadding;\n          } // If the bottommost node goes outside the bounds, push it back up.\n\n\n          dy = y0 - nodePadding - size[1];\n\n          if (dy > 0) {\n            y0 = node.y -= dy; // Push any overlapping nodes back up.\n\n            for (i = n - 2; i >= 0; --i) {\n              node = nodes[i];\n              dy = node.y + node.dy + nodePadding - y0;\n              if (dy > 0) node.y -= dy;\n              y0 = node.y;\n            }\n          }\n        });\n      }\n\n      function ascendingDepth(a, b) {\n        return a.y - b.y;\n      }\n    } // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n\n\n    function computeLinkDepths() {\n      nodes.forEach(function (node) {\n        node.sourceLinks.sort(ascendingTargetDepth);\n        node.targetLinks.sort(ascendingSourceDepth);\n      });\n      nodes.forEach(function (node) {\n        var sy = 0,\n            ty = 0;\n        node.sourceLinks.forEach(function (link) {\n          link.sy = sy;\n          sy += link.dy;\n        });\n        node.targetLinks.forEach(function (link) {\n          link.ty = ty;\n          ty += link.dy;\n        });\n      });\n\n      function ascendingSourceDepth(a, b) {\n        return a.source.y - b.source.y;\n      }\n\n      function ascendingTargetDepth(a, b) {\n        return a.target.y - b.target.y;\n      }\n    } // Value property accessor.\n\n\n    function value(x) {\n      return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = +_;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      nodes: {\n        get: function get() {\n          return nodes;\n        },\n        set: function set(_) {\n          nodes = _;\n        }\n      },\n      links: {\n        get: function get() {\n          return links;\n        },\n        set: function set(_) {\n          links = _;\n        }\n      },\n      size: {\n        get: function get() {\n          return size;\n        },\n        set: function set(_) {\n          size = _;\n        }\n      },\n      sinksRight: {\n        get: function get() {\n          return sinksRight;\n        },\n        set: function set(_) {\n          sinksRight = _;\n        }\n      },\n      layout: {\n        get: function get() {\n          layout(32);\n        },\n        set: function set(_) {\n          layout(_);\n        }\n      },\n      relayout: {\n        get: function get() {\n          relayout();\n        },\n        set: function set(_) {}\n      },\n      center: {\n        get: function get() {\n          return center();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            center = _;\n          }\n        }\n      },\n      link: {\n        get: function get() {\n          return link();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            link = _;\n          }\n\n          return link();\n        }\n      }\n    });\n    nv.utils.initOptions(sankey);\n    return sankey;\n  };\n\n  nv.models.sankeyChart = function () {\n    \"use strict\"; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        sankey = nv.models.sankey(),\n        width = 600,\n        height = 400,\n        nodeWidth = 36,\n        nodePadding = 40,\n        units = 'units',\n        center = undefined; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f'); // zero decimal places\n\n    var format = function format(d) {\n      return formatNumber(d) + ' ' + units;\n    };\n\n    var color = d3.scale.category20();\n\n    var linkTitle = function linkTitle(d) {\n      return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n\n    var nodeFillColor = function nodeFillColor(d) {\n      return d.color = color(d.name.replace(/ .*/, ''));\n    };\n\n    var nodeStrokeColor = function nodeStrokeColor(d) {\n      return d3.rgb(d.color).darker(2);\n    };\n\n    var nodeTitle = function nodeTitle(d) {\n      return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function showError(element, message) {\n      element.append('text').attr('x', 0).attr('y', 0).attr('class', 'nvd3-sankey-chart-error').attr('text-anchor', 'middle').text(message);\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var testData = {\n          nodes: [{\n            'node': 1,\n            'name': 'Test 1'\n          }, {\n            'node': 2,\n            'name': 'Test 2'\n          }, {\n            'node': 3,\n            'name': 'Test 3'\n          }, {\n            'node': 4,\n            'name': 'Test 4'\n          }, {\n            'node': 5,\n            'name': 'Test 5'\n          }, {\n            'node': 6,\n            'name': 'Test 6'\n          }],\n          links: [{\n            'source': 0,\n            'target': 1,\n            'value': 2295\n          }, {\n            'source': 0,\n            'target': 5,\n            'value': 1199\n          }, {\n            'source': 1,\n            'target': 2,\n            'value': 1119\n          }, {\n            'source': 1,\n            'target': 5,\n            'value': 1176\n          }, {\n            'source': 2,\n            'target': 3,\n            'value': 487\n          }, {\n            'source': 2,\n            'target': 5,\n            'value': 632\n          }, {\n            'source': 3,\n            'target': 4,\n            'value': 301\n          }, {\n            'source': 3,\n            'target': 5,\n            'value': 186\n          }]\n        }; // Error handling\n\n        var isDataValid = false;\n        var dataAvailable = false; // check if data is valid\n\n        if ((typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 && (typeof data['links'] === 'object' && data['links'].length) >= 0) {\n          isDataValid = true;\n        } // check if data is available\n\n\n        if (data['nodes'] && data['nodes'].length > 0 && data['links'] && data['links'].length > 0) {\n          dataAvailable = true;\n        } // show error\n\n\n        if (!isDataValid) {\n          console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n          console.info('Valid data format is: ', testData, JSON.stringify(testData));\n          showError(selection, 'Error loading chart, data is invalid');\n          return false;\n        } // TODO use nv.utils.noData\n\n\n        if (!dataAvailable) {\n          showError(selection, 'No data available');\n          return false;\n        } // No errors, continue\n        // append the svg canvas to the page\n\n\n        var svg = selection.append('svg').attr('width', width).attr('height', height).append('g').attr('class', 'nvd3 nv-wrap nv-sankeyChart'); // Set the sankey diagram properties\n\n        sankey.nodeWidth(nodeWidth).nodePadding(nodePadding).size([width, height]);\n        var path = sankey.link();\n        sankey.nodes(data.nodes).links(data.links).layout(32).center(center); // add in the links\n\n        var link = svg.append('g').selectAll('.link').data(data.links).enter().append('path').attr('class', 'link').attr('d', path).style('stroke-width', function (d) {\n          return Math.max(1, d.dy);\n        }).sort(function (a, b) {\n          return b.dy - a.dy;\n        }); // add the link titles\n\n        link.append('title').text(linkTitle); // add in the nodes\n\n        var node = svg.append('g').selectAll('.node').data(data.nodes).enter().append('g').attr('class', 'node').attr('transform', function (d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        }).call(d3.behavior.drag().origin(function (d) {\n          return d;\n        }).on('dragstart', function () {\n          this.parentNode.appendChild(this);\n        }).on('drag', dragmove)); // add the rectangles for the nodes\n\n        node.append('rect').attr('height', function (d) {\n          return d.dy;\n        }).attr('width', sankey.nodeWidth()).style('fill', nodeFillColor).style('stroke', nodeStrokeColor).append('title').text(nodeTitle); // add in the title for the nodes\n\n        node.append('text').attr('x', -6).attr('y', function (d) {\n          return d.dy / 2;\n        }).attr('dy', '.35em').attr('text-anchor', 'end').attr('transform', null).text(function (d) {\n          return d.name;\n        }).filter(function (d) {\n          return d.x < width / 2;\n        }).attr('x', 6 + sankey.nodeWidth()).attr('text-anchor', 'start'); // the function for moving the nodes\n\n        function dragmove(d) {\n          d3.select(this).attr('transform', 'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ')');\n          sankey.relayout();\n          link.attr('d', path);\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      units: {\n        get: function get() {\n          return units;\n        },\n        set: function set(_) {\n          units = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      format: {\n        get: function get() {\n          return format;\n        },\n        set: function set(_) {\n          format = _;\n        }\n      },\n      linkTitle: {\n        get: function get() {\n          return linkTitle;\n        },\n        set: function set(_) {\n          linkTitle = _;\n        }\n      },\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = _;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      center: {\n        get: function get() {\n          return center;\n        },\n        set: function set(_) {\n          center = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      nodeStyle: {\n        get: function get() {\n          return {};\n        },\n        set: function set(_) {\n          nodeFillColor = _.fillColor !== undefined ? _.fillColor : nodeFillColor;\n          nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n          nodeTitle = _.title !== undefined ? _.title : nodeTitle;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatter = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor() // chooses color\n    ,\n        pointBorderColor = null,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        z = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value\n    ,\n        getSize = function getSize(d) {\n      return d.size || 1;\n    } // accessor to get the point size\n    ,\n        getShape = function getShape(d) {\n      return d.shape || 'circle';\n    } // accessor to get point shape\n    ,\n        forceX = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        forceY = [] // List of numbers to Force into the Y scale\n    ,\n        forceSize = [] // List of numbers to Force into the Size scale\n    ,\n        interactive = true // If true, plots a voronoi overlay for advanced point intersection\n    ,\n        pointActive = function pointActive(d) {\n      return !d.notActive;\n    } // any points that return false will be filtered out\n    ,\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n    ,\n        clipEdge = false // if true, masks points within x and y scale\n    ,\n        clipVoronoi = true // if true, masks each point with a circle... can turn off to slightly increase performance\n    ,\n        showVoronoi = false // display the voronoi areas\n    ,\n        clipRadius = function clipRadius() {\n      return 25;\n    } // function to get the radius for voronoi point clips\n    ,\n        xDomain = null // Override x domain (skips the calculation from data)\n    ,\n        yDomain = null // Override y domain\n    ,\n        xRange = null // Override x range\n    ,\n        yRange = null // Override y range\n    ,\n        sizeDomain = null // Override point size domain\n    ,\n        sizeRange = null,\n        singlePoint = false,\n        dispatch = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd'),\n        useVoronoi = true,\n        duration = 250,\n        interactiveUpdateDelay = 300,\n        showLabels = false; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0,\n        z0 // used to store previous scales\n    ,\n        xDom,\n        yDom // used to store previous domains\n    ,\n        width0,\n        height0,\n        timeoutID,\n        needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        _sizeRange_def = [16, 256],\n        _cache = {}; //============================================================\n    // Diff and Cache Utilities\n    //------------------------------------------------------------\n    // getDiffs is used to filter unchanged points from the update\n    // selection. It implicitly updates it's cache when called and\n    // therefor the diff is based upon the previous invocation NOT\n    // the previous update.\n    //\n    // getDiffs takes a point as its first argument followed by n\n    // key getter pairs (d, [key, get... key, get]) this approach\n    // was chosen for efficiency. (The filter will call it a LOT).\n    //\n    // It is important to call delCache on point exit to prevent a\n    // memory leak. It is also needed to prevent invalid caches if\n    // a new point uses the same series and point id key.\n    //\n    // Argument Performance Concerns:\n    // - Object property lists for key getter pairs would be very\n    // expensive (points * objects for the GC every update).\n    // - ES6 function names for implicit keys would be nice but\n    // they are not guaranteed to be unique.\n    // - function.toString to obtain implicit keys is possible\n    // but long object keys are not free (internal hash).\n    // - Explicit key without objects are the most efficient.\n\n    function getCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      val = _cache[key] = _cache[key] || {};\n      return val;\n    }\n\n    function delCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      delete _cache[key];\n    }\n\n    function getDiffs(d) {\n      var i,\n          key,\n          val,\n          cache = getCache(d),\n          diffs = false;\n\n      for (i = 1; i < arguments.length; i += 2) {\n        key = arguments[i];\n        val = arguments[i + 1](d[0], d[1]);\n\n        if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n          cache[key] = val;\n          diffs = true;\n        }\n      }\n\n      return diffs;\n    }\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n\n        var logScale = typeof chart.yScale().base === \"function\"; // Only log scale has a method \"base()\"\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain && sizeDomain ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n        d3.merge(data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              size: getSize(d, i)\n            };\n          });\n        }));\n        x.domain(xDomain || d3.extent(seriesData.map(function (d) {\n          return d.x;\n        }).concat(forceX)));\n        if (padData && data[0]) x.range(xRange || [(availableWidth * padDataOuter + availableWidth) / (2 * data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)]); //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n        else x.range(xRange || [0, availableWidth]);\n\n        if (logScale) {\n          var min = d3.min(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;\n          }));\n          y.clamp(true).domain(yDomain || d3.extent(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;else return min * 0.1;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        } else {\n          y.domain(yDomain || d3.extent(seriesData.map(function (d) {\n            return d.y;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        }\n\n        z.domain(sizeDomain || d3.extent(seriesData.map(function (d) {\n          return d.size;\n        }).concat(forceSize))).range(sizeRange || _sizeRange_def); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n\n        if (isNaN(x.domain()[0])) {\n          x.domain([-1, 1]);\n        }\n\n        if (isNaN(y.domain()[0])) {\n          y.domain([-1, 1]);\n        }\n\n        x0 = x0 || x;\n        y0 = y0 || y;\n        z0 = z0 || z;\n        var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n        width0 = width0 || width;\n        height0 = height0 || height;\n        var sizeDiff = width0 !== width || height0 !== height; // Domain Diffs\n\n        xDom = xDom || [];\n        var domainDiff = xDom[0] !== x.domain()[0] || xDom[1] !== x.domain()[1];\n        xDom = x.domain();\n        yDom = yDom || [];\n        domainDiff = domainDiff || yDom[0] !== y.domain()[0] || yDom[1] !== y.domain()[1];\n        yDom = y.domain(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.classed('nv-single-point', singlePoint);\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-point-paths');\n        wrapEnter.append('g').attr('class', 'nv-point-clips');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect').attr('transform', 'translate( -10, -10)');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth + 20).attr('height', availableHeight > 0 ? availableHeight + 20 : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n        function updateInteractiveLayer() {\n          // Always clear needs-update flag regardless of whether or not\n          // we will actually do anything (avoids needless invocations).\n          needsUpdate = false;\n          if (!interactive) return false; // inject series and point index for reference into voronoi\n\n          if (useVoronoi === true) {\n            // nuke all voronoi paths on reload and recreate them\n            wrap.select('.nv-point-paths').selectAll('path').remove();\n            var vertices = d3.merge(data.map(function (group, groupIndex) {\n              return group.values.map(function (point, pointIndex) {\n                // *Adding noise to make duplicates very unlikely\n                // *Injecting series and point index for reference\n                // *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                var pX = getX(point, pointIndex);\n                var pY = getY(point, pointIndex);\n                return [nv.utils.NaNtoZero(x(pX)) + Math.random() * 1e-4, nv.utils.NaNtoZero(y(pY)) + Math.random() * 1e-4, groupIndex, pointIndex, point];\n              }).filter(function (pointArray, pointIndex) {\n                return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n              });\n            }));\n            if (vertices.length == 0) return false; // No active points, we're done\n\n            if (vertices.length < 3) {\n              // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n              vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n              vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n            } // keep voronoi sections from going more than 10 outside of graph\n            // to avoid overlap with other things like legend etc\n\n\n            var bounds = d3.geom.polygon([[-10, -10], [-10, height + 10], [width + 10, height + 10], [width + 10, -10]]); // delete duplicates from vertices - essential assumption for d3.geom.voronoi\n\n            var epsilon = 1e-4; // Uses 1e-4 to determine equivalence.\n\n            vertices = vertices.sort(function (a, b) {\n              return a[0] - b[0] || a[1] - b[1];\n            });\n\n            for (var i = 0; i < vertices.length - 1;) {\n              if (Math.abs(vertices[i][0] - vertices[i + 1][0]) < epsilon && Math.abs(vertices[i][1] - vertices[i + 1][1]) < epsilon) {\n                vertices.splice(i + 1, 1);\n              } else {\n                i++;\n              }\n            }\n\n            var voronoi = d3.geom.voronoi(vertices).map(function (d, i) {\n              return {\n                'data': bounds.clip(d),\n                'series': vertices[i][2],\n                'point': vertices[i][3]\n              };\n            });\n            var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n            var vPointPaths = pointPaths.enter().append(\"svg:path\").attr(\"d\", function (d) {\n              if (!d || !d.data || d.data.length === 0) return 'M 0 0';else return \"M\" + d.data.join(\",\") + \"Z\";\n            }).attr(\"id\", function (d, i) {\n              return \"nv-path-\" + i;\n            }).attr(\"clip-path\", function (d, i) {\n              return \"url(#nv-clip-\" + id + \"-\" + i + \")\";\n            }); // good for debugging point hover issues\n\n            if (showVoronoi) {\n              vPointPaths.style(\"fill\", d3.rgb(230, 230, 230)).style('fill-opacity', 0.4).style('stroke-opacity', 1).style(\"stroke\", d3.rgb(200, 200, 200));\n            }\n\n            if (clipVoronoi) {\n              // voronoi sections are already set to clip,\n              // just create the circles with the IDs they expect\n              wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\n              var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n              var vPointClips = pointClips.enter().append(\"svg:clipPath\").attr(\"id\", function (d, i) {\n                return \"nv-clip-\" + id + \"-\" + i;\n              }).append(\"svg:circle\").attr('cx', function (d) {\n                return d[0];\n              }).attr('cy', function (d) {\n                return d[1];\n              }).attr('r', clipRadius);\n            }\n\n            var mouseEventCallback = function mouseEventCallback(el, d, mDispatch) {\n              if (needsUpdate) return 0;\n              var series = data[d.series];\n              if (series === undefined) return;\n              var point = series.values[d.point];\n              point['color'] = color(series, d.series); // standardize attributes for tooltip.\n\n              point['x'] = getX(point);\n              point['y'] = getY(point); // can't just get box of event node since it's actually a voronoi polygon\n\n              var box = container.node().getBoundingClientRect();\n              var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n              var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n              var pos = {\n                left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n              };\n              mDispatch({\n                point: point,\n                series: series,\n                pos: pos,\n                relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: d.point,\n                event: d3.event,\n                element: el\n              });\n            };\n\n            pointPaths.on('click', function (d) {\n              mouseEventCallback(this, d, dispatch.elementClick);\n            }).on('dblclick', function (d) {\n              mouseEventCallback(this, d, dispatch.elementDblClick);\n            }).on('mouseover', function (d) {\n              mouseEventCallback(this, d, dispatch.elementMouseover);\n            }).on('mouseout', function (d, i) {\n              mouseEventCallback(this, d, dispatch.elementMouseout);\n            });\n          } else {\n            // add event handlers to points instead voronoi paths\n            wrap.select('.nv-groups').selectAll('.nv-group').selectAll('.nv-point') //.data(dataWithPoints)\n            //.style('pointer-events', 'auto') // recativate events, disabled by css\n            .on('click', function (d, i) {\n              //nv.log('test', d, i);\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              var element = this;\n              dispatch.elementClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                event: d3.event,\n                element: element\n              });\n            }).on('dblclick', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementDblClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i\n              });\n            }).on('mouseover', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseover({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            }).on('mouseout', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseout({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            });\n          }\n        }\n\n        needsUpdate = true;\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('nv-noninteractive', !interactive).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'scatter: groups').style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.pointBorderColor || pointBorderColor || color(d, i);\n        }).style('stroke-opacity', 1).style('fill-opacity', .5); // create the points, maintaining their IDs from the original data set\n\n        var points = groups.selectAll('path.nv-point').data(function (d) {\n          return d.values.map(function (point, pointIndex) {\n            return [point, pointIndex];\n          }).filter(function (pointArray, pointIndex) {\n            return pointActive(pointArray[0], pointIndex);\n          });\n        });\n        points.enter().append('path').attr('class', function (d) {\n          return 'nv-point nv-point-' + d[1];\n        }).style('fill', function (d) {\n          return d.color;\n        }).style('stroke', function (d) {\n          return d.color;\n        }).attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n        }).attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        }));\n        points.exit().each(delCache).remove();\n        groups.exit().selectAll('path.nv-point').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }).remove(); //============================================================\n        // Point Update Optimisation Notes\n        //------------------------------------------------------------\n        // The following update selections are filtered with getDiffs\n        // (defined at the top of this file) this brings a performance\n        // benefit for charts with large data sets that accumulate a\n        // subset of changes or additions over time.\n        //\n        // Uneccesary and expensive DOM calls are avoided by culling\n        // unchanged points from the selection in exchange for the\n        // cheaper overhead of caching and diffing each point first.\n        //\n        // Due to the way D3 and NVD3 work, other global changes need\n        // to be considered in addition to local point properties.\n        // This is a potential source of bugs (if any of the global\n        // changes that possibly affect points are missed).\n        // Update Point Positions [x, y]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'x', getX, 'y', getY) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }); // Update Point Appearance [shape, size]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'shape', getShape, 'size', getSize) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        })); // add label a label to scatter chart\n\n        if (showLabels) {\n          var titles = groups.selectAll('.nv-label').data(function (d) {\n            return d.values.map(function (point, pointIndex) {\n              return [point, pointIndex];\n            }).filter(function (pointArray, pointIndex) {\n              return pointActive(pointArray[0], pointIndex);\n            });\n          });\n          titles.enter().append('text').style('fill', function (d, i) {\n            return d.color;\n          }).style('stroke-opacity', 0).style('fill-opacity', 1).attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n          }).text(function (d, i) {\n            return d[0].label;\n          });\n          titles.exit().remove();\n          groups.exit().selectAll('path.nv-label').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          }).remove();\n          titles.each(function (d) {\n            d3.select(this).classed('nv-label', true).classed('nv-label-' + d[1], false).classed('hover', false);\n          });\n          titles.watchTransition(renderWatch, 'scatter labels').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          });\n        } // Delay updating the invisible interactive layer for smoother animation\n\n\n        if (interactiveUpdateDelay) {\n          clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\n          timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay);\n        } else {\n          updateInteractiveLayer();\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy();\n        z0 = z.copy();\n        width0 = width;\n        height0 = height;\n      });\n      renderWatch.renderEnd('scatter immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart); // utility function calls provided by this chart\n\n    chart._calls = new function () {\n      this.clearHighlights = function () {\n        nv.dom.write(function () {\n          container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n        });\n        return null;\n      };\n\n      this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n        nv.dom.write(function () {\n          container.select('.nv-groups').selectAll(\".nv-series-\" + seriesIndex).selectAll(\".nv-point-\" + pointIndex).classed(\"hover\", isHoverOver);\n        });\n      };\n    }(); // trigger calls from events too\n\n    dispatch.on('elementMouseover.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, true);\n    });\n    dispatch.on('elementMouseout.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, false);\n    });\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      pointScale: {\n        get: function get() {\n          return z;\n        },\n        set: function set(_) {\n          z = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      pointDomain: {\n        get: function get() {\n          return sizeDomain;\n        },\n        set: function set(_) {\n          sizeDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      pointRange: {\n        get: function get() {\n          return sizeRange;\n        },\n        set: function set(_) {\n          sizeRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      forcePoint: {\n        get: function get() {\n          return forceSize;\n        },\n        set: function set(_) {\n          forceSize = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      pointActive: {\n        get: function get() {\n          return pointActive;\n        },\n        set: function set(_) {\n          pointActive = _;\n        }\n      },\n      padDataOuter: {\n        get: function get() {\n          return padDataOuter;\n        },\n        set: function set(_) {\n          padDataOuter = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      clipVoronoi: {\n        get: function get() {\n          return clipVoronoi;\n        },\n        set: function set(_) {\n          clipVoronoi = _;\n        }\n      },\n      clipRadius: {\n        get: function get() {\n          return clipRadius;\n        },\n        set: function set(_) {\n          clipRadius = _;\n        }\n      },\n      showVoronoi: {\n        get: function get() {\n          return showVoronoi;\n        },\n        set: function set(_) {\n          showVoronoi = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactiveUpdateDelay: {\n        get: function get() {\n          return interactiveUpdateDelay;\n        },\n        set: function set(_) {\n          interactiveUpdateDelay = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      pointBorderColor: {\n        get: function get() {\n          return pointBorderColor;\n        },\n        set: function set(_) {\n          pointBorderColor = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      pointSize: {\n        get: function get() {\n          return getSize;\n        },\n        set: function set(_) {\n          getSize = d3.functor(_);\n        }\n      },\n      pointShape: {\n        get: function get() {\n          return getShape;\n        },\n        set: function set(_) {\n          getShape = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n\n          if (useVoronoi === false) {\n            clipVoronoi = false;\n          }\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatterChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        distX = nv.models.distribution(),\n        distY = nv.models.distribution(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 75\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        container = null,\n        color = nv.utils.defaultColor(),\n        x = scatter.xScale(),\n        y = scatter.yScale(),\n        showDistX = false,\n        showDistY = false,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        noData = null,\n        duration = 250,\n        showLabels = false;\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickPadding(10);\n    distX.axis('x');\n    distY.axis('y');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      if (showDistX) renderWatch.models(distX);\n      if (showDistY) renderWatch.models(distY);\n      selection.each(function (data) {\n        var that = this;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          renderWatch.renderEnd('scatter immediate');\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = scatter.xScale();\n        y = scatter.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g'); // background for pointer events\n\n        gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n        gEnter.append('g').attr('class', 'nv-distWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Legend\n\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = availableWidth;\n          legend.width(legendWidth);\n          wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0' + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          d.color = d.color || color(d, i);\n          return d.color;\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        })).showLabels(showLabels);\n        wrap.select('.nv-scatterWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })).call(scatter);\n        wrap.select('.nv-regressionLinesWrap').attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n        var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines').data(function (d) {\n          return d;\n        });\n        regWrap.enter().append('g').attr('class', 'nv-regLines');\n        var regLine = regWrap.selectAll('.nv-regLine').data(function (d) {\n          return [d];\n        });\n        regLine.enter().append('line').attr('class', 'nv-regLine').style('stroke-opacity', 0); // don't add lines unless we have slope and intercept to use\n\n        regLine.filter(function (d) {\n          return d.intercept && d.slope;\n        }).watchTransition(renderWatch, 'scatterPlusLineChart: regline').attr('x1', x.range()[0]).attr('x2', x.range()[1]).attr('y1', function (d, i) {\n          return y(x.domain()[0] * d.slope + d.intercept);\n        }).attr('y2', function (d, i) {\n          return y(x.domain()[1] * d.slope + d.intercept);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j);\n        }).style('stroke-opacity', function (d, i) {\n          return d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined' ? 0 : 1;\n        }); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Setup Distribution\n\n\n        if (showDistX) {\n          distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionX');\n          g.select('.nv-distributionX').attr('transform', 'translate(0,' + y.range()[0] + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distX);\n        }\n\n        if (showDistY) {\n          distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionY');\n          g.select('.nv-distributionY').attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size()) + ',0)').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distY);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\n        scatter.dispatch.on('elementMouseout.tooltip', function (evt) {\n          tooltip.hidden(true);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', 0);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', distY.size());\n        });\n        scatter.dispatch.on('elementMouseover.tooltip', function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.relativePos[1] - availableHeight);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.relativePos[0] + distX.size());\n          tooltip.data(evt).hidden(false);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('scatter with line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      container: {\n        get: function get() {\n          return container;\n        },\n        set: function set(_) {\n          container = _;\n        }\n      },\n      showDistX: {\n        get: function get() {\n          return showDistX;\n        },\n        set: function set(_) {\n          showDistX = _;\n        }\n      },\n      showDistY: {\n        get: function get() {\n          return showDistY;\n        },\n        set: function set(_) {\n          showDistY = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          distX.color(color);\n          distY.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparkline = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        animate = true,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.getColor(['#000']),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        showMinMaxPoints = true,\n        showCurrentPoint = true,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data, getX)).range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data, getY)).range(yRange || [availableHeight, 0]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var paths = wrap.selectAll('path').data(function (d) {\n          return [d];\n        });\n        paths.enter().append('path');\n        paths.exit().remove();\n        paths.style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).attr('d', d3.svg.line().x(function (d, i) {\n          return x(getX(d, i));\n        }).y(function (d, i) {\n          return y(getY(d, i));\n        })); // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\n        var points = wrap.selectAll('circle.nv-point').data(function (data) {\n          var yValues = data.map(function (d, i) {\n            return getY(d, i);\n          });\n\n          function pointIndex(index) {\n            if (index != -1) {\n              var result = data[index];\n              result.pointIndex = index;\n              return result;\n            } else {\n              return null;\n            }\n          }\n\n          var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n              minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n              currentPoint = pointIndex(yValues.length - 1);\n          return [showMinMaxPoints ? minPoint : null, showMinMaxPoints ? maxPoint : null, showCurrentPoint ? currentPoint : null].filter(function (d) {\n            return d != null;\n          });\n        });\n        points.enter().append('circle');\n        points.exit().remove();\n        points.attr('cx', function (d, i) {\n          return x(getX(d, d.pointIndex));\n        }).attr('cy', function (d, i) {\n          return y(getY(d, d.pointIndex));\n        }).attr('r', 2).attr('class', function (d, i) {\n          return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' : getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue';\n        });\n      });\n      renderWatch.renderEnd('sparkline immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      animate: {\n        get: function get() {\n          return animate;\n        },\n        set: function set(_) {\n          animate = _;\n        }\n      },\n      showMinMaxPoints: {\n        get: function get() {\n          return showMinMaxPoints;\n        },\n        set: function set(_) {\n          showMinMaxPoints = _;\n        }\n      },\n      showCurrentPoint: {\n        get: function get() {\n          return showCurrentPoint;\n        },\n        set: function set(_) {\n          showCurrentPoint = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparklinePlus = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n    var margin = {\n      top: 15,\n      right: 100,\n      bottom: 10,\n      left: 50\n    },\n        width = null,\n        height = null,\n        x,\n        y,\n        index = [],\n        paused = false,\n        xTickFormat = d3.format(',r'),\n        yTickFormat = d3.format(',.2f'),\n        showLastValue = true,\n        alignValue = true,\n        rightAlignValue = false,\n        noData = null,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sparkline);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var currentValue = sparkline.y()(data[data.length - 1], data.length - 1); // Setup Scales\n\n        x = sparkline.xScale();\n        y = sparkline.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-sparklineWrap');\n        gEnter.append('g').attr('class', 'nv-valueWrap');\n        gEnter.append('g').attr('class', 'nv-hoverArea');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        var sparklineWrap = g.select('.nv-sparklineWrap');\n        sparkline.width(availableWidth).height(availableHeight);\n        sparklineWrap.call(sparkline);\n\n        if (showLastValue) {\n          var valueWrap = g.select('.nv-valueWrap');\n          var value = valueWrap.selectAll('.nv-currentValue').data([currentValue]);\n          value.enter().append('text').attr('class', 'nv-currentValue').attr('dx', rightAlignValue ? -8 : 8).attr('dy', '.9em').style('text-anchor', rightAlignValue ? 'end' : 'start');\n          value.attr('x', availableWidth + (rightAlignValue ? margin.right : 0)).attr('y', alignValue ? function (d) {\n            return y(d);\n          } : 0).style('fill', sparkline.color()(data[data.length - 1], data.length - 1)).text(yTickFormat(currentValue));\n        }\n\n        gEnter.select('.nv-hoverArea').append('rect').on('mousemove', sparklineHover).on('click', function () {\n          paused = !paused;\n        }).on('mouseout', function () {\n          index = [];\n          updateValueLine();\n        });\n        g.select('.nv-hoverArea rect').attr('transform', function (d) {\n          return 'translate(' + -margin.left + ',' + -margin.top + ')';\n        }).attr('width', availableWidth + margin.left + margin.right).attr('height', availableHeight + margin.top); //index is currently global (within the chart), may or may not keep it that way\n\n        function updateValueLine() {\n          if (paused) return;\n          var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n          var hoverEnter = hoverValue.enter().append('g').attr('class', 'nv-hoverValue').style('stroke-opacity', 0).style('fill-opacity', 0);\n          hoverValue.exit().transition().duration(250).style('stroke-opacity', 0).style('fill-opacity', 0).remove();\n          hoverValue.attr('transform', function (d) {\n            return 'translate(' + x(sparkline.x()(data[d], d)) + ',0)';\n          }).transition().duration(250).style('stroke-opacity', 1).style('fill-opacity', 1);\n          if (!index.length) return;\n          hoverEnter.append('line').attr('x1', 0).attr('y1', -margin.top).attr('x2', 0).attr('y2', availableHeight);\n          hoverEnter.append('text').attr('class', 'nv-xValue').attr('x', -6).attr('y', -margin.top).attr('text-anchor', 'end').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-xValue').text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n          hoverEnter.append('text').attr('class', 'nv-yValue').attr('x', 6).attr('y', -margin.top).attr('text-anchor', 'start').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-yValue').text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n        }\n\n        function sparklineHover() {\n          if (paused) return;\n          var pos = d3.mouse(this)[0] - margin.left;\n\n          function getClosestIndex(data, x) {\n            var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n            var closestIndex = 0;\n\n            for (var i = 0; i < data.length; i++) {\n              if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                distance = Math.abs(sparkline.x()(data[i], i) - x);\n                closestIndex = i;\n              }\n            }\n\n            return closestIndex;\n          }\n\n          index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n          updateValueLine();\n        }\n      });\n      renderWatch.renderEnd('sparklinePlus immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xTickFormat;\n        },\n        set: function set(_) {\n          xTickFormat = _;\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yTickFormat;\n        },\n        set: function set(_) {\n          yTickFormat = _;\n        }\n      },\n      showLastValue: {\n        get: function get() {\n          return showLastValue;\n        },\n        set: function set(_) {\n          showLastValue = _;\n        }\n      },\n      alignValue: {\n        get: function get() {\n          return alignValue;\n        },\n        set: function set(_) {\n          alignValue = _;\n        }\n      },\n      rightAlignValue: {\n        get: function get() {\n          return rightAlignValue;\n        },\n        set: function set(_) {\n          rightAlignValue = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedArea = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        color = nv.utils.defaultColor() // a function that computes the color\n    ,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        style = 'stack',\n        offset = 'zero',\n        order = 'default',\n        interpolate = 'linear' // controls the line interpolation\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        scatter = nv.models.scatter(),\n        duration = 250,\n        dispatch = d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout', 'renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout');\n\n    scatter.pointSize(2.2) // default size\n    .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        var dataRaw = data; // Injecting point index into each point because d3.layout.stack().out does not give index\n\n        data.forEach(function (aseries, i) {\n          aseries.seriesIndex = i;\n          aseries.values = aseries.values.map(function (d, j) {\n            d.index = j;\n            d.seriesIndex = i;\n            return d;\n          });\n        });\n        var dataFiltered = data.filter(function (series) {\n          return !series.disabled;\n        });\n        data = d3.layout.stack().order(order).offset(offset).values(function (d) {\n          return d.values;\n        }) //TODO: make values customizeable in EVERY model in this fashion\n        .x(getX).y(getY).out(function (d, y0, y) {\n          d.display = {\n            y: y,\n            y0: y0\n          };\n        })(dataFiltered); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-areaWrap');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // If the user has not specified forceY, make sure 0 is included in the domain\n        // Otherwise, use user-specified values for forceY\n\n        if (scatter.forceY().length == 0) {\n          scatter.forceY().push(0);\n        }\n\n        scatter.width(availableWidth).height(availableHeight).x(getX).y(function (d) {\n          if (d.display !== undefined) {\n            return d.display.y + d.display.y0;\n          }\n        }).color(data.map(function (d, i) {\n          d.color = d.color || color(d, d.seriesIndex);\n          return d.color;\n        }));\n        var scatterWrap = g.select('.nv-scatterWrap').datum(data);\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var area = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y + d.display.y0);\n        }).interpolate(interpolate);\n        var zeroArea = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y0);\n        });\n        var path = g.select('.nv-areaWrap').selectAll('path.nv-area').data(function (d) {\n          return d;\n        });\n        path.enter().append('path').attr('class', function (d, i) {\n          return 'nv-area nv-area-' + i;\n        }).attr('d', function (d, i) {\n          return zeroArea(d.values, d.seriesIndex);\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.areaMouseover({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaMouseout({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('click', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaClick({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        });\n        path.exit().remove();\n        path.style('fill', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        });\n        path.watchTransition(renderWatch, 'stackedArea path').attr('d', function (d, i) {\n          return area(d.values, i);\n        }); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        scatter.dispatch.on('elementMouseover.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n        });\n        scatter.dispatch.on('elementMouseout.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n        }); //Special offset functions\n\n        chart.d3_stackedOffset_stackPercent = function (stackData) {\n          var n = stackData.length,\n              //How many series\n          m = stackData[0].length,\n              //how many points per series\n          i,\n              j,\n              o,\n              y0 = [];\n\n          for (j = 0; j < m; ++j) {\n            //Looping through all points\n            for (i = 0, o = 0; i < dataRaw.length; i++) {\n              //looping through all series\n              o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n            }\n\n            if (o) for (i = 0; i < n; i++) {\n              //(total y value of all series at point in time i) != 0\n              stackData[i][j][1] /= o;\n            } else {\n              //(total y value of all series at point in time i) == 0\n              for (i = 0; i < n; i++) {\n                stackData[i][j][1] = 0;\n              }\n            }\n          }\n\n          for (j = 0; j < m; ++j) {\n            y0[j] = 0;\n          }\n\n          return y0;\n        };\n      });\n      renderWatch.renderEnd('stackedArea immediate');\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n\n    chart.interpolate = function (_) {\n      if (!arguments.length) return interpolate;\n      interpolate = _;\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      scatter.duration(duration);\n      return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      offset: {\n        get: function get() {\n          return offset;\n        },\n        set: function set(_) {\n          offset = _;\n        }\n      },\n      order: {\n        get: function get() {\n          return order;\n        },\n        set: function set(_) {\n          order = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      style: {\n        get: function get() {\n          return style;\n        },\n        set: function set(_) {\n          style = _;\n\n          switch (style) {\n            case 'stack':\n              chart.offset('zero');\n              chart.order('default');\n              break;\n\n            case 'stream':\n              chart.offset('wiggle');\n              chart.order('inside-out');\n              break;\n\n            case 'stream-center':\n              chart.offset('silhouette');\n              chart.order('inside-out');\n              break;\n\n            case 'expand':\n              chart.offset('expand');\n              chart.order('default');\n              break;\n\n            case 'stack_percent':\n              chart.offset(chart.d3_stackedOffset_stackPercent);\n              chart.order('default');\n              break;\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.stackedArea());\n    var margin = {\n      top: 10,\n      right: 25,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        focusEnable = false,\n        useInteractiveGuideline = false,\n        showTotalInTooltip = true,\n        totalLabel = 'TOTAL',\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = 250,\n        controlOptions = ['Stacked', 'Stream', 'Expanded'],\n        controlLabels = {},\n        duration = 250;\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    });\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          style: stacked.style()\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.style !== undefined) style = state.style;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(stacked);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = stacked.xScale();\n        y = stacked.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-stackedWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive'); // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = showControls && legendPosition === 'top' ? availableWidth - controlWidth : availableWidth;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            // constant from axis.js, plus some margin for better layout\n            var xAxisHeight = (showXAxis ? 12 : 0) + 10;\n            margin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            var legendTop = availableHeight + xAxisHeight;\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + legendTop + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && margin.top != legend.height()) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + (availableWidth - legendWidth) + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.stacked || 'Stacked',\n            metaKey: 'Stacked',\n            disabled: stacked.style() != 'stack',\n            style: 'stack'\n          }, {\n            key: controlLabels.stream || 'Stream',\n            metaKey: 'Stream',\n            disabled: stacked.style() != 'stream',\n            style: 'stream'\n          }, {\n            key: controlLabels.expanded || 'Expanded',\n            metaKey: 'Expanded',\n            disabled: stacked.style() != 'expand',\n            style: 'expand'\n          }, {\n            key: controlLabels.stack_percent || 'Stack %',\n            metaKey: 'Stack_Percent',\n            disabled: stacked.style() != 'stack_percent',\n            style: 'stack_percent'\n          }];\n          controlWidth = controlOptions.length / 3 * 260;\n          controlsData = controlsData.filter(function (d) {\n            return controlOptions.indexOf(d.metaKey) !== -1;\n          });\n          controls.width(controlWidth).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).call(controls);\n          var requiredTop = Math.max(controls.height(), showLegend && legendPosition === 'top' ? legend.height() : 0);\n\n          if (margin.top != requiredTop) {\n            margin.top = requiredTop;\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n          }\n\n          g.select('.nv-controlsWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        stacked.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          var ticks;\n\n          if (stacked.offset() === 'wiggle') {\n            ticks = 0;\n          } else {\n            ticks = nv.utils.calcTicksY(availableHeight / 36, data);\n          }\n\n          yAxis.scale(y)._ticks(ticks).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n              var currentFormat = yAxis.tickFormat();\n              if (!oldYTickFormat || currentFormat !== percentFormatter) oldYTickFormat = currentFormat; //Forces the yAxis to use percentage in 'expand' mode.\n\n              yAxis.tickFormat(percentFormatter);\n            } else {\n              if (oldYTickFormat) {\n                yAxis.tickFormat(oldYTickFormat);\n                oldYTickFormat = null;\n              }\n            }\n\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(0).call(yAxis);\n          }\n        } //============================================================\n        // Update Focus\n        //============================================================\n\n\n        if (!focusEnable) {\n          stackedWrap.transition().call(stacked);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        stacked.dispatch.on('areaClick.toggle', function (e) {\n          if (data.filter(function (d) {\n            return !d.disabled;\n          }).length === 1) data.forEach(function (d) {\n            d.disabled = false;\n          });else data.forEach(function (d, i) {\n            d.disabled = i != e.seriesIndex;\n          });\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n          stacked.style(d.style);\n          state.style = stacked.style();\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          stacked.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [],\n              valueSum = 0,\n              allNullValues = true,\n              atleastOnePoint = false;\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue != null && pointYValue > 0) {\n              stacked.highlightPoint(i, pointIndex, true);\n              atleastOnePoint = true;\n            } // Draw at least one point if all values are zero.\n\n\n            if (i === data.length - 1 && !atleastOnePoint) {\n              stacked.highlightPoint(i, pointIndex, true);\n            }\n\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\n            var tooltipValue = stacked.style() == 'expand' ? point.display.y : chart.y()(point, pointIndex);\n            allData.push({\n              key: series.key,\n              value: tooltipValue,\n              color: color(series, series.seriesIndex),\n              point: point\n            });\n\n            if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n              valueSum += tooltipValue;\n              allNullValues = false;\n            }\n\n            ;\n          });\n          allData.reverse(); //Highlight the tooltip entry based on which stack the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var yDistMax = Infinity,\n                indexToHighlight = null;\n            allData.forEach(function (series, i) {\n              //To handle situation where the stacked area chart is negative, we need to use absolute values\n              //when checking if the mouse Y value is within the stack area.\n              yValue = Math.abs(yValue);\n              var stackedY0 = Math.abs(series.point.display.y0);\n              var stackedY = Math.abs(series.point.display.y);\n\n              if (yValue >= stackedY0 && yValue <= stackedY + stackedY0) {\n                indexToHighlight = i;\n                return;\n              }\n            });\n            if (indexToHighlight != null) allData[indexToHighlight].highlight = true;\n          } //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\n\n          if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n            allData.push({\n              key: totalLabel,\n              value: valueSum,\n              total: true\n            });\n          }\n\n          var xValue = chart.x()(singlePoint, pointIndex);\n          var valueFormatter = interactiveLayer.tooltip.valueFormatter(); // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\n          if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n            if (!oldValueFormatter) {\n              oldValueFormatter = valueFormatter;\n            } //Forces the tooltip to use percentage in 'expand' mode.\n\n\n            valueFormatter = d3.format(\".1%\");\n          } else {\n            if (oldValueFormatter) {\n              valueFormatter = oldValueFormatter;\n              oldValueFormatter = null;\n            }\n          }\n\n          interactiveLayer.tooltip.valueFormatter(valueFormatter).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          stacked.clearHighlights();\n        });\n        /* Update `main' graph on brush update. */\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.style !== 'undefined') {\n            stacked.style(e.style);\n            style = e.style;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return stacked.x()(d, i) >= extent[0] && stacked.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          stackedWrap.transition().duration(duration).call(stacked); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('stacked Area chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    stacked.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.point['x'] = stacked.x()(evt.point);\n      evt.point['y'] = stacked.y()(evt.point);\n      tooltip.data(evt).hidden(false);\n    });\n    stacked.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      controlOptions: {\n        get: function get() {\n          return controlOptions;\n        },\n        set: function set(_) {\n          controlOptions = _;\n        }\n      },\n      showTotalInTooltip: {\n        get: function get() {\n          return showTotalInTooltip;\n        },\n        set: function set(_) {\n          showTotalInTooltip = _;\n        }\n      },\n      totalLabel: {\n        get: function get() {\n          return totalLabel;\n        },\n        set: function set(_) {\n          totalLabel = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          focus.margin.top = _.top !== undefined ? _.top : focus.margin.top;\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          stacked.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          stacked.color(color);\n          focus.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return stacked.x();\n        },\n        set: function set(_) {\n          stacked.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return stacked.y();\n        },\n        set: function set(_) {\n          stacked.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = !!_;\n          chart.interactive(!_);\n          chart.useVoronoi(!_);\n          stacked.scatter.interactive(!_);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaWithFocusChart = function () {\n    return nv.models.stackedAreaChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  }; // based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\n\n  nv.models.sunburst = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 600,\n        height = 600,\n        mode = \"count\",\n        modes = {\n      count: function count(d) {\n        return 1;\n      },\n      value: function value(d) {\n        return d.value || d.size;\n      },\n      size: function size(d) {\n        return d.value || d.size;\n      }\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        showLabels = false,\n        labelFormat = function labelFormat(d) {\n      if (mode === 'count') {\n        return d.name + ' #' + d.value;\n      } else {\n        return d.name + ' ' + (d.value || d.size);\n      }\n    },\n        labelThreshold = 0.02,\n        sort = function sort(d1, d2) {\n      return d1.name > d2.name;\n    },\n        key = function key(d, i) {\n      if (d.parent !== undefined) {\n        return d.name + '-' + d.parent.name + '-' + i;\n      } else {\n        return d.name;\n      }\n    },\n        groupColorByParent = true,\n        duration = 500,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd'); //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n    var partition = d3.layout.partition().sort(sort);\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n    var arc = d3.svg.arc().startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n    }).endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n    }).innerRadius(function (d) {\n      return Math.max(0, y(d.y));\n    }).outerRadius(function (d) {\n      return Math.max(0, y(d.y + d.dy));\n    });\n\n    function rotationToAvoidUpsideDown(d) {\n      var centerAngle = computeCenterAngle(d);\n\n      if (centerAngle > 90) {\n        return 180;\n      } else {\n        return 0;\n      }\n    }\n\n    function computeCenterAngle(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var centerAngle = (startAngle + endAngle) / 2 * (180 / Math.PI) - 90;\n      return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var size = endAngle - startAngle;\n      return size > labelThreshold;\n    } // When zooming: interpolate the scales.\n\n\n    function arcTweenZoom(e, i) {\n      var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n          yd = d3.interpolate(y.domain(), [node.y, 1]),\n          yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n      if (i === 0) {\n        return function () {\n          return arc(e);\n        };\n      } else {\n        return function (t) {\n          x.domain(xd(t));\n          y.domain(yd(t)).range(yr(t));\n          return arc(e);\n        };\n      }\n\n      ;\n    }\n\n    function arcTweenUpdate(d) {\n      var ipo = d3.interpolate({\n        x: d.x0,\n        dx: d.dx0,\n        y: d.y0,\n        dy: d.dy0\n      }, d);\n      return function (t) {\n        var b = ipo(t);\n        d.x0 = b.x;\n        d.dx0 = b.dx;\n        d.y0 = b.y;\n        d.dy0 = b.dy;\n        return arc(b);\n      };\n    }\n\n    function updatePrevPosition(node) {\n      var k = key(node);\n      if (!prevPositions[k]) prevPositions[k] = {};\n      var pP = prevPositions[k];\n      pP.dx = node.dx;\n      pP.x = node.x;\n      pP.dy = node.dy;\n      pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n      nodes.forEach(function (n) {\n        var k = key(n);\n        var pP = prevPositions[k]; //console.log(k,n,pP);\n\n        if (pP) {\n          n.dx0 = pP.dx;\n          n.x0 = pP.x;\n          n.dy0 = pP.dy;\n          n.y0 = pP.y;\n        } else {\n          n.dx0 = n.dx;\n          n.x0 = n.x;\n          n.dy0 = n.dy;\n          n.y0 = n.y;\n        }\n\n        updatePrevPosition(n);\n      });\n    }\n\n    function zoomClick(d) {\n      var labels = container.selectAll('text');\n      var path = container.selectAll('path'); // fade out all text elements\n\n      labels.transition().attr(\"opacity\", 0); // to allow reference to the new center node\n\n      node = d;\n      path.transition().duration(duration).attrTween(\"d\", arcTweenZoom).each('end', function (e) {\n        // partially taken from here: http://bl.ocks.org/metmajer/5480307\n        // check if the animated element's data e lies within the visible angle span given in d\n        if (e.x >= d.x && e.x < d.x + d.dx) {\n          if (e.depth >= d.depth) {\n            // get a selection of the associated text element\n            var parentNode = d3.select(this.parentNode);\n            var arcText = parentNode.select('text'); // fade in the text element and recalculate positions\n\n            arcText.transition().duration(duration).text(function (e) {\n              return labelFormat(e);\n            }).attr(\"opacity\", function (d) {\n              if (labelThresholdMatched(d)) {\n                return 1;\n              } else {\n                return 0;\n              }\n            }).attr(\"transform\", function () {\n              var width = this.getBBox().width;\n              if (e.depth === 0) return \"translate(\" + width / 2 * -1 + \",0)\";else if (e.depth === d.depth) {\n                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n              } else {\n                var centerAngle = computeCenterAngle(e);\n                var rotation = rotationToAvoidUpsideDown(e);\n\n                if (rotation === 0) {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + 5) + ',0)';\n                } else {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                }\n              }\n            });\n          }\n        }\n      });\n    } //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        radius = Math.min(availableWidth, availableHeight) / 2;\n        y.range([0, radius]); // Setup containers and skeleton of chart\n\n        var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\n        if (!wrap[0][0]) {\n          wrap = container.append('g').attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id).attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        } else {\n          wrap.attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        }\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        partition.value(modes[mode] || modes[\"count\"]); //reverse the drawing order so that the labels of inner\n        //arcs are drawn on top of the outer arcs.\n\n        var nodes = partition.nodes(data[0]).reverse();\n        storeRetrievePrevPositions(nodes);\n        var cG = wrap.selectAll('.arc-container').data(nodes, key); //handle new datapoints\n\n        var cGE = cG.enter().append(\"g\").attr(\"class\", 'arc-container');\n        cGE.append(\"path\").attr(\"d\", arc).style(\"fill\", function (d) {\n          if (d.color) {\n            return d.color;\n          } else if (groupColorByParent) {\n            return color((d.children ? d : d.parent).name);\n          } else {\n            return color(d.name);\n          }\n        }).style(\"stroke\", \"#FFF\").on(\"click\", function (d, i) {\n          zoomClick(d);\n          dispatch.elementClick({\n            data: d,\n            index: i\n          });\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true).style('opacity', 0.8);\n          dispatch.elementMouseover({\n            data: d,\n            color: d3.select(this).style(\"fill\"),\n            percent: computeNodePercentage(d)\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false).style('opacity', 1);\n          dispatch.elementMouseout({\n            data: d\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d\n          });\n        }); ///Iterating via each and selecting based on the this\n        ///makes it work ... a cG.selectAll('path') doesn't.\n        ///Without iteration the data (in the element) didn't update.\n\n        cG.each(function (d) {\n          d3.select(this).select('path').transition().duration(duration).attrTween('d', arcTweenUpdate);\n        });\n\n        if (showLabels) {\n          //remove labels first and add them back\n          cG.selectAll('text').remove(); //this way labels are on top of newly added arcs\n\n          cG.append('text').text(function (e) {\n            return labelFormat(e);\n          }).transition().duration(duration).attr(\"opacity\", function (d) {\n            if (labelThresholdMatched(d)) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }).attr(\"transform\", function (d) {\n            var width = this.getBBox().width;\n\n            if (d.depth === 0) {\n              return \"rotate(0)translate(\" + width / 2 * -1 + \",0)\";\n            } else {\n              var centerAngle = computeCenterAngle(d);\n              var rotation = rotationToAvoidUpsideDown(d);\n\n              if (rotation === 0) {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + 5) + ',0)';\n              } else {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n              }\n            }\n          });\n        } //zoom out to the center when the data is updated.\n\n\n        zoomClick(nodes[nodes.length - 1]); //remove unmatched elements ...\n\n        cG.exit().transition().duration(duration).attr('opacity', 0).each('end', function (d) {\n          var k = key(d);\n          prevPositions[k] = undefined;\n        }).remove();\n      });\n      renderWatch.renderEnd('sunburst immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(_) {\n          mode = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      groupColorByParent: {\n        get: function get() {\n          return groupColorByParent;\n        },\n        set: function set(_) {\n          groupColorByParent = !!_;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = !!_;\n        }\n      },\n      labelFormat: {\n        get: function get() {\n          return labelFormat;\n        },\n        set: function set(_) {\n          labelFormat = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      sort: {\n        get: function get() {\n          return sort;\n        },\n        set: function set(_) {\n          sort = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return key;\n        },\n        set: function set(_) {\n          key = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sunburstChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showTooltipPercent = false,\n        id = Math.round(Math.random() * 100000),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d) {\n      return d;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sunburst);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin);\n        var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = container; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        sunburst.width(availableWidth).height(availableHeight).margin(margin);\n        container.call(sunburst);\n      });\n      renderWatch.renderEnd('sunburstChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.series = {\n        key: evt.data.name,\n        value: evt.data.value || evt.data.size,\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    sunburst.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    sunburst.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          sunburst.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          sunburst.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n          sunburst.margin(margin);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.version = \"1.8.6\";\n})();","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\n\nvar Col =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Col, _React$Component);\n\n  function Col() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Col.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\"]);\n\n    var spans = [];\n    var classes = [];\n    DEVICE_SIZES.forEach(function (brkPoint) {\n      var propValue = props[brkPoint];\n      delete props[brkPoint];\n      var span, offset, order;\n\n      if (propValue != null && typeof propValue === 'object') {\n        var _propValue$span = propValue.span;\n        span = _propValue$span === void 0 ? true : _propValue$span;\n        offset = propValue.offset;\n        order = propValue.order;\n      } else {\n        span = propValue;\n      }\n\n      var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n      if (span != null) spans.push(span === true ? \"\" + bsPrefix + infix : \"\" + bsPrefix + infix + \"-\" + span);\n      if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n      if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n    });\n\n    if (!spans.length) {\n      spans.push(bsPrefix); // plain 'col'\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames.apply(void 0, [className].concat(spans, classes))\n    }));\n  };\n\n  return Col;\n}(React.Component);\n\nCol.defaultProps = {\n  as: 'div'\n};\nexport default createBootstrapComponent(Col, 'col');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar CardImg =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CardImg, _React$Component);\n\n  function CardImg() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = CardImg.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        variant = _this$props.variant,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n    var baseClass = variant ? bsPrefix + \"-\" + variant : bsPrefix;\n    return React.createElement(Component, _extends({\n      className: classNames(baseClass, className)\n    }, props));\n  };\n\n  return CardImg;\n}(React.Component);\n\nCardImg.defaultProps = {\n  as: 'img',\n  variant: null\n};\nexport default createBootstrapComponent(CardImg, 'card-img');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport divWithClassName from './utils/divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar CardBody = createWithBsPrefix('card-body');\n\nvar Card =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Card, _React$Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {};\n    return _this;\n  }\n\n  Card.getDerivedStateFromProps = function getDerivedStateFromProps(_ref) {\n    var bsPrefix = _ref.bsPrefix;\n    return {\n      cardContext: {\n        cardHeaderBsPrefix: bsPrefix + \"-header\"\n      }\n    };\n  };\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        bg = _this$props.bg,\n        text = _this$props.text,\n        border = _this$props.border,\n        body = _this$props.body,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\", \"bg\", \"text\", \"border\", \"body\", \"children\"]);\n\n    var classes = classNames(className, bsPrefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border);\n    return React.createElement(CardContext.Provider, {\n      value: this.state.cardContext\n    }, React.createElement(Component, _extends({\n      className: classes\n    }, props), body ? React.createElement(CardBody, null, children) : children));\n  };\n\n  return Card;\n}(React.Component);\n\nCard.defaultProps = {\n  as: 'div',\n  body: false\n};\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar DecoratedCard = createBootstrapComponent(Card, 'card');\nDecoratedCard.Img = CardImg;\nDecoratedCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nDecoratedCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nDecoratedCard.Body = CardBody;\nDecoratedCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nDecoratedCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nDecoratedCard.Header = createWithBsPrefix('card-header');\nDecoratedCard.Footer = createWithBsPrefix('card-footer');\nDecoratedCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default DecoratedCard;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Row, _React$Component);\n\n  function Row() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Row.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        noGutters = _this$props.noGutters,\n        Component = _this$props.as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix, noGutters && 'no-gutters')\n    }));\n  };\n\n  return Row;\n}(React.Component);\n\nRow.defaultProps = {\n  as: 'div',\n  noGutters: false\n};\nexport default createBootstrapComponent(Row, 'row');"],"sourceRoot":""}