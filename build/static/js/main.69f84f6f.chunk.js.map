{"version":3,"sources":["config.js","App/layout/Loader/index.js","hoc/_Aux/index.js","firebase.js","MyApp/auth/auth.js","store/actions.js","App/layout/ScrollToTop/index.js","route.js","App/index.js","serviceWorker.js","store/reducer.js","index.js"],"names":["__webpack_exports__","defaultPath","basename","layout","preLayout","collapseMenu","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","loader","a","createElement","className","Aux","props","children","firebase_app__WEBPACK_IMPORTED_MODULE_0__","firebase_app__WEBPACK_IMPORTED_MODULE_0___default","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","console","log","AuthContext","React","createContext","AuthProvider","_ref","_useState","useState","_useState2","Object","C_MyData_FireBaseGoogle_mybestschool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","currentUser","setCurrentUser","_useState3","_useState4","loading","setLoading","useEffect","auth","onAuthStateChanged","user","react__WEBPACK_IMPORTED_MODULE_1___default","style","display","alignItems","justifyContent","height","Provider","value","d","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","ScrollToTop","prevProps","this","location","window","scrollTo","Component","withRouter","route","path","exact","name","component","lazy","Promise","all","e","then","bind","AdminLayout","Loadable","Loader","App","menu","routes","map","index","react_default","Route","key","render","_Aux","layout_ScrollToTop","react","fallback","Switch","Boolean","hostname","match","initialState","objectSpread","isOpen","isTrigger","config","isFullScreen","reducer","state","arguments","length","undefined","action","trigger","open","type","actionTypes","triggerIndex","indexOf","id","filter","item","concat","toConsumableArray","store","createStore","app","es","BrowserRouter","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69f84f6f.chunk.js","sourcesContent":["export default {\n    defaultPath: '/auth/login',\n    basename: '/default', // only at build time to set, like /datta-able\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\n    preLayout: null, // (not available in lite version)\n    collapseMenu: false, // mini-menu\n    layoutType: 'menu-light', // menu-dark, (menu-light, dark are not available in lite version)\n    navIconColor: false,\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\n    navBackImage: false, // not available in lite version\n    rtlLayout: false, // not available in lite version\n    navFixedLayout: true,\n    headerFixedLayout: false, // not available in lite version\n    boxLayout: false,\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\n    navListTitleHide: false, // not available in lite version\n    configBlock: false, // not available in lite version\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\n    layout6BackSize : '', // used only for pre-layout = layout-6\n};\n","import React from 'react';\n\nconst loader = () => {\n    return (\n        <div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default loader;","const Aux = (props) => props.children;\n\nexport default Aux;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n \nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_MESSAGING_APP_ID,\n  measurementId: process.env.REACT_APP_measurementId,\n};\n\nfirebase.initializeApp(firebaseConfig);\nconsole.log(firebase);\nexport default firebase;\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"../../firebase\";\nimport  { Redirect } from 'react-router-dom';\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user); \n      setLoading(false);\n\n    });\n    console.log(currentUser);\n     \n  }, []);\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"80vh\",\n        }}\n      >\n        <h1>Loading User...</h1>\n      </div>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","export const COLLAPSE_MENU = 'COLLAPSE_MENU';\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\nexport const FULL_SCREEN = 'FULL_SCREEN';\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nexport default withRouter(ScrollToTop);","import React from 'react';\n\nconst SignUp1 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp1'));\nconst Signin1 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn1'));\nconst Login = React.lazy(() => import('./MyApp/auth/login'));\nconst Register = React.lazy(() => import('./MyApp/auth/register'));\n\nconst route = [\n    { path: '/auth/signup-1', exact: true, name: 'Signup 1', component: SignUp1 },\n    { path: '/auth/signin-1', exact: true, name: 'Signin 1', component: Signin1 },\n    { path: '/auth/login', exact: true, name: 'Signup 1', component: Login },\n    { path: '/auth/register', exact: true, name: 'Signin 1', component: Register },\n];\n\nexport default route;","import React, { Component, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from './layout/Loader'\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from './layout/ScrollToTop';\nimport routes from \"../route\";\n\nconst AdminLayout = Loadable({\n    loader: () => import('./layout/AdminLayout'),\n    loading: Loader\n});\n\nclass App extends Component {\n    render() {\n        const menu = routes.map((route, index) => {\n          return (route.component) ? (\n              <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                      <route.component {...props} />\n                  )} />\n          ) : (null);\n        });\n\n        return (\n            <Aux>\n                <ScrollToTop>\n                    <Suspense fallback={<Loader/>}>\n                        <Switch> \n                            {menu}\n                            <Route path=\"/\" component={AdminLayout} />\n                          </Switch> \n                    </Suspense>\n                </ScrollToTop>\n            </Aux>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\nimport config from './../config';\n\nconst initialState = {\n    isOpen: [], //for active default menu\n    isTrigger: [], //for active default menu, set blank for horizontal\n    ...config,\n    isFullScreen: false, // static can't change\n};\n\nconst reducer = (state = initialState, action) => {\n    let trigger = [];\n    let open = [];\n\n    switch (action.type) {\n        case actionTypes.COLLAPSE_MENU:\n            return {\n                ...state,\n                collapseMenu: !state.collapseMenu\n            };\n        case actionTypes.COLLAPSE_TOGGLE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n\n                if (triggerIndex === -1) {\n                    open = [...open, action.menu.id];\n                    trigger = [...trigger, action.menu.id];\n                }\n            } else {\n                open = state.isOpen;\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\n            }\n\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger\n            };\n        case actionTypes.NAV_CONTENT_LEAVE:\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger,\n            };\n        case actionTypes.NAV_COLLAPSE_LEAVE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n                return {\n                    ...state,\n                    isOpen: open,\n                    isTrigger: trigger,\n                };\n            }\n            return {...state};\n        case actionTypes.FULL_SCREEN :\n            return {\n                ...state,\n                isFullScreen: !state.isFullScreen\n            };\n        case actionTypes.FULL_SCREEN_EXIT:\n            return {\n                ...state,\n                isFullScreen: false\n            };\n        case actionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layout: action.layout\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport { AuthProvider } from './MyApp/auth/auth';\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport config from './config';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <AuthProvider>\n        <Provider store={store}>\n            <BrowserRouter basename={config.basename}>\n                {/* basename=\"/mybestschool\" */}\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </AuthProvider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}