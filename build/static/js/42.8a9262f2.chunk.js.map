{"version":3,"sources":["Demo/Maps/GoogleMap/index.js"],"names":["polygon","lat","lng","GoogleMap","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","_this","setState","onInfoWindowClose","onMapClicked","this","renderAutoComplete","prevProps","map","e","preventDefault","_this2","_this$props","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","_this3","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_hoc_Aux__WEBPACK_IMPORTED_MODULE_13__","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","xl","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","Header","Title","as","Body","style","height","width","google_maps_react__WEBPACK_IMPORTED_MODULE_12__","centerAroundCurrentLocation","className","zoom","name","onClick","onClose","visible","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","onSubmit","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","Control","ref","type","placeholder","Append","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","Object","assign","center","fillColor","fillOpacity","paths","strokeColor","strokeOpacity","strokeWeight","path","React","Component","GoogleApiWrapper","apiKey"],"mappings":"iOAMMA,EAAU,CACZ,CAAEC,IAAK,WAAYC,IAAK,YACxB,CAAED,IAAK,WAAYC,IAAK,YACxB,CAAED,IAAK,WAAYC,IAAK,aAGtBC,6MAEFC,MAAQ,CACJC,aAAc,GACdC,cAAe,GACfC,mBAAmB,EACnBC,SAAU,QAGdC,cAAgB,SAACC,EAAOC,GAAR,OACZC,EAAKC,SAAS,CACVR,aAAcM,EACdL,cAAeI,EACfH,mBAAmB,OAG3BO,kBAAoB,kBAChBF,EAAKC,SAAS,CACVR,aAAc,KACdE,mBAAmB,OAG3BQ,aAAe,WACPH,EAAKR,MAAMG,mBACXK,EAAKC,SAAS,CACVR,aAAc,KACdE,mBAAmB,wFAK3BS,KAAKC,gEAGUC,GACXF,KAAKN,QAAUQ,EAAUC,KAAKH,KAAKC,sDAGlCG,GACLA,EAAEC,8DAGe,IAAAC,EAAAN,KAAAO,EACOP,KAAKN,MAArBc,EADSD,EACTC,OAAQL,EADCI,EACDJ,IAEhB,GAAKK,GAAWL,EAAhB,CAEA,IAAMM,EAAe,IAAID,EAAOE,KAAKC,OAAOC,aAAaZ,KAAKS,cAC9DA,EAAaI,OAAO,SAAUV,GAE9BM,EAAaK,YAAY,gBAAiB,WACtC,IAAMC,EAAQN,EAAaO,WAEtBD,EAAME,WAEPF,EAAME,SAASC,SAAUf,EAAIgB,UAAUJ,EAAME,SAASC,WAEtDf,EAAIiB,UAAUL,EAAME,SAASI,UAC7BlB,EAAImB,QAAQ,KAGhBhB,EAAKT,SAAS,CAAEL,SAAUuB,EAAME,SAASI,gDAKxC,IAAAE,EAAAvB,KACGR,EAAaQ,KAAKZ,MAAlBI,SAER,OACIgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,GACLN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKC,OAAN,KACIR,EAAAC,EAAAC,cAACK,EAAA,EAAKE,MAAN,CAAYC,GAAG,MAAf,UAEJV,EAAAC,EAAAC,cAACK,EAAA,EAAKI,KAAN,KACIX,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjCd,EAAAC,EAAAC,cAACa,EAAA,IAAD,CACIC,6BAA2B,EAC3BC,UAAU,MACVjC,OAAQR,KAAKN,MAAMc,OACnBkC,KAAM,SAM1BlB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,GACLN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKC,OAAN,KACIR,EAAAC,EAAAC,cAACK,EAAA,EAAKE,MAAN,CAAYC,GAAG,MAAf,mBAEJV,EAAAC,EAAAC,cAACK,EAAA,EAAKI,KAAN,KACIX,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjCd,EAAAC,EAAAC,cAACa,EAAA,IAAD,CACIC,6BAA2B,EAC3BhC,OAAQR,KAAKN,MAAMc,OACnBiC,UAAU,MACVC,KAAM,IACNlB,EAAAC,EAAAC,cAACa,EAAA,OAAD,CACII,KAAK,cACLnD,SAAU,CAAEP,IAAK,WAAYC,IAAK,cAGtCsC,EAAAC,EAAAC,cAACa,EAAA,OAAD,CACII,KAAK,cACLnD,SAAU,CAAEP,IAAK,WAAYC,IAAK,cAGtCsC,EAAAC,EAAAC,cAACa,EAAA,OAAD,WAMpBf,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,GACLN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKC,OAAN,KACIR,EAAAC,EAAAC,cAACK,EAAA,EAAKE,MAAN,CAAYC,GAAG,MAAf,uBAEJV,EAAAC,EAAAC,cAACK,EAAA,EAAKI,KAAN,KACIX,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjCd,EAAAC,EAAAC,cAACa,EAAA,IAAD,CACIC,6BAA2B,EAC3BC,UAAU,MACVjC,OAAQR,KAAKN,MAAMc,OACnBoC,QAAS5C,KAAKD,aACd2C,KAAM,IAENlB,EAAAC,EAAAC,cAACa,EAAA,OAAD,CACII,KAAK,cACLnD,SAAU,CAAEP,IAAK,WAAYC,IAAK,YAClC0D,QAAS5C,KAAKP,gBAGlB+B,EAAAC,EAAAC,cAACa,EAAA,OAAD,CACII,KAAK,cACLnD,SAAU,CAAEP,IAAK,WAAYC,IAAK,YAClC0D,QAAS5C,KAAKP,gBAGlB+B,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQI,KAAK,mBAAmBC,QAAS5C,KAAKP,gBAE9C+B,EAAAC,EAAAC,cAACa,EAAA,WAAD,CACI5C,OAAQK,KAAKZ,MAAMC,aACnBwD,QAAS7C,KAAKF,kBACdgD,QAAS9C,KAAKZ,MAAMG,mBACpBiC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAK1B,KAAKZ,MAAME,cAAcqD,aAQ1DnB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,GACLN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKC,OAAN,KACIR,EAAAC,EAAAC,cAACK,EAAA,EAAKE,MAAN,CAAYC,GAAG,MAAf,eAEJV,EAAAC,EAAAC,cAACK,EAAA,EAAKI,KAAN,KACIX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMC,SAAUhD,KAAKgD,UACjBxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYR,UAAU,QAClBjB,EAAAC,EAAAC,cAACqB,EAAA,EAAKG,QAAN,CAAcC,IAAK,SAAAA,GAAG,OAAK5B,EAAKd,aAAe0C,GAAMC,KAAK,OAAOC,YAAY,+BAC7E7B,EAAAC,EAAAC,cAACuB,EAAA,EAAWK,OAAZ,KACI9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQH,KAAK,UAAb,aAIZ5B,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjCd,EAAAC,EAAAC,cAACa,EAAA,IAADiB,OAAAC,OAAA,CACIhB,UAAU,OACNzC,KAAKN,MAFb,CAGIgE,OAAQlE,EACRgD,6BAA2B,IAC3BhB,EAAAC,EAAAC,cAACa,EAAA,OAAD,CAAQ/C,SAAUA,SAMtCgC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,GACLN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKC,OAAN,KACIR,EAAAC,EAAAC,cAACK,EAAA,EAAKE,MAAN,CAAYC,GAAG,MAAf,YAEJV,EAAAC,EAAAC,cAACK,EAAA,EAAKI,KAAN,KACIX,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjCd,EAAAC,EAAAC,cAACa,EAAA,IAAD,CACIC,6BAA2B,EAC3BhC,OAAQR,KAAKN,MAAMc,OACnBiC,UAAU,MACVC,KAAM,IACNlB,EAAAC,EAAAC,cAACa,EAAA,QAAD,CACIoB,UAAU,UACVC,YAAa,IACbC,MAAO,CAAC7E,GACR8E,YAAY,UACZC,cAAe,GACfC,aAAc,SAOtCxC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,GACLN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAACK,EAAA,EAAKC,OAAN,KACIR,EAAAC,EAAAC,cAACK,EAAA,EAAKE,MAAN,CAAYC,GAAG,MAAf,aAEJV,EAAAC,EAAAC,cAACK,EAAA,EAAKI,KAAN,KACIX,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjCd,EAAAC,EAAAC,cAACa,EAAA,IAAD,CACIC,6BAA2B,EAC3BhC,OAAQR,KAAKN,MAAMc,OACnBiC,UAAU,MACVC,KAAM,IACNlB,EAAAC,EAAAC,cAACa,EAAA,SAAD,CACIoB,UAAU,UACVC,YAAa,IACbK,KAAMjF,EACN8E,YAAY,UACZC,cAAe,GACfC,aAAc,kBAnOlCE,IAAMC,WAgPfC,qCAAiB,CAC5BC,OAAQ,2CADGD,CAEZjF","file":"static/js/42.8a9262f2.chunk.js","sourcesContent":["import React from 'react';\nimport {Row, Col, Card, Form, InputGroup, Button} from 'react-bootstrap';\nimport {Map, Marker, GoogleApiWrapper, InfoWindow, Polyline, Polygon}  from 'google-maps-react';\n\nimport Aux from \"../../../hoc/_Aux\";\n\nconst polygon = [\n    { lat: 21.2105052, lng: 72.8653491 },\n    { lat: 21.2206445, lng: 72.8704506 },\n    { lat: 21.2183091, lng: 72.8631228 }\n];\n\nclass GoogleMap extends React.Component {\n\n    state = {\n        activeMarker: {},\n        selectedPlace: {},\n        showingInfoWindow: false,\n        position: null\n    };\n\n    onMarkerClick = (props, marker) =>\n        this.setState({\n            activeMarker: marker,\n            selectedPlace: props,\n            showingInfoWindow: true\n        });\n\n    onInfoWindowClose = () =>\n        this.setState({\n            activeMarker: null,\n            showingInfoWindow: false\n        });\n\n    onMapClicked = () => {\n        if (this.state.showingInfoWindow)\n            this.setState({\n                activeMarker: null,\n                showingInfoWindow: false\n            });\n    };\n\n    componentDidMount() {\n        this.renderAutoComplete();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props !== prevProps.map) this.renderAutoComplete();\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n    }\n\n    renderAutoComplete() {\n        const { google, map } = this.props;\n\n        if (!google || !map) return;\n\n        const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\n        autocomplete.bindTo('bounds', map);\n\n        autocomplete.addListener('place_changed', () => {\n            const place = autocomplete.getPlace();\n\n            if (!place.geometry) return;\n\n            if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\n            else {\n                map.setCenter(place.geometry.location);\n                map.setZoom(17);\n            }\n\n            this.setState({ position: place.geometry.location });\n        });\n    }\n\n\n    render() {\n        const { position } = this.state;\n\n        return (\n            <Aux>\n                <Row>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Basic</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        className=\"map\"\n                                        google={this.props.google}\n                                        zoom={14}\n                                    />\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Simple Markers</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        google={this.props.google}\n                                        className=\"map\"\n                                        zoom={13}>\n                                        <Marker\n                                            name=\"Codedthemes\"\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\n                                        />\n\n                                        <Marker\n                                            name=\"Roman Point\"\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\n                                        />\n\n                                        <Marker />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Click-Able Markers</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        className=\"map\"\n                                        google={this.props.google}\n                                        onClick={this.onMapClicked}\n                                        zoom={12}>\n\n                                        <Marker\n                                            name=\"Codedthemes\"\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\n                                            onClick={this.onMarkerClick}\n                                        />\n\n                                        <Marker\n                                            name=\"Roman Point\"\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\n                                            onClick={this.onMarkerClick}\n                                        />\n\n                                        <Marker name=\"Current Location\" onClick={this.onMarkerClick} />\n\n                                        <InfoWindow\n                                            marker={this.state.activeMarker}\n                                            onClose={this.onInfoWindowClose}\n                                            visible={this.state.showingInfoWindow}>\n                                            <div>\n                                                <h3>{this.state.selectedPlace.name}</h3>\n                                            </div>\n                                        </InfoWindow>\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Geo-Coding</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Form onSubmit={this.onSubmit}>\n                                    <InputGroup className=\"mb-3\">\n                                        <Form.Control ref={ref => (this.autocomplete = ref)} type='text' placeholder='Search your favorite place' />\n                                        <InputGroup.Append>\n                                            <Button type=\"submit\">Search</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                </Form>\n                                <div style={{height: '240px', width: '100%'}}>\n                                    <Map\n                                        className='map'\n                                        {...this.props}\n                                        center={position}\n                                        centerAroundCurrentLocation >\n                                        <Marker position={position} />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Polygon</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        google={this.props.google}\n                                        className=\"map\"\n                                        zoom={14}>\n                                        <Polygon\n                                            fillColor=\"#dc3545\"\n                                            fillOpacity={0.35}\n                                            paths={[polygon]}\n                                            strokeColor=\"#dc3545\"\n                                            strokeOpacity={0.8}\n                                            strokeWeight={2}\n                                        />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Polyline</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <div style={{height: '300px', width: '100%'}}>\n                                    <Map\n                                        centerAroundCurrentLocation\n                                        google={this.props.google}\n                                        className=\"map\"\n                                        zoom={14}>\n                                        <Polyline\n                                            fillColor=\"#dc3545\"\n                                            fillOpacity={0.35}\n                                            path={polygon}\n                                            strokeColor=\"#dc3545\"\n                                            strokeOpacity={0.8}\n                                            strokeWeight={5}\n                                        />\n                                    </Map>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk'\n})(GoogleMap);"],"sourceRoot":""}