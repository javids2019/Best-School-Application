{"version":3,"sources":["MyApp/auth/register.js"],"names":["Register","_useState","useState","_useState2","Object","C_MyData_FireBaseGoogle_mybestschool_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","message","setMessage","ref","firebase","firestore","collection","resetInput","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","className","type","required","placeholder","onChange","e","target","value","onClick","auth","createUserWithEmailAndPassword","then","currentUser","updateProfile","displayName","photoURL","console","log","catch","err","error","owner","uid","ownerEmail","toLowerCase","pageNewItem","role","phoneno","comments","id","uuidv4","createdAt","FieldValue","serverTimestamp","lastUpdate","where","get","snapshot","exists","doc","set","addOrUpdate","user","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","to"],"mappings":"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","file":"static/js/43.f5f9dca4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport firebase from \"../../firebase\";\nimport './../../assets/scss/style.scss';\nimport { NavLink } from 'react-router-dom';\nimport { v4 as uuidv4 } from \"uuid\"; \n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const ref = firebase.firestore().collection('users');\n\n  const register = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((currentUser) => {\n        addOrUpdate(currentUser.user);\n        resetInput();\n      })\n      .catch((err) => {\n        setMessage(err.message + \" kindly please login\");\n        console.error(err);\n      });\n  };\n\n  function updateUserProfile() {\n    var user = firebase.auth().currentUser;\n    user.updateProfile({\n      displayName: name,\n      photoURL: \"\"\n    }).then(function () {\n      console.log(\"updated profile\");\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }\n\n  function addOrUpdate(currentUser) {\n    updateUserProfile();\n    const owner = currentUser ? currentUser.uid : 'unknown';\n    const ownerEmail = currentUser ? currentUser.email : 'unknown';\n    const phoneno = '';\n    const className = '';\n    const comments = '';\n    const role = 'User';\n    const email = email.toLowerCase();\n    const pageNewItem = {\n      name,\n      email,\n      role,\n      phoneno,\n      className,\n      comments,\n      id: uuidv4(),\n      owner,\n      ownerEmail,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      lastUpdate: firebase.firestore.FieldValue.serverTimestamp(),\n    };\n\n    let usersDBQuery = ref.where('email', '==', email)\n    usersDBQuery.get()\n      .then(snapshot => {\n        if (!snapshot.exists) {\n          ref.doc(pageNewItem.id)\n            .set(pageNewItem)\n            .catch((err) => {\n              console.error(err);\n            });\n        }\n      })\n  }\n  \n  const logOut = () => {\n    firebase.auth().signOut();\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <>   <div className=\"auth-wrapper\">\n      <div className=\"auth-content\">\n        <div className=\"auth-bg\">\n          <span className=\"r\" />\n          <span className=\"r s\" />\n          <span className=\"r s\" />\n          <span className=\"r\" />\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body text-center\">\n            <div className=\"mb-4\">\n              <i className=\"feather icon-user-plus auth-icon\" />\n            </div>\n            <h3 className=\"mb-4\">Sign up</h3>\n            <div className=\"input-group mb-3\">\n              <input type=\"text\" required className=\"form-control\" placeholder=\"Username\" onChange={(e) => setName(e.target.value)} value={name} />\n            </div>\n            <div className=\"input-group mb-3\">\n              <input type=\"email\" required className=\"form-control\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n            </div>\n            <div className=\"input-group mb-4\">\n              <input type=\"password\" required className=\"form-control\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n            </div>\n            <div className=\"form-group text-center\">\n              <label className=\"text-danger\">{message}</label>\n            </div>\n            <button className=\"btn btn-primary shadow-2 mb-4\" onClick={register}>Sign up</button>\n            <p className=\"mb-0 text-muted\">Allready have an account? <NavLink to=\"/login\">Login</NavLink></p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    </>\n  );\n};\n\nexport default Register;\n\n\n// var provider = new firebase.auth.GoogleAuthProvider();\n    // provider.addScope('profile');\n    // provider.addScope('email');\n    // //provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    // firebase.auth().signInWithPopup(provider).then(function (result) {\n    //   // This gives you a Google Access Token. You can use it to access the Google API.\n    //   var token = result.credential.accessToken;\n    //   // The signed-in user info.\n    //   var user = result.user;\n    //   // [START_EXCLUDE]\n    //   document.getElementById('quickstart-oauthtoken').textContent = token;\n    //   // [END_EXCLUDE]\n    // }).catch(function (error) {\n    //   // Handle Errors here.\n    //   var errorCode = error.code;\n    //   var errorMessage = error.message;\n    //   // The email of the user's account used.\n    //   var email = error.email;\n    //   // The firebase.auth.AuthCredential type that was used.\n    //   var credential = error.credential;\n    //   // [START_EXCLUDE]\n    //   if (errorCode === 'auth/account-exists-with-different-credential') {\n    //     alert('You have already signed up with a different auth provider for that email.');\n    //     // If you are using multiple auth providers on your app you should handle linking\n    //     // the user's accounts here.\n    //   } else {\n    //     console.error(error);\n    //   }\n    //   // [END_EXCLUDE]\n    // });\n\n\n"],"sourceRoot":""}